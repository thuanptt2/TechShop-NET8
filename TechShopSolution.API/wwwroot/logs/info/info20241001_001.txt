2024-10-01 22:29:02.678 +07:00 [INF] User profile is available. Using 'C:\Users\User\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-10-01 22:29:03.178 +07:00 [INF] Initializing UI Database
2024-10-01 22:29:04.044 +07:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2024-10-01 22:29:04.065 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-10-01 22:29:04.225 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Configurations" AS "c")
2024-10-01 22:29:04.270 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:29:04.670 +07:00 [ERR] Hosting failed to start
System.IO.IOException: Failed to bind to address http://127.0.0.1:5216: address already in use.
 ---> Microsoft.AspNetCore.Connections.AddressInUseException: Only one usage of each socket address (protocol/network address/port) is normally permitted.
 ---> System.Net.Sockets.SocketException (10048): Only one usage of each socket address (protocol/network address/port) is normally permitted.
   at System.Net.Sockets.Socket.UpdateStatusAfterSocketErrorAndThrowException(SocketError error, Boolean disconnectOnFailure, String callerName)
   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Bind(EndPoint localEP)
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportOptions.CreateDefaultBoundListenSocket(EndPoint endpoint)
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketConnectionListener.Bind()
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketConnectionListener.Bind()
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportFactory.BindAsync(EndPoint endpoint, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.TransportManager.BindAsync(EndPoint endPoint, ConnectionDelegate connectionDelegate, EndpointConfig endpointConfig, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.<>c__DisplayClass28_0`1.<<StartAsync>g__OnBind|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions.BindAsync(AddressBindContext context, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.AddressesStrategy.BindAsync(AddressBindContext context, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindAsync(ListenOptions[] listenOptions, AddressBindContext context, Func`2 useHttps, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.BindAsync(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)
   at Microsoft.Extensions.Hosting.Internal.Host.<StartAsync>b__15_1(IHostedService service, CancellationToken token)
   at Microsoft.Extensions.Hosting.Internal.Host.ForeachService[T](IEnumerable`1 services, CancellationToken token, Boolean concurrent, Boolean abortOnFirstException, List`1 exceptions, Func`3 operation)
2024-10-01 22:29:49.733 +07:00 [INF] User profile is available. Using 'C:\Users\User\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-10-01 22:29:50.045 +07:00 [INF] Initializing UI Database
2024-10-01 22:29:50.686 +07:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2024-10-01 22:29:50.704 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-10-01 22:29:50.845 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Configurations" AS "c")
2024-10-01 22:29:50.880 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:29:51.187 +07:00 [ERR] Hosting failed to start
System.IO.IOException: Failed to bind to address http://127.0.0.1:5216: address already in use.
 ---> Microsoft.AspNetCore.Connections.AddressInUseException: Only one usage of each socket address (protocol/network address/port) is normally permitted.
 ---> System.Net.Sockets.SocketException (10048): Only one usage of each socket address (protocol/network address/port) is normally permitted.
   at System.Net.Sockets.Socket.UpdateStatusAfterSocketErrorAndThrowException(SocketError error, Boolean disconnectOnFailure, String callerName)
   at System.Net.Sockets.Socket.DoBind(EndPoint endPointSnapshot, SocketAddress socketAddress)
   at System.Net.Sockets.Socket.Bind(EndPoint localEP)
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportOptions.CreateDefaultBoundListenSocket(EndPoint endpoint)
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketConnectionListener.Bind()
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketConnectionListener.Bind()
   at Microsoft.AspNetCore.Server.Kestrel.Transport.Sockets.SocketTransportFactory.BindAsync(EndPoint endpoint, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Infrastructure.TransportManager.BindAsync(EndPoint endPoint, ConnectionDelegate connectionDelegate, EndpointConfig endpointConfig, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.<>c__DisplayClass28_0`1.<<StartAsync>g__OnBind|0>d.MoveNext()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindEndpointAsync(ListenOptions endpoint, AddressBindContext context, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.LocalhostListenOptions.BindAsync(AddressBindContext context, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.AddressesStrategy.BindAsync(AddressBindContext context, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.AddressBinder.BindAsync(ListenOptions[] listenOptions, AddressBindContext context, Func`2 useHttps, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.BindAsync(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.KestrelServerImpl.StartAsync[TContext](IHttpApplication`1 application, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Hosting.GenericWebHostService.StartAsync(CancellationToken cancellationToken)
   at Microsoft.Extensions.Hosting.Internal.Host.<StartAsync>b__15_1(IHostedService service, CancellationToken token)
   at Microsoft.Extensions.Hosting.Internal.Host.ForeachService[T](IEnumerable`1 services, CancellationToken token, Boolean concurrent, Boolean abortOnFirstException, List`1 exceptions, Func`3 operation)
2024-10-01 22:30:49.657 +07:00 [INF] User profile is available. Using 'C:\Users\User\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-10-01 22:30:50.211 +07:00 [INF] Initializing UI Database
2024-10-01 22:30:51.556 +07:00 [INF] Executed DbCommand (18ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2024-10-01 22:30:51.572 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-10-01 22:30:51.766 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Configurations" AS "c")
2024-10-01 22:30:51.801 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:30:51.952 +07:00 [INF] Now listening on: http://localhost:5216
2024-10-01 22:30:51.991 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:30:52.037 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:30:52.038 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:30:52.052 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-10-01 22:30:52.052 +07:00 [INF] Hosting environment: Development
2024-10-01 22:30:52.053 +07:00 [INF] Content root path: D:\Projects\TechShopSolution\TechShopSolution.API
2024-10-01 22:30:52.096 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:30:52.220 +07:00 [WRN] Failed to determine the https port for redirect.
2024-10-01 22:30:52.222 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:30:57.374 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5126.4406ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:30:57.438 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:30:57.441 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5359.8453ms
2024-10-01 22:30:57.453 +07:00 [INF] Received HTTP response headers after 5406.3457ms - 503
2024-10-01 22:30:57.454 +07:00 [INF] End processing HTTP request after 5420.6862ms - 503
2024-10-01 22:30:57.554 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:30:57.564 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:30:57.616 +07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2024-10-01 22:30:57.621 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:30:57.742 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:30:57.746 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:30:57.746 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:31:07.858 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:31:07.858 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:31:07.859 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:31:07.860 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:31:07.864 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:31:12.955 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5088.9545ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:31:12.956 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:31:12.957 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5097.3101ms
2024-10-01 22:31:12.957 +07:00 [INF] Received HTTP response headers after 5098.2648ms - 503
2024-10-01 22:31:12.957 +07:00 [INF] End processing HTTP request after 5098.8291ms - 503
2024-10-01 22:31:12.962 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:31:12.963 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:31:12.964 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:31:12.968 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:31:12.969 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:31:12.969 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:31:23.009 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:31:23.009 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:31:23.009 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:31:23.010 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:31:23.012 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:31:28.085 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5072.3281ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:31:28.085 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:31:28.085 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5075.5075ms
2024-10-01 22:31:28.085 +07:00 [INF] Received HTTP response headers after 5075.8801ms - 503
2024-10-01 22:31:28.085 +07:00 [INF] End processing HTTP request after 5076.2523ms - 503
2024-10-01 22:31:28.086 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:31:28.087 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:31:28.087 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:31:28.088 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:31:28.089 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:31:28.089 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:31:33.021 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:31:33.021 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:31:38.088 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5064.5046ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:31:38.088 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:31:38.088 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5067.689ms
2024-10-01 22:31:38.133 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:31:38.134 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:31:38.134 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:31:38.135 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:31:38.136 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:31:40.574 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:31:40.575 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:31:43.201 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5065.0062ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:31:43.202 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:31:43.202 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5066.8031ms
2024-10-01 22:31:43.202 +07:00 [INF] Received HTTP response headers after 5067.4295ms - 503
2024-10-01 22:31:43.202 +07:00 [INF] End processing HTTP request after 5067.8853ms - 503
2024-10-01 22:31:43.203 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:31:43.203 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:31:43.204 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:31:43.206 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:31:43.207 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:31:43.207 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:31:44.442 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health-ui - null null
2024-10-01 22:31:44.442 +07:00 [INF] Executing endpoint 'HTTP: GET /health-ui'
2024-10-01 22:31:44.444 +07:00 [INF] Executed endpoint 'HTTP: GET /health-ui'
2024-10-01 22:31:44.444 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health-ui - 200 null text/html 2.3122ms
2024-10-01 22:31:44.473 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/ui/resources/healthchecksui-min.css - null null
2024-10-01 22:31:44.473 +07:00 [INF] Executing endpoint 'HTTP: GET /ui/resources/healthchecksui-min.css'
2024-10-01 22:31:44.474 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/ui/resources/vendors-dll.js - null null
2024-10-01 22:31:44.474 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/ui/resources/healthchecks-bundle.js - null null
2024-10-01 22:31:44.474 +07:00 [INF] Executed endpoint 'HTTP: GET /ui/resources/healthchecksui-min.css'
2024-10-01 22:31:44.474 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/ui/resources/healthchecksui-min.css - 200 null text/css 1.5459ms
2024-10-01 22:31:44.476 +07:00 [INF] Executing endpoint 'HTTP: GET /ui/resources/vendors-dll.js'
2024-10-01 22:31:44.476 +07:00 [INF] Executing endpoint 'HTTP: GET /ui/resources/healthchecks-bundle.js'
2024-10-01 22:31:44.481 +07:00 [INF] Executed endpoint 'HTTP: GET /ui/resources/vendors-dll.js'
2024-10-01 22:31:44.481 +07:00 [INF] Executed endpoint 'HTTP: GET /ui/resources/healthchecks-bundle.js'
2024-10-01 22:31:44.481 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/ui/resources/vendors-dll.js - 200 null text/javascript 7.2051ms
2024-10-01 22:31:44.481 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/ui/resources/healthchecks-bundle.js - 200 null text/javascript 7.1366ms
2024-10-01 22:31:44.538 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/healthchecks-api/ui-settings - null null
2024-10-01 22:31:44.538 +07:00 [INF] Executing endpoint '/healthchecks-api/ui-settings'
2024-10-01 22:31:44.543 +07:00 [INF] Executed endpoint '/healthchecks-api/ui-settings'
2024-10-01 22:31:44.543 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/healthchecks-api/ui-settings - 200 null application/json; charset=utf-8 5.1574ms
2024-10-01 22:31:44.555 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/healthchecks-api - null null
2024-10-01 22:31:44.555 +07:00 [INF] Executing endpoint 'HealthChecks UI Api'
2024-10-01 22:31:44.559 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:31:44.571 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__item_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."Duration", "h"."HealthCheckExecutionId", "h"."Name", "h"."Status", "h"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__item_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionEntries" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Name"
2024-10-01 22:31:44.581 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__execution_Id_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status"
FROM "HealthCheckExecutionHistories" AS "h"
WHERE "h"."HealthCheckExecutionId" = @__execution_Id_0
ORDER BY "h"."On" DESC
LIMIT @__p_1
2024-10-01 22:31:44.593 +07:00 [INF] Executed endpoint 'HealthChecks UI Api'
2024-10-01 22:31:44.594 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/healthchecks-api - 200 null application/json; charset=utf-8 39.1975ms
2024-10-01 22:31:45.628 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5052.158ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:31:45.628 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:31:45.628 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5054.2116ms
2024-10-01 22:31:53.258 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:31:53.259 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:31:53.259 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:31:53.259 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:31:53.259 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:31:54.441 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/swagger - null null
2024-10-01 22:31:54.442 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/healthchecks-api/ui-settings - null null
2024-10-01 22:31:54.443 +07:00 [INF] Executing endpoint '/healthchecks-api/ui-settings'
2024-10-01 22:31:54.443 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/swagger - 301 0 null 1.7687ms
2024-10-01 22:31:54.443 +07:00 [INF] Executed endpoint '/healthchecks-api/ui-settings'
2024-10-01 22:31:54.443 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/healthchecks-api - null null
2024-10-01 22:31:54.444 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/healthchecks-api/ui-settings - 200 null application/json; charset=utf-8 1.2274ms
2024-10-01 22:31:54.444 +07:00 [INF] Executing endpoint 'HealthChecks UI Api'
2024-10-01 22:31:54.447 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:31:54.448 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__item_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."Duration", "h"."HealthCheckExecutionId", "h"."Name", "h"."Status", "h"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__item_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionEntries" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Name"
2024-10-01 22:31:54.449 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/swagger/index.html - null null
2024-10-01 22:31:54.450 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__execution_Id_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status"
FROM "HealthCheckExecutionHistories" AS "h"
WHERE "h"."HealthCheckExecutionId" = @__execution_Id_0
ORDER BY "h"."On" DESC
LIMIT @__p_1
2024-10-01 22:31:54.451 +07:00 [INF] Executed endpoint 'HealthChecks UI Api'
2024-10-01 22:31:54.451 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/healthchecks-api - 200 null application/json; charset=utf-8 7.4286ms
2024-10-01 22:31:54.501 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/swagger/index.html - 200 null text/html;charset=utf-8 52.0914ms
2024-10-01 22:31:54.536 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/swagger/swagger-ui-bundle.js - null null
2024-10-01 22:31:54.536 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/swagger/swagger-ui.css - null null
2024-10-01 22:31:54.536 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/swagger/swagger-ui-standalone-preset.js - null null
2024-10-01 22:31:54.567 +07:00 [INF] Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'
2024-10-01 22:31:54.567 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/swagger/swagger-ui.css - 200 143943 text/css 31.5355ms
2024-10-01 22:31:54.583 +07:00 [INF] Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'
2024-10-01 22:31:54.583 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/swagger/swagger-ui-standalone-preset.js - 200 339486 text/javascript 47.1023ms
2024-10-01 22:31:54.598 +07:00 [INF] Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'
2024-10-01 22:31:54.598 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/swagger/swagger-ui-bundle.js - 200 1096145 text/javascript 62.3236ms
2024-10-01 22:31:54.747 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/swagger/v1/swagger.json - null null
2024-10-01 22:31:54.824 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 76.338ms
2024-10-01 22:31:58.318 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5057.8728ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:31:58.318 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:31:58.318 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5059.1242ms
2024-10-01 22:31:58.318 +07:00 [INF] Received HTTP response headers after 5059.4749ms - 503
2024-10-01 22:31:58.318 +07:00 [INF] End processing HTTP request after 5059.7125ms - 503
2024-10-01 22:31:58.319 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:31:58.319 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:31:58.320 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:31:58.321 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:31:58.321 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:31:58.321 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:32:08.366 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:32:08.366 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:32:08.366 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:32:08.367 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:32:08.367 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:32:13.035 +07:00 [INF] Request starting HTTP/1.1 POST http://localhost:5216/api/User/login - application/json 125
2024-10-01 22:32:13.037 +07:00 [INF] Executing endpoint 'TechShopSolution.API.Controllers.UserController.Login (TechShopSolution.API)'
2024-10-01 22:32:13.053 +07:00 [INF] Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Microsoft.AspNetCore.Identity.Data.LoginRequest) on controller TechShopSolution.API.Controllers.UserController (TechShopSolution.API).
2024-10-01 22:32:13.124 +07:00 [INF] Executing action method TechShopSolution.API.Controllers.UserController.Login (TechShopSolution.API) - Validation state: "Valid"
2024-10-01 22:32:13.455 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5087.4931ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:32:13.456 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:32:13.456 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5088.8358ms
2024-10-01 22:32:13.456 +07:00 [INF] Received HTTP response headers after 5089.2711ms - 503
2024-10-01 22:32:13.456 +07:00 [INF] End processing HTTP request after 5089.5652ms - 503
2024-10-01 22:32:13.457 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:32:13.457 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:32:13.457 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:32:13.458 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:32:13.458 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:32:13.459 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:32:13.536 +07:00 [INF] Executed DbCommand (111ms) [Parameters=[@__email_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[UserName] = @__email_0
2024-10-01 22:32:13.684 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2024-10-01 22:32:13.743 +07:00 [INF] Executed action method TechShopSolution.API.Controllers.UserController.Login (TechShopSolution.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 616.1235ms.
2024-10-01 22:32:13.747 +07:00 [INF] Executing OkObjectResult, writing value of type 'TechShopSolution.Application.Models.Common.StandardResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-10-01 22:32:13.752 +07:00 [INF] Executed action TechShopSolution.API.Controllers.UserController.Login (TechShopSolution.API) in 696.1821ms
2024-10-01 22:32:13.753 +07:00 [INF] Executed endpoint 'TechShopSolution.API.Controllers.UserController.Login (TechShopSolution.API)'
2024-10-01 22:32:13.755 +07:00 [INF] Request finished HTTP/1.1 POST http://localhost:5216/api/User/login - 200 null application/json; charset=utf-8 720.232ms
2024-10-01 22:32:23.498 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:32:23.498 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:32:23.498 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:32:23.499 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:32:23.499 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:32:28.565 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5065.4616ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:32:28.565 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:32:28.565 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5066.6954ms
2024-10-01 22:32:28.565 +07:00 [INF] Received HTTP response headers after 5067.0039ms - 503
2024-10-01 22:32:28.566 +07:00 [INF] End processing HTTP request after 5067.2615ms - 503
2024-10-01 22:32:28.566 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:32:28.566 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:32:28.567 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:32:28.568 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:32:28.568 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:32:28.568 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:32:38.606 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:32:38.606 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:32:38.606 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:32:38.606 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:32:38.607 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:32:41.583 +07:00 [INF] Application is shutting down...
2024-10-01 22:32:43.684 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5076.8383ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:32:43.684 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:32:43.684 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5078.0124ms
2024-10-01 22:32:43.684 +07:00 [INF] Received HTTP response headers after 5078.3998ms - 503
2024-10-01 22:32:43.685 +07:00 [INF] End processing HTTP request after 5078.6121ms - 503
2024-10-01 22:32:43.685 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:32:43.686 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:32:43.686 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:32:43.687 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:32:43.687 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:32:43.687 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:33:02.946 +07:00 [INF] User profile is available. Using 'C:\Users\User\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-10-01 22:33:03.307 +07:00 [INF] Initializing UI Database
2024-10-01 22:33:03.975 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2024-10-01 22:33:03.993 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-10-01 22:33:04.136 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Configurations" AS "c")
2024-10-01 22:33:04.169 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:33:04.561 +07:00 [INF] Now listening on: https://localhost:7042
2024-10-01 22:33:04.563 +07:00 [INF] Now listening on: http://localhost:5216
2024-10-01 22:33:04.656 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:33:04.717 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:33:04.725 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:33:04.797 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-10-01 22:33:04.804 +07:00 [INF] Hosting environment: Development
2024-10-01 22:33:04.809 +07:00 [INF] Content root path: D:\Projects\TechShopSolution\TechShopSolution.API
2024-10-01 22:33:05.158 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:33:05.158 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7042/ - null null
2024-10-01 22:33:05.457 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:33:05.462 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7042/ - 404 0 null 333.428ms
2024-10-01 22:33:05.504 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7042/, Response status code: 404
2024-10-01 22:33:10.704 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5210.6078ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:33:10.749 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:33:10.751 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5627.9942ms
2024-10-01 22:33:10.762 +07:00 [INF] Received HTTP response headers after 6028.3278ms - 503
2024-10-01 22:33:10.764 +07:00 [INF] End processing HTTP request after 6059.6905ms - 503
2024-10-01 22:33:10.849 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:33:10.862 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:33:10.918 +07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2024-10-01 22:33:10.926 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:33:11.041 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:33:11.046 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:33:11.049 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:33:11.975 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7042/swagger/index.html - null null
2024-10-01 22:33:12.037 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7042/swagger/index.html - 200 null text/html;charset=utf-8 61.7271ms
2024-10-01 22:33:12.175 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7042/swagger/v1/swagger.json - null null
2024-10-01 22:33:12.277 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7042/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 101.7502ms
2024-10-01 22:33:21.256 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:33:21.259 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:33:21.260 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:33:21.261 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:33:21.262 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:33:26.351 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5085.0955ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:33:26.353 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:33:26.353 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5091.946ms
2024-10-01 22:33:26.356 +07:00 [INF] Received HTTP response headers after 5093.5729ms - 503
2024-10-01 22:33:26.358 +07:00 [INF] End processing HTTP request after 5099.2642ms - 503
2024-10-01 22:33:26.367 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:33:26.369 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:33:26.373 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:33:26.378 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:33:26.380 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:33:26.382 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:33:36.427 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:33:36.429 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:33:36.431 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:33:36.432 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:33:36.432 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:33:41.523 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5088.0418ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:33:41.524 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:33:41.524 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5092.0463ms
2024-10-01 22:33:41.525 +07:00 [INF] Received HTTP response headers after 5093.3245ms - 503
2024-10-01 22:33:41.527 +07:00 [INF] End processing HTTP request after 5098.3012ms - 503
2024-10-01 22:33:41.530 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:33:41.531 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:33:41.533 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:33:41.536 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:33:41.538 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:33:41.539 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:33:51.576 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:33:51.578 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:33:51.580 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:33:51.581 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:33:51.581 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:33:56.645 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5061.7716ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:33:56.646 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:33:56.646 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5064.9062ms
2024-10-01 22:33:56.647 +07:00 [INF] Received HTTP response headers after 5066.1395ms - 503
2024-10-01 22:33:56.649 +07:00 [INF] End processing HTTP request after 5071.2527ms - 503
2024-10-01 22:33:56.652 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:33:56.653 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:33:56.655 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:33:56.658 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:33:56.660 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:33:56.662 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:34:06.799 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:34:06.801 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:34:06.802 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:34:06.803 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:34:06.803 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:34:11.888 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5081.6857ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:34:11.888 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:34:11.889 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5085.6366ms
2024-10-01 22:34:11.890 +07:00 [INF] Received HTTP response headers after 5086.4096ms - 503
2024-10-01 22:34:11.892 +07:00 [INF] End processing HTTP request after 5091.0349ms - 503
2024-10-01 22:34:11.895 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:34:11.898 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:34:11.901 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:34:11.905 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:34:11.908 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:34:11.912 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:34:21.948 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:34:21.950 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:34:21.951 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:34:21.952 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:34:21.952 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:34:27.024 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5068.7027ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:34:27.024 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:34:27.025 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5072.7099ms
2024-10-01 22:34:27.027 +07:00 [INF] Received HTTP response headers after 5073.7315ms - 503
2024-10-01 22:34:27.029 +07:00 [INF] End processing HTTP request after 5078.939ms - 503
2024-10-01 22:34:27.032 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:34:27.034 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:34:27.037 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:34:27.040 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:34:27.042 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:34:27.044 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:34:37.092 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:34:37.094 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:34:37.095 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:34:37.096 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:34:37.097 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:34:42.165 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5065.7218ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:34:42.166 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:34:42.166 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5069.7856ms
2024-10-01 22:34:42.168 +07:00 [INF] Received HTTP response headers after 5070.5517ms - 503
2024-10-01 22:34:42.171 +07:00 [INF] End processing HTTP request after 5076.2833ms - 503
2024-10-01 22:34:42.175 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:34:42.178 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:34:42.181 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:34:42.184 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:34:42.186 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:34:42.189 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:34:52.232 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:34:52.235 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:34:52.237 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:34:52.238 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:34:52.238 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:34:57.322 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5081.0753ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:34:57.322 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:34:57.323 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5084.6641ms
2024-10-01 22:34:57.325 +07:00 [INF] Received HTTP response headers after 5085.7669ms - 503
2024-10-01 22:34:57.327 +07:00 [INF] End processing HTTP request after 5092.26ms - 503
2024-10-01 22:34:57.329 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:34:57.331 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:34:57.333 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:34:57.336 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:34:57.337 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:34:57.339 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:35:07.380 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:35:07.381 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:35:07.383 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:35:07.388 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:35:07.388 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:35:12.480 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5089.2872ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:35:12.481 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:35:12.481 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5092.9123ms
2024-10-01 22:35:12.483 +07:00 [INF] Received HTTP response headers after 5098.882ms - 503
2024-10-01 22:35:12.486 +07:00 [INF] End processing HTTP request after 5103.389ms - 503
2024-10-01 22:35:12.489 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:35:12.490 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:35:12.493 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:35:12.495 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:35:12.497 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:35:12.499 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:35:22.546 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:35:22.548 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:35:22.549 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:35:22.551 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:35:22.551 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:35:27.622 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5069.2166ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:35:27.623 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:35:27.623 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5072.3223ms
2024-10-01 22:35:27.625 +07:00 [INF] Received HTTP response headers after 5073.2585ms - 503
2024-10-01 22:35:27.627 +07:00 [INF] End processing HTTP request after 5078.4816ms - 503
2024-10-01 22:35:27.629 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:35:27.630 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:35:27.632 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:35:27.634 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:35:27.636 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:35:27.637 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:35:37.679 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:35:37.685 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:35:37.687 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:35:37.689 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:35:37.689 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:35:42.774 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5082.5645ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:35:42.775 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:35:42.775 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5086.5296ms
2024-10-01 22:35:42.777 +07:00 [INF] Received HTTP response headers after 5087.5999ms - 503
2024-10-01 22:35:42.778 +07:00 [INF] End processing HTTP request after 5097.0234ms - 503
2024-10-01 22:35:42.781 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:35:42.782 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:35:42.784 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:35:42.787 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:35:42.788 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:35:42.790 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:35:52.834 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:35:52.835 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:35:52.837 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:35:52.838 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:35:52.838 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:35:57.913 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5073.0229ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:35:57.914 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:35:57.914 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5076.6194ms
2024-10-01 22:35:57.916 +07:00 [INF] Received HTTP response headers after 5077.3792ms - 503
2024-10-01 22:35:57.918 +07:00 [INF] End processing HTTP request after 5082.847ms - 503
2024-10-01 22:35:57.920 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:35:57.928 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:35:57.932 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:35:57.935 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:35:57.938 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:35:57.943 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:36:07.990 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:36:07.991 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:36:07.993 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:36:07.994 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:36:07.994 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:37:05.526 +07:00 [INF] User profile is available. Using 'C:\Users\User\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-10-01 22:37:05.907 +07:00 [INF] Initializing UI Database
2024-10-01 22:37:06.564 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2024-10-01 22:37:06.581 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-10-01 22:37:06.725 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Configurations" AS "c")
2024-10-01 22:37:06.756 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:37:07.038 +07:00 [INF] Now listening on: https://localhost:7042
2024-10-01 22:37:07.040 +07:00 [INF] Now listening on: http://localhost:5216
2024-10-01 22:37:07.081 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:37:07.112 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:37:07.115 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:37:07.152 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-10-01 22:37:07.156 +07:00 [INF] Hosting environment: Development
2024-10-01 22:37:07.159 +07:00 [INF] Content root path: D:\Projects\TechShopSolution\TechShopSolution.API
2024-10-01 22:37:07.336 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:37:07.426 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7042/ - null null
2024-10-01 22:37:07.594 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:37:07.598 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7042/ - 404 0 null 172.4575ms
2024-10-01 22:37:07.643 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7042/, Response status code: 404
2024-10-01 22:37:11.511 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7042/swagger/index.html - null null
2024-10-01 22:37:11.579 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7042/swagger/index.html - 200 null text/html;charset=utf-8 67.4009ms
2024-10-01 22:37:11.707 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7042/swagger/v1/swagger.json - null null
2024-10-01 22:37:11.808 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7042/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 100.8566ms
2024-10-01 22:37:12.774 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5144.5632ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:37:12.808 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:37:12.808 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5532.774ms
2024-10-01 22:37:12.819 +07:00 [INF] Received HTTP response headers after 5696.5394ms - 503
2024-10-01 22:37:12.821 +07:00 [INF] End processing HTTP request after 5716.4308ms - 503
2024-10-01 22:37:12.905 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:37:12.917 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:37:12.968 +07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2024-10-01 22:37:12.975 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:37:13.091 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:37:13.097 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:37:13.099 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:37:23.316 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:37:23.319 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:37:23.320 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:37:23.321 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:37:23.322 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:37:28.417 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5091.9892ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:37:28.418 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:37:28.418 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5097.3354ms
2024-10-01 22:37:28.422 +07:00 [INF] Received HTTP response headers after 5099.0911ms - 503
2024-10-01 22:37:28.424 +07:00 [INF] End processing HTTP request after 5104.7791ms - 503
2024-10-01 22:37:28.430 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:37:28.432 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:37:28.435 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:37:28.439 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:37:28.441 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:37:28.443 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:37:38.224 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7042/api/User/login - application/json 125
2024-10-01 22:37:38.232 +07:00 [INF] Executing endpoint 'TechShopSolution.API.Controllers.UserController.Login (TechShopSolution.API)'
2024-10-01 22:37:38.257 +07:00 [INF] Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Microsoft.AspNetCore.Identity.Data.LoginRequest) on controller TechShopSolution.API.Controllers.UserController (TechShopSolution.API).
2024-10-01 22:37:38.350 +07:00 [INF] Executing action method TechShopSolution.API.Controllers.UserController.Login (TechShopSolution.API) - Validation state: "Valid"
2024-10-01 22:37:38.486 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:37:38.489 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:37:38.491 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:37:38.492 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:37:38.493 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:37:38.761 +07:00 [INF] Executed DbCommand (76ms) [Parameters=[@__email_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[UserName] = @__email_0
2024-10-01 22:37:38.935 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2024-10-01 22:37:39.007 +07:00 [INF] Executed action method TechShopSolution.API.Controllers.UserController.Login (TechShopSolution.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 653.7535ms.
2024-10-01 22:37:39.012 +07:00 [INF] Executing OkObjectResult, writing value of type 'TechShopSolution.Application.Models.Common.StandardResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-10-01 22:37:39.021 +07:00 [INF] Executed action TechShopSolution.API.Controllers.UserController.Login (TechShopSolution.API) in 760.5398ms
2024-10-01 22:37:39.021 +07:00 [INF] Executed endpoint 'TechShopSolution.API.Controllers.UserController.Login (TechShopSolution.API)'
2024-10-01 22:37:39.024 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7042/api/User/login - 200 null application/json; charset=utf-8 800.7112ms
2024-10-01 22:37:43.592 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5097.3884ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:37:43.593 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:37:43.593 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5101.3221ms
2024-10-01 22:37:43.595 +07:00 [INF] Received HTTP response headers after 5102.1521ms - 503
2024-10-01 22:37:43.597 +07:00 [INF] End processing HTTP request after 5108.7213ms - 503
2024-10-01 22:37:43.600 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:37:43.601 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:37:43.604 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:37:43.607 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:37:43.608 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:37:43.610 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:37:53.649 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:37:53.651 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:37:53.652 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:37:53.654 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:37:53.654 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:37:58.744 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5087.701ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:37:58.744 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:37:58.745 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5091.0298ms
2024-10-01 22:37:58.746 +07:00 [INF] Received HTTP response headers after 5091.9159ms - 503
2024-10-01 22:37:58.747 +07:00 [INF] End processing HTTP request after 5096.246ms - 503
2024-10-01 22:37:58.750 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:37:58.752 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:37:58.754 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:37:58.757 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:37:58.758 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:37:58.760 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:38:08.130 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7042/api/v1/Product/GetAll - null null
2024-10-01 22:38:08.179 +07:00 [INF] Executing endpoint 'TechShopSolution.API.Controllers.ProductController.GetAllV1 (TechShopSolution.API)'
2024-10-01 22:38:08.182 +07:00 [INF] Route matched with {action = "GetAllV1", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllV1() on controller TechShopSolution.API.Controllers.ProductController (TechShopSolution.API).
2024-10-01 22:38:08.183 +07:00 [INF] Executing action method TechShopSolution.API.Controllers.ProductController.GetAllV1 (TechShopSolution.API) - Validation state: "Valid"
2024-10-01 22:38:08.275 +07:00 [INF] Getting all products
2024-10-01 22:38:08.345 +07:00 [INF] Executed DbCommand (25ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BestSeller], [p].[BrandId], [p].[Code], [p].[CreateAt], [p].[DeleteAt], [p].[Descriptions], [p].[Featured], [p].[Image], [p].[Instock], [p].[IsActive], [p].[IsDelete], [p].[MetaDescriptions], [p].[MetaKeywords], [p].[MetaTitle], [p].[MoreImages], [p].[Name], [p].[PromotionPrice], [p].[ShortDesc], [p].[Slug], [p].[Specifications], [p].[UnitPrice], [p].[UpdateAt], [p].[ViewCount], [p].[Warranty], [b].[Id], [t].[CateId], [t].[ProductId], [t].[Id], [t].[CateName], [t].[CateSlug], [t].[CreateAt], [t].[DeleteAt], [t].[IsActive], [t].[IsDelete], [t].[MetaDescriptions], [t].[MetaKeywords], [t].[MetaTitle], [t].[ParentId], [t].[UpdateAt], [b].[BrandName], [b].[BrandSlug], [b].[CreateAt], [b].[DeleteAt], [b].[IsActive], [b].[IsDelete], [b].[MetaDescriptions], [b].[MetaKeywords], [b].[MetaTitle], [b].[UpdateAt]
FROM [Product] AS [p]
INNER JOIN [Brand] AS [b] ON [p].[BrandId] = [b].[Id]
LEFT JOIN (
    SELECT [c].[CateId], [c].[ProductId], [c0].[Id], [c0].[CateName], [c0].[CateSlug], [c0].[CreateAt], [c0].[DeleteAt], [c0].[IsActive], [c0].[IsDelete], [c0].[MetaDescriptions], [c0].[MetaKeywords], [c0].[MetaTitle], [c0].[ParentId], [c0].[UpdateAt]
    FROM [CategoryProduct] AS [c]
    INNER JOIN [Category] AS [c0] ON [c].[CateId] = [c0].[Id]
) AS [t] ON [p].[Id] = [t].[ProductId]
ORDER BY [p].[Id], [b].[Id], [t].[CateId], [t].[ProductId]
2024-10-01 22:38:08.513 +07:00 [INF] Executed action method TechShopSolution.API.Controllers.ProductController.GetAllV1 (TechShopSolution.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 330.0224ms.
2024-10-01 22:38:08.513 +07:00 [INF] Executing OkObjectResult, writing value of type 'TechShopSolution.Application.Models.Common.StandardResponse`1[[System.Collections.Generic.IEnumerable`1[[TechShopSolution.Application.Models.Products.ProductDTO, TechShopSolution.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-10-01 22:38:08.533 +07:00 [INF] Executed action TechShopSolution.API.Controllers.ProductController.GetAllV1 (TechShopSolution.API) in 350.9124ms
2024-10-01 22:38:08.534 +07:00 [INF] Executed endpoint 'TechShopSolution.API.Controllers.ProductController.GetAllV1 (TechShopSolution.API)'
2024-10-01 22:38:08.534 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7042/api/v1/Product/GetAll - 200 null application/json; charset=utf-8 404.3575ms
2024-10-01 22:38:08.912 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:38:08.914 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:38:08.916 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:38:08.918 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:38:08.918 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:38:14.099 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5178.5283ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:38:14.100 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:38:14.100 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5181.8893ms
2024-10-01 22:38:14.101 +07:00 [INF] Received HTTP response headers after 5183.235ms - 503
2024-10-01 22:38:14.103 +07:00 [INF] End processing HTTP request after 5189.4178ms - 503
2024-10-01 22:38:14.105 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:38:14.107 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:38:14.109 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:38:14.111 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:38:14.113 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:38:14.115 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:38:24.151 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:38:24.153 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:38:24.154 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:38:24.155 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:38:24.156 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:38:29.317 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5158.9972ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:38:29.318 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:38:29.318 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5163.0008ms
2024-10-01 22:38:29.320 +07:00 [INF] Received HTTP response headers after 5163.7987ms - 503
2024-10-01 22:38:29.321 +07:00 [INF] End processing HTTP request after 5168.643ms - 503
2024-10-01 22:38:29.323 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:38:29.325 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:38:29.327 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:38:29.331 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:38:29.333 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:38:29.334 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:38:39.380 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:38:39.382 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:38:39.383 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:38:39.385 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:38:39.385 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:38:44.471 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5084.3109ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:38:44.472 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:38:44.472 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5087.5937ms
2024-10-01 22:38:44.473 +07:00 [INF] Received HTTP response headers after 5088.4148ms - 503
2024-10-01 22:38:44.475 +07:00 [INF] End processing HTTP request after 5094.2632ms - 503
2024-10-01 22:38:44.478 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:38:44.479 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:38:44.482 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:38:44.484 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:38:44.485 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:38:44.487 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:38:54.527 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:38:54.528 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:38:54.530 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:38:54.531 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:38:54.531 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:38:59.619 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5084.8902ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:38:59.620 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:38:59.620 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5088.7542ms
2024-10-01 22:38:59.621 +07:00 [INF] Received HTTP response headers after 5089.7329ms - 503
2024-10-01 22:38:59.623 +07:00 [INF] End processing HTTP request after 5094.5372ms - 503
2024-10-01 22:38:59.625 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:38:59.627 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:38:59.629 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:38:59.631 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:38:59.641 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:38:59.644 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:39:09.685 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:39:09.686 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:39:09.688 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:39:09.693 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:39:09.693 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:39:14.786 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5090.32ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:39:14.786 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:39:14.787 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5093.8204ms
2024-10-01 22:39:14.789 +07:00 [INF] Received HTTP response headers after 5099.0776ms - 503
2024-10-01 22:39:14.791 +07:00 [INF] End processing HTTP request after 5104.2917ms - 503
2024-10-01 22:39:14.794 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:39:14.844 +07:00 [INF] Executed DbCommand (21ms) [Parameters=[@p0='?' (Size = 11), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Failures" ("HealthCheckName", "IsUpAndRunning", "LastNotified")
VALUES (@p0, @p1, @p2)
RETURNING "Id";
2024-10-01 22:39:14.890 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:39:14.892 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:39:14.894 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:39:14.896 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:39:23.719 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7042/api/v1/Product/Update - application/json 404
2024-10-01 22:39:23.723 +07:00 [INF] Executing endpoint 'TechShopSolution.API.Controllers.ProductController.Update (TechShopSolution.API)'
2024-10-01 22:39:23.728 +07:00 [INF] Route matched with {action = "Update", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Update(TechShopSolution.Application.Commands.Products.UpdateProduct.UpdateProductCommand) on controller TechShopSolution.API.Controllers.ProductController (TechShopSolution.API).
2024-10-01 22:39:23.781 +07:00 [INF] Executing action method TechShopSolution.API.Controllers.ProductController.Update (TechShopSolution.API) - Validation state: "Valid"
2024-10-01 22:39:23.786 +07:00 [INF] Updating a product with id: 0
2024-10-01 22:39:23.858 +07:00 [INF] Executed DbCommand (14ms) [Parameters=[@__id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[BestSeller], [t].[BrandId], [t].[Code], [t].[CreateAt], [t].[DeleteAt], [t].[Descriptions], [t].[Featured], [t].[Image], [t].[Instock], [t].[IsActive], [t].[IsDelete], [t].[MetaDescriptions], [t].[MetaKeywords], [t].[MetaTitle], [t].[MoreImages], [t].[Name], [t].[PromotionPrice], [t].[ShortDesc], [t].[Slug], [t].[Specifications], [t].[UnitPrice], [t].[UpdateAt], [t].[ViewCount], [t].[Warranty], [t].[Id0], [t0].[CateId], [t0].[ProductId], [t0].[Id], [t0].[CateName], [t0].[CateSlug], [t0].[CreateAt], [t0].[DeleteAt], [t0].[IsActive], [t0].[IsDelete], [t0].[MetaDescriptions], [t0].[MetaKeywords], [t0].[MetaTitle], [t0].[ParentId], [t0].[UpdateAt], [t].[BrandName], [t].[BrandSlug], [t].[CreateAt0], [t].[DeleteAt0], [t].[IsActive0], [t].[IsDelete0], [t].[MetaDescriptions0], [t].[MetaKeywords0], [t].[MetaTitle0], [t].[UpdateAt0]
FROM (
    SELECT TOP(1) [p].[Id], [p].[BestSeller], [p].[BrandId], [p].[Code], [p].[CreateAt], [p].[DeleteAt], [p].[Descriptions], [p].[Featured], [p].[Image], [p].[Instock], [p].[IsActive], [p].[IsDelete], [p].[MetaDescriptions], [p].[MetaKeywords], [p].[MetaTitle], [p].[MoreImages], [p].[Name], [p].[PromotionPrice], [p].[ShortDesc], [p].[Slug], [p].[Specifications], [p].[UnitPrice], [p].[UpdateAt], [p].[ViewCount], [p].[Warranty], [b].[Id] AS [Id0], [b].[BrandName], [b].[BrandSlug], [b].[CreateAt] AS [CreateAt0], [b].[DeleteAt] AS [DeleteAt0], [b].[IsActive] AS [IsActive0], [b].[IsDelete] AS [IsDelete0], [b].[MetaDescriptions] AS [MetaDescriptions0], [b].[MetaKeywords] AS [MetaKeywords0], [b].[MetaTitle] AS [MetaTitle0], [b].[UpdateAt] AS [UpdateAt0]
    FROM [Product] AS [p]
    INNER JOIN [Brand] AS [b] ON [p].[BrandId] = [b].[Id]
    WHERE [p].[Id] = @__id_0
) AS [t]
LEFT JOIN (
    SELECT [c].[CateId], [c].[ProductId], [c0].[Id], [c0].[CateName], [c0].[CateSlug], [c0].[CreateAt], [c0].[DeleteAt], [c0].[IsActive], [c0].[IsDelete], [c0].[MetaDescriptions], [c0].[MetaKeywords], [c0].[MetaTitle], [c0].[ParentId], [c0].[UpdateAt]
    FROM [CategoryProduct] AS [c]
    INNER JOIN [Category] AS [c0] ON [c].[CateId] = [c0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ProductId]
ORDER BY [t].[Id], [t].[Id0], [t0].[CateId], [t0].[ProductId]
2024-10-01 22:39:23.860 +07:00 [WRN] Product with id: 0 not found
2024-10-01 22:39:23.861 +07:00 [INF] Executed action method TechShopSolution.API.Controllers.ProductController.Update (TechShopSolution.API), returned result Microsoft.AspNetCore.Mvc.NotFoundObjectResult in 80.3388ms.
2024-10-01 22:39:23.861 +07:00 [INF] Executing NotFoundObjectResult, writing value of type 'TechShopSolution.Application.Models.Common.StandardResponse`1[[System.Object, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-10-01 22:39:23.863 +07:00 [INF] Executed action TechShopSolution.API.Controllers.ProductController.Update (TechShopSolution.API) in 134.7579ms
2024-10-01 22:39:23.863 +07:00 [INF] Executed endpoint 'TechShopSolution.API.Controllers.ProductController.Update (TechShopSolution.API)'
2024-10-01 22:39:23.863 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7042/api/v1/Product/Update - 404 null application/json; charset=utf-8 144.6279ms
2024-10-01 22:39:24.935 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:39:24.937 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:39:24.939 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:39:24.941 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:39:24.941 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:39:30.017 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5074.0799ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:39:30.018 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:39:30.018 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5077.7755ms
2024-10-01 22:39:30.020 +07:00 [INF] Received HTTP response headers after 5078.7893ms - 503
2024-10-01 22:39:30.022 +07:00 [INF] End processing HTTP request after 5084.8352ms - 503
2024-10-01 22:39:30.025 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:39:30.026 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:39:30.029 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:39:30.031 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:39:30.033 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:39:30.035 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:39:40.076 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:39:40.078 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:39:40.079 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:39:40.080 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:39:40.080 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:39:59.634 +07:00 [INF] User profile is available. Using 'C:\Users\User\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-10-01 22:39:59.842 +07:00 [INF] Initializing UI Database
2024-10-01 22:40:00.344 +07:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2024-10-01 22:40:00.361 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-10-01 22:40:00.488 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Configurations" AS "c")
2024-10-01 22:40:00.513 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:40:00.634 +07:00 [INF] Now listening on: http://localhost:5216
2024-10-01 22:40:00.660 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:40:00.672 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:40:00.672 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:40:00.686 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-10-01 22:40:00.687 +07:00 [INF] Hosting environment: Development
2024-10-01 22:40:00.687 +07:00 [INF] Content root path: D:\Projects\TechShopSolution\TechShopSolution.API
2024-10-01 22:40:00.718 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:40:00.762 +07:00 [WRN] Failed to determine the https port for redirect.
2024-10-01 22:40:00.763 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:40:05.858 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5078.6937ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:40:05.894 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:40:05.896 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5188.8415ms
2024-10-01 22:40:05.903 +07:00 [INF] Received HTTP response headers after 5225.7994ms - 503
2024-10-01 22:40:05.903 +07:00 [INF] End processing HTTP request after 5235.141ms - 503
2024-10-01 22:40:05.965 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:40:05.973 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:40:06.013 +07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2024-10-01 22:40:06.018 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:40:06.121 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:40:06.124 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:40:06.125 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:40:16.272 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:40:16.272 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:40:16.273 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:40:16.274 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:40:16.276 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:40:21.335 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5058.7433ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:40:21.337 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:40:21.337 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5063.4068ms
2024-10-01 22:40:21.337 +07:00 [INF] Received HTTP response headers after 5064.4077ms - 503
2024-10-01 22:40:21.337 +07:00 [INF] End processing HTTP request after 5064.8995ms - 503
2024-10-01 22:40:21.340 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:40:21.341 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:40:21.341 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:40:21.344 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:40:21.344 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:40:21.345 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:40:31.388 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:40:31.389 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:40:31.389 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:40:31.389 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:40:31.391 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:40:36.433 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5041.1023ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:40:36.433 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:40:36.433 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5044.39ms
2024-10-01 22:40:36.434 +07:00 [INF] Received HTTP response headers after 5044.81ms - 503
2024-10-01 22:40:36.434 +07:00 [INF] End processing HTTP request after 5045.1831ms - 503
2024-10-01 22:40:36.435 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:40:36.435 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:40:36.436 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:40:36.437 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:40:36.437 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:40:36.437 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:40:46.472 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:40:46.473 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:40:46.473 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:40:46.473 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:40:46.474 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:40:51.548 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5073.91ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:40:51.549 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:40:51.549 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5075.4384ms
2024-10-01 22:40:51.549 +07:00 [INF] Received HTTP response headers after 5075.7597ms - 503
2024-10-01 22:40:51.549 +07:00 [INF] End processing HTTP request after 5076.1147ms - 503
2024-10-01 22:40:51.550 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:40:51.550 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:40:51.550 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:40:51.551 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:40:51.552 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:40:51.552 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:41:01.603 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:41:01.603 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:41:01.604 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:41:01.604 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:41:01.604 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:41:06.667 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5062.4157ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:41:06.668 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:41:06.668 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5063.9715ms
2024-10-01 22:41:06.668 +07:00 [INF] Received HTTP response headers after 5064.3723ms - 503
2024-10-01 22:41:06.668 +07:00 [INF] End processing HTTP request after 5064.7536ms - 503
2024-10-01 22:41:06.669 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:41:06.670 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:41:06.670 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:41:06.671 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:41:06.671 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:41:06.672 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:41:16.709 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:41:16.709 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:41:16.709 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:41:16.710 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:41:16.710 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:41:21.774 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5063.8502ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:41:21.775 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:41:21.775 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5065.2546ms
2024-10-01 22:41:21.775 +07:00 [INF] Received HTTP response headers after 5065.5962ms - 503
2024-10-01 22:41:21.775 +07:00 [INF] End processing HTTP request after 5065.8289ms - 503
2024-10-01 22:41:21.776 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:41:21.776 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:41:21.777 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:41:21.778 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:41:21.778 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:41:21.778 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:41:31.836 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:41:31.836 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:41:31.836 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:41:31.837 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:41:31.837 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:41:36.913 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5074.9964ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:41:36.913 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:41:36.913 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5076.6687ms
2024-10-01 22:41:36.914 +07:00 [INF] Received HTTP response headers after 5077.0156ms - 503
2024-10-01 22:41:36.914 +07:00 [INF] End processing HTTP request after 5077.2407ms - 503
2024-10-01 22:41:36.914 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:41:36.915 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:41:36.915 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:41:36.916 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:41:36.916 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:41:36.916 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:41:46.957 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:41:46.957 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:41:46.957 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:41:46.957 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:41:46.958 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:41:52.028 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5069.4715ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:41:52.030 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:41:52.030 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5072.6241ms
2024-10-01 22:41:52.030 +07:00 [INF] Received HTTP response headers after 5073.2117ms - 503
2024-10-01 22:41:52.030 +07:00 [INF] End processing HTTP request after 5073.4706ms - 503
2024-10-01 22:41:52.031 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:41:52.032 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:41:52.032 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:41:52.033 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:41:52.034 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:41:52.034 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:42:02.074 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:42:02.075 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:42:02.075 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:42:02.077 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:42:02.077 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:42:07.148 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5069.9183ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:42:07.148 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:42:07.149 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5071.3201ms
2024-10-01 22:42:07.149 +07:00 [INF] Received HTTP response headers after 5073.8606ms - 503
2024-10-01 22:42:07.149 +07:00 [INF] End processing HTTP request after 5074.0681ms - 503
2024-10-01 22:42:07.150 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:42:07.150 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:42:07.150 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:42:07.151 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:42:07.151 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:42:07.151 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:42:17.195 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:42:17.196 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:42:17.196 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:42:17.196 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:42:17.196 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:42:22.272 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5074.9709ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:42:22.272 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:42:22.272 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5076.493ms
2024-10-01 22:42:22.272 +07:00 [INF] Received HTTP response headers after 5076.8037ms - 503
2024-10-01 22:42:22.273 +07:00 [INF] End processing HTTP request after 5077.0144ms - 503
2024-10-01 22:42:22.273 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:42:22.273 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:42:22.274 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:42:22.274 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:42:22.275 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:42:22.275 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:42:32.311 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:42:32.311 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:42:32.311 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:42:32.312 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:42:32.312 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:42:37.387 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5074.9603ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:42:37.388 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:42:37.388 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5076.5413ms
2024-10-01 22:42:37.388 +07:00 [INF] Received HTTP response headers after 5077.0549ms - 503
2024-10-01 22:42:37.388 +07:00 [INF] End processing HTTP request after 5077.2701ms - 503
2024-10-01 22:42:37.389 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:42:37.389 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:42:37.390 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:42:37.390 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:42:37.390 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:42:37.391 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:42:47.428 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:42:47.428 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:42:47.428 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:42:47.429 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:42:47.429 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:42:52.513 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5083.089ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:42:52.513 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:42:52.513 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5084.6461ms
2024-10-01 22:42:52.513 +07:00 [INF] Received HTTP response headers after 5085.0282ms - 503
2024-10-01 22:42:52.513 +07:00 [INF] End processing HTTP request after 5085.2761ms - 503
2024-10-01 22:42:52.514 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:42:52.514 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:42:52.515 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:42:52.515 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:42:52.516 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:42:52.516 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:43:02.564 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:43:02.564 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:43:02.564 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:43:02.565 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:43:02.565 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:43:07.649 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5083.6759ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:43:07.649 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:43:07.649 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5084.8508ms
2024-10-01 22:43:07.650 +07:00 [INF] Received HTTP response headers after 5085.2029ms - 503
2024-10-01 22:43:07.650 +07:00 [INF] End processing HTTP request after 5085.4321ms - 503
2024-10-01 22:43:07.650 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:43:07.651 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:43:07.651 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:43:07.651 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:43:07.652 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:43:07.652 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:43:17.698 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:43:17.698 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:43:17.699 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:43:17.699 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:43:17.699 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:43:22.745 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5045.0042ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:43:22.745 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:43:22.745 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5046.4938ms
2024-10-01 22:43:22.745 +07:00 [INF] Received HTTP response headers after 5046.7818ms - 503
2024-10-01 22:43:22.745 +07:00 [INF] End processing HTTP request after 5047.0095ms - 503
2024-10-01 22:43:22.746 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:43:22.746 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:43:22.747 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:43:22.748 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:43:22.748 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:43:22.748 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:43:32.793 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:43:32.793 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:43:32.793 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:43:32.794 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:43:32.794 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:43:37.879 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5084.2719ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:43:37.879 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:43:37.879 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5085.5085ms
2024-10-01 22:43:37.879 +07:00 [INF] Received HTTP response headers after 5085.7719ms - 503
2024-10-01 22:43:37.879 +07:00 [INF] End processing HTTP request after 5085.9869ms - 503
2024-10-01 22:43:37.880 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:43:37.880 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:43:37.880 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:43:37.881 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:43:37.881 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:43:37.881 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:43:47.927 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:43:47.928 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:43:47.929 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:43:47.931 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:43:47.931 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:43:53.003 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5071.5666ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:43:53.004 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:43:53.004 +07:00 [INF] Received HTTP response headers after 5075.0165ms - 503
2024-10-01 22:43:53.004 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5073.4178ms
2024-10-01 22:43:53.004 +07:00 [INF] End processing HTTP request after 5076.2011ms - 503
2024-10-01 22:43:53.005 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:43:53.005 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:43:53.005 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:43:53.006 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:43:53.006 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:43:53.006 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:44:00.531 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/api/Product/1 - application/json 0
2024-10-01 22:44:00.557 +07:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30/09/2024 3:54:56 AM', Current time (UTC): '01/10/2024 3:44:00 PM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-10-01 22:44:00.559 +07:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30/09/2024 3:54:56 AM', Current time (UTC): '01/10/2024 3:44:00 PM'.
2024-10-01 22:44:00.559 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/api/Product/1 - 404 0 null 28.537ms
2024-10-01 22:44:00.559 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET http://localhost:5216/api/Product/1, Response status code: 404
2024-10-01 22:44:01.594 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/api/Product/1 - application/json 0
2024-10-01 22:44:01.595 +07:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30/09/2024 3:54:56 AM', Current time (UTC): '01/10/2024 3:44:01 PM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-10-01 22:44:01.596 +07:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30/09/2024 3:54:56 AM', Current time (UTC): '01/10/2024 3:44:01 PM'.
2024-10-01 22:44:01.596 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/api/Product/1 - 404 0 null 2.0638ms
2024-10-01 22:44:01.596 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET http://localhost:5216/api/Product/1, Response status code: 404
2024-10-01 22:44:02.303 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/api/Product/1 - application/json 0
2024-10-01 22:44:02.304 +07:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30/09/2024 3:54:56 AM', Current time (UTC): '01/10/2024 3:44:02 PM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-10-01 22:44:02.304 +07:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30/09/2024 3:54:56 AM', Current time (UTC): '01/10/2024 3:44:02 PM'.
2024-10-01 22:44:02.305 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/api/Product/1 - 404 0 null 1.3743ms
2024-10-01 22:44:02.305 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET http://localhost:5216/api/Product/1, Response status code: 404
2024-10-01 22:44:03.052 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:44:03.052 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:44:03.053 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:44:03.055 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:44:03.055 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:44:08.144 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5088.6854ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:44:08.145 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:44:08.145 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5090.0528ms
2024-10-01 22:44:08.145 +07:00 [INF] Received HTTP response headers after 5092.3205ms - 503
2024-10-01 22:44:08.145 +07:00 [INF] End processing HTTP request after 5092.5522ms - 503
2024-10-01 22:44:08.146 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:44:08.146 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:44:08.146 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:44:08.147 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:44:08.147 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:44:08.147 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:44:18.198 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:44:18.198 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:44:18.198 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:44:18.198 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:44:18.199 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:44:23.278 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5078.7747ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:44:23.278 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:44:23.278 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5080.0061ms
2024-10-01 22:44:23.278 +07:00 [INF] Received HTTP response headers after 5080.3167ms - 503
2024-10-01 22:44:23.279 +07:00 [INF] End processing HTTP request after 5080.5045ms - 503
2024-10-01 22:44:23.279 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:44:23.279 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:44:23.280 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:44:23.280 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:44:23.280 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:44:23.281 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:44:33.321 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:44:33.321 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:44:33.321 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:44:33.322 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:44:33.322 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:44:35.113 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/swagger/index.html - null null
2024-10-01 22:44:35.141 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/swagger/index.html - 200 null text/html;charset=utf-8 28.165ms
2024-10-01 22:44:35.436 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/swagger/v1/swagger.json - null null
2024-10-01 22:44:35.450 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/swagger/favicon-32x32.png - null null
2024-10-01 22:44:35.469 +07:00 [INF] Sending file. Request path: '/favicon-32x32.png'. Physical path: 'N/A'
2024-10-01 22:44:35.469 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/swagger/favicon-32x32.png - 200 628 image/png 19.2798ms
2024-10-01 22:44:35.521 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 85.567ms
2024-10-01 22:44:38.398 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5075.7055ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:44:38.398 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:44:38.398 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5076.8757ms
2024-10-01 22:44:38.398 +07:00 [INF] Received HTTP response headers after 5077.2179ms - 503
2024-10-01 22:44:38.398 +07:00 [INF] End processing HTTP request after 5077.413ms - 503
2024-10-01 22:44:38.399 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:44:38.399 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:44:38.400 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:44:38.400 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:44:38.401 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:44:38.401 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:44:43.836 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/api/v1/Product/GetAll - null null
2024-10-01 22:44:43.843 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-10-01 22:44:43.845 +07:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-10-01 22:44:43.845 +07:00 [INF] AuthenticationScheme: apiKey was challenged.
2024-10-01 22:44:43.849 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/api/v1/Product/GetAll - 401 null application/json 13.5333ms
2024-10-01 22:44:48.443 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:44:48.443 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:44:48.443 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:44:48.444 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:44:48.444 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:44:53.515 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5070.4298ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:44:53.515 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:44:53.515 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5071.6009ms
2024-10-01 22:44:53.515 +07:00 [INF] Received HTTP response headers after 5071.8449ms - 503
2024-10-01 22:44:53.515 +07:00 [INF] End processing HTTP request after 5072.0396ms - 503
2024-10-01 22:44:53.516 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:44:53.516 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:44:53.517 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:44:53.518 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:44:53.518 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:44:53.518 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:44:53.835 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/api/v1/Product/GetAll - application/json 0
2024-10-01 22:44:53.836 +07:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30/09/2024 3:54:56 AM', Current time (UTC): '01/10/2024 3:44:53 PM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-10-01 22:44:53.837 +07:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30/09/2024 3:54:56 AM', Current time (UTC): '01/10/2024 3:44:53 PM'.
2024-10-01 22:44:53.838 +07:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30/09/2024 3:54:56 AM', Current time (UTC): '01/10/2024 3:44:53 PM'.
2024-10-01 22:44:53.841 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-10-01 22:44:53.843 +07:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-10-01 22:44:53.843 +07:00 [INF] AuthenticationScheme: apiKey was challenged.
2024-10-01 22:44:53.843 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/api/v1/Product/GetAll - 401 null application/json 8.5238ms
2024-10-01 22:44:55.468 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/api/v1/Product/GetAll - application/json 0
2024-10-01 22:44:55.468 +07:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30/09/2024 3:54:56 AM', Current time (UTC): '01/10/2024 3:44:55 PM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-10-01 22:44:55.469 +07:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30/09/2024 3:54:56 AM', Current time (UTC): '01/10/2024 3:44:55 PM'.
2024-10-01 22:44:55.469 +07:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30/09/2024 3:54:56 AM', Current time (UTC): '01/10/2024 3:44:55 PM'.
2024-10-01 22:44:55.470 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-10-01 22:44:55.470 +07:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-10-01 22:44:55.470 +07:00 [INF] AuthenticationScheme: apiKey was challenged.
2024-10-01 22:44:55.470 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/api/v1/Product/GetAll - 401 null application/json 2.5195ms
2024-10-01 22:45:00.163 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/api/Product/GetAll - application/json 0
2024-10-01 22:45:00.163 +07:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30/09/2024 3:54:56 AM', Current time (UTC): '01/10/2024 3:45:00 PM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-10-01 22:45:00.164 +07:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30/09/2024 3:54:56 AM', Current time (UTC): '01/10/2024 3:45:00 PM'.
2024-10-01 22:45:00.164 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/api/Product/GetAll - 404 0 null 0.9204ms
2024-10-01 22:45:00.164 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET http://localhost:5216/api/Product/GetAll, Response status code: 404
2024-10-01 22:45:01.158 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/api/Product/GetAll - application/json 0
2024-10-01 22:45:01.158 +07:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30/09/2024 3:54:56 AM', Current time (UTC): '01/10/2024 3:45:01 PM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-10-01 22:45:01.159 +07:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30/09/2024 3:54:56 AM', Current time (UTC): '01/10/2024 3:45:01 PM'.
2024-10-01 22:45:01.159 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/api/Product/GetAll - 404 0 null 1.336ms
2024-10-01 22:45:01.159 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET http://localhost:5216/api/Product/GetAll, Response status code: 404
2024-10-01 22:45:01.696 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/api/Product/GetAll - application/json 0
2024-10-01 22:45:01.696 +07:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30/09/2024 3:54:56 AM', Current time (UTC): '01/10/2024 3:45:01 PM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-10-01 22:45:01.697 +07:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30/09/2024 3:54:56 AM', Current time (UTC): '01/10/2024 3:45:01 PM'.
2024-10-01 22:45:01.697 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/api/Product/GetAll - 404 0 null 1.2399ms
2024-10-01 22:45:01.697 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET http://localhost:5216/api/Product/GetAll, Response status code: 404
2024-10-01 22:45:01.917 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/api/Product/GetAll - application/json 0
2024-10-01 22:45:01.918 +07:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30/09/2024 3:54:56 AM', Current time (UTC): '01/10/2024 3:45:01 PM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-10-01 22:45:01.918 +07:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30/09/2024 3:54:56 AM', Current time (UTC): '01/10/2024 3:45:01 PM'.
2024-10-01 22:45:01.918 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/api/Product/GetAll - 404 0 null 0.9266ms
2024-10-01 22:45:01.918 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET http://localhost:5216/api/Product/GetAll, Response status code: 404
2024-10-01 22:45:02.193 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/api/Product/GetAll - application/json 0
2024-10-01 22:45:02.195 +07:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30/09/2024 3:54:56 AM', Current time (UTC): '01/10/2024 3:45:02 PM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-10-01 22:45:02.195 +07:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30/09/2024 3:54:56 AM', Current time (UTC): '01/10/2024 3:45:02 PM'.
2024-10-01 22:45:02.195 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/api/Product/GetAll - 404 0 null 2.4002ms
2024-10-01 22:45:02.195 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET http://localhost:5216/api/Product/GetAll, Response status code: 404
2024-10-01 22:45:02.442 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/api/Product/GetAll - application/json 0
2024-10-01 22:45:02.443 +07:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30/09/2024 3:54:56 AM', Current time (UTC): '01/10/2024 3:45:02 PM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-10-01 22:45:02.443 +07:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30/09/2024 3:54:56 AM', Current time (UTC): '01/10/2024 3:45:02 PM'.
2024-10-01 22:45:02.443 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/api/Product/GetAll - 404 0 null 0.9043ms
2024-10-01 22:45:02.443 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET http://localhost:5216/api/Product/GetAll, Response status code: 404
2024-10-01 22:45:03.561 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:45:03.561 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:45:03.561 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:45:03.561 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:45:03.562 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:45:08.651 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5088.4713ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:45:08.651 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:45:08.651 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5089.902ms
2024-10-01 22:45:08.651 +07:00 [INF] Received HTTP response headers after 5090.1987ms - 503
2024-10-01 22:45:08.651 +07:00 [INF] End processing HTTP request after 5090.3836ms - 503
2024-10-01 22:45:08.652 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:45:08.652 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:45:08.653 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:45:08.653 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:45:08.653 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:45:08.653 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:45:18.693 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:45:18.693 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:45:18.694 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:45:18.694 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:45:18.694 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:45:23.792 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5097.3559ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:45:23.792 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:45:23.792 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5098.6232ms
2024-10-01 22:45:23.792 +07:00 [INF] Received HTTP response headers after 5098.8555ms - 503
2024-10-01 22:45:23.793 +07:00 [INF] End processing HTTP request after 5099.1283ms - 503
2024-10-01 22:45:23.793 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:45:23.793 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:45:23.794 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:45:23.794 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:45:23.794 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:45:23.795 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:45:33.839 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:45:33.839 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:45:33.839 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:45:33.840 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:45:33.840 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:45:38.916 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5075.8743ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:45:38.916 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:45:38.917 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5076.8941ms
2024-10-01 22:45:38.917 +07:00 [INF] Received HTTP response headers after 5077.1466ms - 503
2024-10-01 22:45:38.917 +07:00 [INF] End processing HTTP request after 5077.3555ms - 503
2024-10-01 22:45:38.917 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:45:38.917 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:45:38.918 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:45:38.918 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:45:38.918 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:45:38.919 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:45:48.956 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:45:48.956 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:45:48.956 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:45:48.957 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:45:48.957 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:45:54.027 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5069.5361ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:45:54.027 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:45:54.027 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5070.5684ms
2024-10-01 22:45:54.027 +07:00 [INF] Received HTTP response headers after 5070.809ms - 503
2024-10-01 22:45:54.027 +07:00 [INF] End processing HTTP request after 5070.9961ms - 503
2024-10-01 22:45:54.028 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:45:54.028 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:45:54.028 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:45:54.029 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:45:54.029 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:45:54.029 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:46:04.068 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:46:04.069 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:46:04.069 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:46:04.071 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:46:04.071 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:46:09.138 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5066.6394ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:46:09.139 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:46:09.139 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5067.8136ms
2024-10-01 22:46:09.139 +07:00 [INF] Received HTTP response headers after 5070.1493ms - 503
2024-10-01 22:46:09.139 +07:00 [INF] End processing HTTP request after 5070.3628ms - 503
2024-10-01 22:46:09.140 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:46:09.140 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:46:09.140 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:46:09.141 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:46:09.141 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:46:09.141 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:46:19.182 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:46:19.182 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:46:19.182 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:46:19.183 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:46:19.183 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:46:24.258 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5074.4476ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:46:24.258 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:46:24.258 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5075.4765ms
2024-10-01 22:46:24.258 +07:00 [INF] Received HTTP response headers after 5075.8561ms - 503
2024-10-01 22:46:24.258 +07:00 [INF] End processing HTTP request after 5076.0524ms - 503
2024-10-01 22:46:24.259 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:46:24.259 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:46:24.259 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:46:24.260 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:46:24.260 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:46:24.260 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:46:34.297 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:46:34.297 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:46:34.297 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:46:34.297 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:46:34.298 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:46:34.837 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/api/Product/GetAll - application/json 0
2024-10-01 22:46:34.840 +07:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30/09/2024 3:54:56 AM', Current time (UTC): '01/10/2024 3:46:34 PM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-10-01 22:46:34.841 +07:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30/09/2024 3:54:56 AM', Current time (UTC): '01/10/2024 3:46:34 PM'.
2024-10-01 22:46:34.841 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/api/Product/GetAll - 404 0 null 4.6839ms
2024-10-01 22:46:34.841 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET http://localhost:5216/api/Product/GetAll, Response status code: 404
2024-10-01 22:46:35.658 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/api/Product/GetAll - application/json 0
2024-10-01 22:46:35.658 +07:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30/09/2024 3:54:56 AM', Current time (UTC): '01/10/2024 3:46:35 PM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-10-01 22:46:35.658 +07:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30/09/2024 3:54:56 AM', Current time (UTC): '01/10/2024 3:46:35 PM'.
2024-10-01 22:46:35.658 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/api/Product/GetAll - 404 0 null 0.9698ms
2024-10-01 22:46:35.659 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET http://localhost:5216/api/Product/GetAll, Response status code: 404
2024-10-01 22:46:36.033 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/api/Product/GetAll - application/json 0
2024-10-01 22:46:36.033 +07:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30/09/2024 3:54:56 AM', Current time (UTC): '01/10/2024 3:46:36 PM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-10-01 22:46:36.034 +07:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30/09/2024 3:54:56 AM', Current time (UTC): '01/10/2024 3:46:36 PM'.
2024-10-01 22:46:36.034 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/api/Product/GetAll - 404 0 null 1.1963ms
2024-10-01 22:46:36.034 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET http://localhost:5216/api/Product/GetAll, Response status code: 404
2024-10-01 22:46:39.360 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5061.6059ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:46:39.360 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:46:39.360 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5062.7607ms
2024-10-01 22:46:39.360 +07:00 [INF] Received HTTP response headers after 5063.0697ms - 503
2024-10-01 22:46:39.360 +07:00 [INF] End processing HTTP request after 5063.2724ms - 503
2024-10-01 22:46:39.361 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:46:39.361 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:46:39.361 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:46:39.362 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:46:39.362 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:46:39.363 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:46:48.454 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/api/v1/Product/GetAll - application/json 0
2024-10-01 22:46:48.454 +07:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30/09/2024 3:54:56 AM', Current time (UTC): '01/10/2024 3:46:48 PM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-10-01 22:46:48.455 +07:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30/09/2024 3:54:56 AM', Current time (UTC): '01/10/2024 3:46:48 PM'.
2024-10-01 22:46:48.455 +07:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30/09/2024 3:54:56 AM', Current time (UTC): '01/10/2024 3:46:48 PM'.
2024-10-01 22:46:48.455 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-10-01 22:46:48.455 +07:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-10-01 22:46:48.455 +07:00 [INF] AuthenticationScheme: apiKey was challenged.
2024-10-01 22:46:48.455 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/api/v1/Product/GetAll - 401 null application/json 1.8862ms
2024-10-01 22:46:49.403 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:46:49.403 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:46:49.403 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:46:49.403 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:46:49.403 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:46:50.357 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/api/v1/Product/GetAll - application/json 0
2024-10-01 22:46:50.357 +07:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30/09/2024 3:54:56 AM', Current time (UTC): '01/10/2024 3:46:50 PM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-10-01 22:46:50.357 +07:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30/09/2024 3:54:56 AM', Current time (UTC): '01/10/2024 3:46:50 PM'.
2024-10-01 22:46:50.357 +07:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30/09/2024 3:54:56 AM', Current time (UTC): '01/10/2024 3:46:50 PM'.
2024-10-01 22:46:50.358 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-10-01 22:46:50.358 +07:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-10-01 22:46:50.358 +07:00 [INF] AuthenticationScheme: apiKey was challenged.
2024-10-01 22:46:50.358 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/api/v1/Product/GetAll - 401 null application/json 1.4146ms
2024-10-01 22:46:54.487 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5083.085ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:46:54.487 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:46:54.487 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5084.2196ms
2024-10-01 22:46:54.487 +07:00 [INF] Received HTTP response headers after 5084.4017ms - 503
2024-10-01 22:46:54.487 +07:00 [INF] End processing HTTP request after 5084.5847ms - 503
2024-10-01 22:46:54.488 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:46:54.488 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:46:54.488 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:46:54.489 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:46:54.489 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:46:54.489 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:47:04.528 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:47:04.528 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:47:04.528 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:47:04.528 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:47:04.528 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:47:09.623 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5094.4671ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:47:09.624 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:47:09.624 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5095.5355ms
2024-10-01 22:47:09.624 +07:00 [INF] Received HTTP response headers after 5095.7739ms - 503
2024-10-01 22:47:09.624 +07:00 [INF] End processing HTTP request after 5095.9705ms - 503
2024-10-01 22:47:09.625 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:47:09.625 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:47:09.625 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:47:09.626 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:47:09.626 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:47:09.626 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:47:19.672 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:47:19.672 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:47:19.672 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:47:19.673 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:47:19.673 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:47:24.759 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5085.5734ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:47:24.759 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:47:24.759 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5086.7868ms
2024-10-01 22:47:24.759 +07:00 [INF] Received HTTP response headers after 5086.9929ms - 503
2024-10-01 22:47:24.759 +07:00 [INF] End processing HTTP request after 5087.2122ms - 503
2024-10-01 22:47:24.760 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:47:24.760 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:47:24.761 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:47:24.761 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:47:24.762 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:47:24.762 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:47:34.804 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:47:34.805 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:47:34.805 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:47:34.805 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:47:34.805 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:47:39.904 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5098.4393ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:47:39.904 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:47:39.904 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5099.545ms
2024-10-01 22:47:39.904 +07:00 [INF] Received HTTP response headers after 5099.7581ms - 503
2024-10-01 22:47:39.905 +07:00 [INF] End processing HTTP request after 5099.9602ms - 503
2024-10-01 22:47:39.905 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:47:39.905 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:47:39.906 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:47:39.906 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:47:39.906 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:47:39.907 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:47:49.952 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:47:49.952 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:47:49.952 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:47:49.953 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:47:49.953 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:47:55.025 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5072.2334ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:47:55.026 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:47:55.026 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5073.3627ms
2024-10-01 22:47:55.026 +07:00 [INF] Received HTTP response headers after 5073.7224ms - 503
2024-10-01 22:47:55.026 +07:00 [INF] End processing HTTP request after 5073.9661ms - 503
2024-10-01 22:47:55.027 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:47:55.027 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:47:55.027 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:47:55.028 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:47:55.028 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:47:55.028 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:48:05.079 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:48:05.079 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:48:05.079 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:48:05.082 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:48:05.082 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:48:10.182 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5099.9723ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:48:10.183 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:48:10.183 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5100.9149ms
2024-10-01 22:48:10.183 +07:00 [INF] Received HTTP response headers after 5103.4795ms - 503
2024-10-01 22:48:10.183 +07:00 [INF] End processing HTTP request after 5103.644ms - 503
2024-10-01 22:48:10.184 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:48:10.184 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:48:10.184 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:48:10.184 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:48:10.185 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:48:10.185 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:48:20.222 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:48:20.222 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:48:20.222 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:48:20.222 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:48:20.223 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:48:25.288 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5065.0756ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:48:25.288 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:48:25.289 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5066.1472ms
2024-10-01 22:48:25.289 +07:00 [INF] Received HTTP response headers after 5066.4427ms - 503
2024-10-01 22:48:25.289 +07:00 [INF] End processing HTTP request after 5066.6442ms - 503
2024-10-01 22:48:25.289 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:48:25.289 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:48:25.290 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:48:25.290 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:48:25.290 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:48:25.291 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:48:35.332 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:48:35.332 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:48:35.332 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:48:35.332 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:48:35.332 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:48:39.438 +07:00 [INF] Application is shutting down...
2024-10-01 22:48:40.417 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5084.3814ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:48:40.417 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:48:40.417 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5085.2998ms
2024-10-01 22:48:40.418 +07:00 [INF] Received HTTP response headers after 5085.568ms - 503
2024-10-01 22:48:40.418 +07:00 [INF] End processing HTTP request after 5085.7376ms - 503
2024-10-01 22:48:40.418 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:48:40.418 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:48:40.419 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:48:40.419 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:48:40.419 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:48:40.419 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:48:55.591 +07:00 [INF] User profile is available. Using 'C:\Users\User\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-10-01 22:48:55.946 +07:00 [INF] Initializing UI Database
2024-10-01 22:48:56.564 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2024-10-01 22:48:56.582 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-10-01 22:48:56.723 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Configurations" AS "c")
2024-10-01 22:48:56.753 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:48:57.081 +07:00 [INF] Now listening on: https://localhost:7042
2024-10-01 22:48:57.082 +07:00 [INF] Now listening on: http://localhost:5216
2024-10-01 22:48:57.125 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:48:57.178 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:48:57.181 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:48:57.212 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-10-01 22:48:57.214 +07:00 [INF] Hosting environment: Development
2024-10-01 22:48:57.217 +07:00 [INF] Content root path: D:\Projects\TechShopSolution\TechShopSolution.API
2024-10-01 22:48:57.374 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:48:57.452 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7042/ - null null
2024-10-01 22:48:57.587 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:48:57.591 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7042/ - 404 0 null 138.9642ms
2024-10-01 22:48:57.631 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7042/, Response status code: 404
2024-10-01 22:49:02.832 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5204.1173ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:49:02.875 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:49:02.878 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5534.2372ms
2024-10-01 22:49:02.888 +07:00 [INF] Received HTTP response headers after 5699.8225ms - 503
2024-10-01 22:49:02.890 +07:00 [INF] End processing HTTP request after 5719.5685ms - 503
2024-10-01 22:49:02.973 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:49:02.984 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:49:03.033 +07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2024-10-01 22:49:03.040 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:49:03.168 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:49:03.176 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:49:03.179 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:49:13.363 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:49:13.366 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:49:13.368 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:49:13.370 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:49:13.373 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:49:18.461 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5085.6418ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:49:18.462 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:49:18.463 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5093.496ms
2024-10-01 22:49:18.465 +07:00 [INF] Received HTTP response headers after 5095.4571ms - 503
2024-10-01 22:49:18.466 +07:00 [INF] End processing HTTP request after 5100.8946ms - 503
2024-10-01 22:49:18.470 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:49:18.500 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (Size = 11), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Failures" ("HealthCheckName", "IsUpAndRunning", "LastNotified")
VALUES (@p0, @p1, @p2)
RETURNING "Id";
2024-10-01 22:49:18.543 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:49:18.546 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:49:18.548 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:49:18.551 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:49:28.599 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:49:28.601 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:49:28.603 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:49:28.604 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:49:28.604 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:49:33.682 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5076.0415ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:49:33.683 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:49:33.683 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5079.3764ms
2024-10-01 22:49:33.685 +07:00 [INF] Received HTTP response headers after 5080.5957ms - 503
2024-10-01 22:49:33.687 +07:00 [INF] End processing HTTP request after 5086.0223ms - 503
2024-10-01 22:49:33.690 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:49:33.692 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:49:33.694 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:49:33.697 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:49:33.698 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:49:33.700 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:49:43.789 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:49:43.790 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:49:43.792 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:49:43.793 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:49:43.793 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:50:01.987 +07:00 [INF] User profile is available. Using 'C:\Users\User\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-10-01 22:50:02.204 +07:00 [INF] Initializing UI Database
2024-10-01 22:50:02.713 +07:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2024-10-01 22:50:02.727 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-10-01 22:50:02.855 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Configurations" AS "c")
2024-10-01 22:50:02.879 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:50:03.003 +07:00 [INF] Now listening on: http://localhost:5216
2024-10-01 22:50:03.030 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:50:03.042 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:50:03.043 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:50:03.058 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-10-01 22:50:03.059 +07:00 [INF] Hosting environment: Development
2024-10-01 22:50:03.059 +07:00 [INF] Content root path: D:\Projects\TechShopSolution\TechShopSolution.API
2024-10-01 22:50:03.091 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:50:03.134 +07:00 [WRN] Failed to determine the https port for redirect.
2024-10-01 22:50:03.136 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:50:08.235 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5083.4224ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:50:08.274 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:50:08.276 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5195.2634ms
2024-10-01 22:50:08.283 +07:00 [INF] Received HTTP response headers after 5234.9784ms - 503
2024-10-01 22:50:08.284 +07:00 [INF] End processing HTTP request after 5245.4882ms - 503
2024-10-01 22:50:08.318 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/swagger/index.html - null null
2024-10-01 22:50:08.353 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:50:08.354 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/swagger/index.html - 200 null text/html;charset=utf-8 36.1254ms
2024-10-01 22:50:08.364 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:50:08.413 +07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2024-10-01 22:50:08.418 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:50:08.443 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/swagger/v1/swagger.json - null null
2024-10-01 22:50:08.516 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 73.3342ms
2024-10-01 22:50:08.538 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:50:08.541 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:50:08.542 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:50:09.569 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/swagger/index.html - null null
2024-10-01 22:50:09.570 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/swagger/index.html - 200 null text/html;charset=utf-8 1.4843ms
2024-10-01 22:50:09.618 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/swagger/v1/swagger.json - null null
2024-10-01 22:50:09.631 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 13.5641ms
2024-10-01 22:50:17.010 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/api/Product/GetAll - application/json 0
2024-10-01 22:50:17.045 +07:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30/09/2024 3:54:56 AM', Current time (UTC): '01/10/2024 3:50:17 PM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-10-01 22:50:17.046 +07:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30/09/2024 3:54:56 AM', Current time (UTC): '01/10/2024 3:50:17 PM'.
2024-10-01 22:50:17.047 +07:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30/09/2024 3:54:56 AM', Current time (UTC): '01/10/2024 3:50:17 PM'.
2024-10-01 22:50:17.052 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-10-01 22:50:17.055 +07:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-10-01 22:50:17.055 +07:00 [INF] AuthenticationScheme: apiKey was challenged.
2024-10-01 22:50:17.059 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/api/Product/GetAll - 401 null application/json 49.3572ms
2024-10-01 22:50:18.025 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/api/Product/GetAll - application/json 0
2024-10-01 22:50:18.027 +07:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30/09/2024 3:54:56 AM', Current time (UTC): '01/10/2024 3:50:18 PM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-10-01 22:50:18.028 +07:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30/09/2024 3:54:56 AM', Current time (UTC): '01/10/2024 3:50:18 PM'.
2024-10-01 22:50:18.029 +07:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30/09/2024 3:54:56 AM', Current time (UTC): '01/10/2024 3:50:18 PM'.
2024-10-01 22:50:18.030 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-10-01 22:50:18.030 +07:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-10-01 22:50:18.030 +07:00 [INF] AuthenticationScheme: apiKey was challenged.
2024-10-01 22:50:18.031 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/api/Product/GetAll - 401 null application/json 6.3092ms
2024-10-01 22:50:18.664 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/api/Product/GetAll - application/json 0
2024-10-01 22:50:18.665 +07:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30/09/2024 3:54:56 AM', Current time (UTC): '01/10/2024 3:50:18 PM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-10-01 22:50:18.665 +07:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30/09/2024 3:54:56 AM', Current time (UTC): '01/10/2024 3:50:18 PM'.
2024-10-01 22:50:18.666 +07:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30/09/2024 3:54:56 AM', Current time (UTC): '01/10/2024 3:50:18 PM'.
2024-10-01 22:50:18.667 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-10-01 22:50:18.667 +07:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-10-01 22:50:18.667 +07:00 [INF] AuthenticationScheme: apiKey was challenged.
2024-10-01 22:50:18.667 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/api/Product/GetAll - 401 null application/json 2.8033ms
2024-10-01 22:50:18.689 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:50:18.690 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:50:18.690 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:50:18.691 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:50:18.691 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:50:19.499 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/api/Product/GetAll - application/json 0
2024-10-01 22:50:19.500 +07:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30/09/2024 3:54:56 AM', Current time (UTC): '01/10/2024 3:50:19 PM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-10-01 22:50:19.500 +07:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30/09/2024 3:54:56 AM', Current time (UTC): '01/10/2024 3:50:19 PM'.
2024-10-01 22:50:19.500 +07:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30/09/2024 3:54:56 AM', Current time (UTC): '01/10/2024 3:50:19 PM'.
2024-10-01 22:50:19.501 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-10-01 22:50:19.501 +07:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-10-01 22:50:19.501 +07:00 [INF] AuthenticationScheme: apiKey was challenged.
2024-10-01 22:50:19.501 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/api/Product/GetAll - 401 null application/json 2.135ms
2024-10-01 22:50:20.100 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/api/Product/GetAll - application/json 0
2024-10-01 22:50:20.101 +07:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30/09/2024 3:54:56 AM', Current time (UTC): '01/10/2024 3:50:20 PM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-10-01 22:50:20.101 +07:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30/09/2024 3:54:56 AM', Current time (UTC): '01/10/2024 3:50:20 PM'.
2024-10-01 22:50:20.101 +07:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '30/09/2024 3:54:56 AM', Current time (UTC): '01/10/2024 3:50:20 PM'.
2024-10-01 22:50:20.101 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-10-01 22:50:20.101 +07:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-10-01 22:50:20.101 +07:00 [INF] AuthenticationScheme: apiKey was challenged.
2024-10-01 22:50:20.102 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/api/Product/GetAll - 401 null application/json 1.8358ms
2024-10-01 22:50:23.773 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5080.0335ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:50:23.773 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:50:23.774 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5082.9749ms
2024-10-01 22:50:23.774 +07:00 [INF] Received HTTP response headers after 5084.2576ms - 503
2024-10-01 22:50:23.774 +07:00 [INF] End processing HTTP request after 5084.6353ms - 503
2024-10-01 22:50:23.777 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:50:23.777 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:50:23.778 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:50:23.781 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:50:23.781 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:50:23.781 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:50:33.826 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:50:33.826 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:50:33.826 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:50:33.826 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:50:33.826 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:50:38.901 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5073.7282ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:50:38.901 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:50:38.901 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5075.2292ms
2024-10-01 22:50:38.901 +07:00 [INF] Received HTTP response headers after 5075.4712ms - 503
2024-10-01 22:50:38.902 +07:00 [INF] End processing HTTP request after 5075.7566ms - 503
2024-10-01 22:50:38.903 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:50:38.903 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:50:38.903 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:50:38.905 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:50:38.905 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:50:38.905 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:50:39.467 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/api/Product/GetAll - application/json 0
2024-10-01 22:50:39.477 +07:00 [INF] Executing endpoint 'TechShopSolution.API.Controllers.ProductController.GetAllV1 (TechShopSolution.API)'
2024-10-01 22:50:39.485 +07:00 [INF] Route matched with {action = "GetAllV1", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllV1() on controller TechShopSolution.API.Controllers.ProductController (TechShopSolution.API).
2024-10-01 22:50:39.492 +07:00 [INF] Executing action method TechShopSolution.API.Controllers.ProductController.GetAllV1 (TechShopSolution.API) - Validation state: "Valid"
2024-10-01 22:50:39.581 +07:00 [INF] Getting all products
2024-10-01 22:50:39.890 +07:00 [INF] Executed DbCommand (38ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BestSeller], [p].[BrandId], [p].[Code], [p].[CreateAt], [p].[DeleteAt], [p].[Descriptions], [p].[Featured], [p].[Image], [p].[Instock], [p].[IsActive], [p].[IsDelete], [p].[MetaDescriptions], [p].[MetaKeywords], [p].[MetaTitle], [p].[MoreImages], [p].[Name], [p].[PromotionPrice], [p].[ShortDesc], [p].[Slug], [p].[Specifications], [p].[UnitPrice], [p].[UpdateAt], [p].[ViewCount], [p].[Warranty], [b].[Id], [t].[CateId], [t].[ProductId], [t].[Id], [t].[CateName], [t].[CateSlug], [t].[CreateAt], [t].[DeleteAt], [t].[IsActive], [t].[IsDelete], [t].[MetaDescriptions], [t].[MetaKeywords], [t].[MetaTitle], [t].[ParentId], [t].[UpdateAt], [b].[BrandName], [b].[BrandSlug], [b].[CreateAt], [b].[DeleteAt], [b].[IsActive], [b].[IsDelete], [b].[MetaDescriptions], [b].[MetaKeywords], [b].[MetaTitle], [b].[UpdateAt]
FROM [Product] AS [p]
INNER JOIN [Brand] AS [b] ON [p].[BrandId] = [b].[Id]
LEFT JOIN (
    SELECT [c].[CateId], [c].[ProductId], [c0].[Id], [c0].[CateName], [c0].[CateSlug], [c0].[CreateAt], [c0].[DeleteAt], [c0].[IsActive], [c0].[IsDelete], [c0].[MetaDescriptions], [c0].[MetaKeywords], [c0].[MetaTitle], [c0].[ParentId], [c0].[UpdateAt]
    FROM [CategoryProduct] AS [c]
    INNER JOIN [Category] AS [c0] ON [c].[CateId] = [c0].[Id]
) AS [t] ON [p].[Id] = [t].[ProductId]
ORDER BY [p].[Id], [b].[Id], [t].[CateId], [t].[ProductId]
2024-10-01 22:50:40.063 +07:00 [INF] Executed action method TechShopSolution.API.Controllers.ProductController.GetAllV1 (TechShopSolution.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 567.6237ms.
2024-10-01 22:50:40.067 +07:00 [INF] Executing OkObjectResult, writing value of type 'TechShopSolution.Application.Models.Common.StandardResponse`1[[System.Collections.Generic.IEnumerable`1[[TechShopSolution.Application.Models.Products.ProductDTO, TechShopSolution.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-10-01 22:50:40.085 +07:00 [INF] Executed action TechShopSolution.API.Controllers.ProductController.GetAllV1 (TechShopSolution.API) in 596.5866ms
2024-10-01 22:50:40.086 +07:00 [INF] Executed endpoint 'TechShopSolution.API.Controllers.ProductController.GetAllV1 (TechShopSolution.API)'
2024-10-01 22:50:40.089 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/api/Product/GetAll - 200 null application/json; charset=utf-8 621.7238ms
2024-10-01 22:50:46.933 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/api/Product/GetAll - application/json 0
2024-10-01 22:50:46.933 +07:00 [INF] Executing endpoint 'TechShopSolution.API.Controllers.ProductController.GetAllV1 (TechShopSolution.API)'
2024-10-01 22:50:46.934 +07:00 [INF] Route matched with {action = "GetAllV1", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllV1() on controller TechShopSolution.API.Controllers.ProductController (TechShopSolution.API).
2024-10-01 22:50:46.934 +07:00 [INF] Executing action method TechShopSolution.API.Controllers.ProductController.GetAllV1 (TechShopSolution.API) - Validation state: "Valid"
2024-10-01 22:50:46.935 +07:00 [INF] Getting all products
2024-10-01 22:50:46.963 +07:00 [INF] Executed DbCommand (24ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BestSeller], [p].[BrandId], [p].[Code], [p].[CreateAt], [p].[DeleteAt], [p].[Descriptions], [p].[Featured], [p].[Image], [p].[Instock], [p].[IsActive], [p].[IsDelete], [p].[MetaDescriptions], [p].[MetaKeywords], [p].[MetaTitle], [p].[MoreImages], [p].[Name], [p].[PromotionPrice], [p].[ShortDesc], [p].[Slug], [p].[Specifications], [p].[UnitPrice], [p].[UpdateAt], [p].[ViewCount], [p].[Warranty], [b].[Id], [t].[CateId], [t].[ProductId], [t].[Id], [t].[CateName], [t].[CateSlug], [t].[CreateAt], [t].[DeleteAt], [t].[IsActive], [t].[IsDelete], [t].[MetaDescriptions], [t].[MetaKeywords], [t].[MetaTitle], [t].[ParentId], [t].[UpdateAt], [b].[BrandName], [b].[BrandSlug], [b].[CreateAt], [b].[DeleteAt], [b].[IsActive], [b].[IsDelete], [b].[MetaDescriptions], [b].[MetaKeywords], [b].[MetaTitle], [b].[UpdateAt]
FROM [Product] AS [p]
INNER JOIN [Brand] AS [b] ON [p].[BrandId] = [b].[Id]
LEFT JOIN (
    SELECT [c].[CateId], [c].[ProductId], [c0].[Id], [c0].[CateName], [c0].[CateSlug], [c0].[CreateAt], [c0].[DeleteAt], [c0].[IsActive], [c0].[IsDelete], [c0].[MetaDescriptions], [c0].[MetaKeywords], [c0].[MetaTitle], [c0].[ParentId], [c0].[UpdateAt]
    FROM [CategoryProduct] AS [c]
    INNER JOIN [Category] AS [c0] ON [c].[CateId] = [c0].[Id]
) AS [t] ON [p].[Id] = [t].[ProductId]
ORDER BY [p].[Id], [b].[Id], [t].[CateId], [t].[ProductId]
2024-10-01 22:50:47.005 +07:00 [INF] Executed action method TechShopSolution.API.Controllers.ProductController.GetAllV1 (TechShopSolution.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 70.7135ms.
2024-10-01 22:50:47.005 +07:00 [INF] Executing OkObjectResult, writing value of type 'TechShopSolution.Application.Models.Common.StandardResponse`1[[System.Collections.Generic.IEnumerable`1[[TechShopSolution.Application.Models.Products.ProductDTO, TechShopSolution.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-10-01 22:50:47.006 +07:00 [INF] Executed action TechShopSolution.API.Controllers.ProductController.GetAllV1 (TechShopSolution.API) in 72.7059ms
2024-10-01 22:50:47.006 +07:00 [INF] Executed endpoint 'TechShopSolution.API.Controllers.ProductController.GetAllV1 (TechShopSolution.API)'
2024-10-01 22:50:47.007 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/api/Product/GetAll - 200 null application/json; charset=utf-8 74.1598ms
2024-10-01 22:50:48.947 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:50:48.947 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:50:48.947 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:50:48.948 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:50:48.948 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:50:49.947 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/api/Product/GetAll - application/json 0
2024-10-01 22:50:49.948 +07:00 [INF] Executing endpoint 'TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API)'
2024-10-01 22:50:49.950 +07:00 [INF] Route matched with {action = "GetAllV2", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllV2() on controller TechShopSolution.API.Controllers.ProductController (TechShopSolution.API).
2024-10-01 22:50:49.951 +07:00 [INF] Executing action method TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API) - Validation state: "Valid"
2024-10-01 22:50:49.953 +07:00 [INF] Getting all products
2024-10-01 22:50:50.001 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BestSeller], [p].[BrandId], [p].[Code], [p].[CreateAt], [p].[DeleteAt], [p].[Descriptions], [p].[Featured], [p].[Image], [p].[Instock], [p].[IsActive], [p].[IsDelete], [p].[MetaDescriptions], [p].[MetaKeywords], [p].[MetaTitle], [p].[MoreImages], [p].[Name], [p].[PromotionPrice], [p].[ShortDesc], [p].[Slug], [p].[Specifications], [p].[UnitPrice], [p].[UpdateAt], [p].[ViewCount], [p].[Warranty], [b].[Id], [t].[CateId], [t].[ProductId], [t].[Id], [t].[CateName], [t].[CateSlug], [t].[CreateAt], [t].[DeleteAt], [t].[IsActive], [t].[IsDelete], [t].[MetaDescriptions], [t].[MetaKeywords], [t].[MetaTitle], [t].[ParentId], [t].[UpdateAt], [b].[BrandName], [b].[BrandSlug], [b].[CreateAt], [b].[DeleteAt], [b].[IsActive], [b].[IsDelete], [b].[MetaDescriptions], [b].[MetaKeywords], [b].[MetaTitle], [b].[UpdateAt]
FROM [Product] AS [p]
INNER JOIN [Brand] AS [b] ON [p].[BrandId] = [b].[Id]
LEFT JOIN (
    SELECT [c].[CateId], [c].[ProductId], [c0].[Id], [c0].[CateName], [c0].[CateSlug], [c0].[CreateAt], [c0].[DeleteAt], [c0].[IsActive], [c0].[IsDelete], [c0].[MetaDescriptions], [c0].[MetaKeywords], [c0].[MetaTitle], [c0].[ParentId], [c0].[UpdateAt]
    FROM [CategoryProduct] AS [c]
    INNER JOIN [Category] AS [c0] ON [c].[CateId] = [c0].[Id]
) AS [t] ON [p].[Id] = [t].[ProductId]
ORDER BY [p].[Id], [b].[Id], [t].[CateId], [t].[ProductId]
2024-10-01 22:50:50.036 +07:00 [INF] Executed action method TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 85.2361ms.
2024-10-01 22:50:50.036 +07:00 [INF] Executing OkObjectResult, writing value of type 'TechShopSolution.Application.Models.Common.StandardResponse`1[[System.Collections.Generic.IEnumerable`1[[TechShopSolution.Application.Models.Products.ProductDTO, TechShopSolution.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-10-01 22:50:50.037 +07:00 [INF] Executed action TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API) in 86.3291ms
2024-10-01 22:50:50.037 +07:00 [INF] Executed endpoint 'TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API)'
2024-10-01 22:50:50.037 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/api/Product/GetAll - 200 null application/json; charset=utf-8 89.9929ms
2024-10-01 22:50:51.658 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/api/Product/GetAll - application/json 0
2024-10-01 22:50:51.659 +07:00 [INF] Executing endpoint 'TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API)'
2024-10-01 22:50:51.660 +07:00 [INF] Route matched with {action = "GetAllV2", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllV2() on controller TechShopSolution.API.Controllers.ProductController (TechShopSolution.API).
2024-10-01 22:50:51.660 +07:00 [INF] Executing action method TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API) - Validation state: "Valid"
2024-10-01 22:50:51.660 +07:00 [INF] Getting all products
2024-10-01 22:50:51.661 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BestSeller], [p].[BrandId], [p].[Code], [p].[CreateAt], [p].[DeleteAt], [p].[Descriptions], [p].[Featured], [p].[Image], [p].[Instock], [p].[IsActive], [p].[IsDelete], [p].[MetaDescriptions], [p].[MetaKeywords], [p].[MetaTitle], [p].[MoreImages], [p].[Name], [p].[PromotionPrice], [p].[ShortDesc], [p].[Slug], [p].[Specifications], [p].[UnitPrice], [p].[UpdateAt], [p].[ViewCount], [p].[Warranty], [b].[Id], [t].[CateId], [t].[ProductId], [t].[Id], [t].[CateName], [t].[CateSlug], [t].[CreateAt], [t].[DeleteAt], [t].[IsActive], [t].[IsDelete], [t].[MetaDescriptions], [t].[MetaKeywords], [t].[MetaTitle], [t].[ParentId], [t].[UpdateAt], [b].[BrandName], [b].[BrandSlug], [b].[CreateAt], [b].[DeleteAt], [b].[IsActive], [b].[IsDelete], [b].[MetaDescriptions], [b].[MetaKeywords], [b].[MetaTitle], [b].[UpdateAt]
FROM [Product] AS [p]
INNER JOIN [Brand] AS [b] ON [p].[BrandId] = [b].[Id]
LEFT JOIN (
    SELECT [c].[CateId], [c].[ProductId], [c0].[Id], [c0].[CateName], [c0].[CateSlug], [c0].[CreateAt], [c0].[DeleteAt], [c0].[IsActive], [c0].[IsDelete], [c0].[MetaDescriptions], [c0].[MetaKeywords], [c0].[MetaTitle], [c0].[ParentId], [c0].[UpdateAt]
    FROM [CategoryProduct] AS [c]
    INNER JOIN [Category] AS [c0] ON [c].[CateId] = [c0].[Id]
) AS [t] ON [p].[Id] = [t].[ProductId]
ORDER BY [p].[Id], [b].[Id], [t].[CateId], [t].[ProductId]
2024-10-01 22:50:51.689 +07:00 [INF] Executed action method TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 29.5976ms.
2024-10-01 22:50:51.690 +07:00 [INF] Executing OkObjectResult, writing value of type 'TechShopSolution.Application.Models.Common.StandardResponse`1[[System.Collections.Generic.IEnumerable`1[[TechShopSolution.Application.Models.Products.ProductDTO, TechShopSolution.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-10-01 22:50:51.690 +07:00 [INF] Executed action TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API) in 30.4694ms
2024-10-01 22:50:51.690 +07:00 [INF] Executed endpoint 'TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API)'
2024-10-01 22:50:51.690 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/api/Product/GetAll - 200 null application/json; charset=utf-8 32.346ms
2024-10-01 22:50:54.010 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5061.4631ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:50:54.011 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:50:54.011 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5063.5307ms
2024-10-01 22:50:54.011 +07:00 [INF] Received HTTP response headers after 5063.8893ms - 503
2024-10-01 22:50:54.011 +07:00 [INF] End processing HTTP request after 5064.1718ms - 503
2024-10-01 22:50:54.012 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:50:54.013 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:50:54.013 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:50:54.015 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:50:54.016 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:50:54.016 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:51:03.322 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/api/v1/Product/GetAll - application/json 0
2024-10-01 22:51:03.323 +07:00 [INF] Executing endpoint 'TechShopSolution.API.Controllers.ProductController.GetAllV1 (TechShopSolution.API)'
2024-10-01 22:51:03.325 +07:00 [INF] Route matched with {action = "GetAllV1", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllV1() on controller TechShopSolution.API.Controllers.ProductController (TechShopSolution.API).
2024-10-01 22:51:03.326 +07:00 [INF] Executing action method TechShopSolution.API.Controllers.ProductController.GetAllV1 (TechShopSolution.API) - Validation state: "Valid"
2024-10-01 22:51:03.326 +07:00 [INF] Getting all products
2024-10-01 22:51:03.327 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BestSeller], [p].[BrandId], [p].[Code], [p].[CreateAt], [p].[DeleteAt], [p].[Descriptions], [p].[Featured], [p].[Image], [p].[Instock], [p].[IsActive], [p].[IsDelete], [p].[MetaDescriptions], [p].[MetaKeywords], [p].[MetaTitle], [p].[MoreImages], [p].[Name], [p].[PromotionPrice], [p].[ShortDesc], [p].[Slug], [p].[Specifications], [p].[UnitPrice], [p].[UpdateAt], [p].[ViewCount], [p].[Warranty], [b].[Id], [t].[CateId], [t].[ProductId], [t].[Id], [t].[CateName], [t].[CateSlug], [t].[CreateAt], [t].[DeleteAt], [t].[IsActive], [t].[IsDelete], [t].[MetaDescriptions], [t].[MetaKeywords], [t].[MetaTitle], [t].[ParentId], [t].[UpdateAt], [b].[BrandName], [b].[BrandSlug], [b].[CreateAt], [b].[DeleteAt], [b].[IsActive], [b].[IsDelete], [b].[MetaDescriptions], [b].[MetaKeywords], [b].[MetaTitle], [b].[UpdateAt]
FROM [Product] AS [p]
INNER JOIN [Brand] AS [b] ON [p].[BrandId] = [b].[Id]
LEFT JOIN (
    SELECT [c].[CateId], [c].[ProductId], [c0].[Id], [c0].[CateName], [c0].[CateSlug], [c0].[CreateAt], [c0].[DeleteAt], [c0].[IsActive], [c0].[IsDelete], [c0].[MetaDescriptions], [c0].[MetaKeywords], [c0].[MetaTitle], [c0].[ParentId], [c0].[UpdateAt]
    FROM [CategoryProduct] AS [c]
    INNER JOIN [Category] AS [c0] ON [c].[CateId] = [c0].[Id]
) AS [t] ON [p].[Id] = [t].[ProductId]
ORDER BY [p].[Id], [b].[Id], [t].[CateId], [t].[ProductId]
2024-10-01 22:51:03.357 +07:00 [INF] Executed action method TechShopSolution.API.Controllers.ProductController.GetAllV1 (TechShopSolution.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 31.2439ms.
2024-10-01 22:51:03.357 +07:00 [INF] Executing OkObjectResult, writing value of type 'TechShopSolution.Application.Models.Common.StandardResponse`1[[System.Collections.Generic.IEnumerable`1[[TechShopSolution.Application.Models.Products.ProductDTO, TechShopSolution.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-10-01 22:51:03.358 +07:00 [INF] Executed action TechShopSolution.API.Controllers.ProductController.GetAllV1 (TechShopSolution.API) in 32.2411ms
2024-10-01 22:51:03.358 +07:00 [INF] Executed endpoint 'TechShopSolution.API.Controllers.ProductController.GetAllV1 (TechShopSolution.API)'
2024-10-01 22:51:03.358 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/api/v1/Product/GetAll - 200 null application/json; charset=utf-8 36.1698ms
2024-10-01 22:51:04.123 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:51:04.123 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:51:04.123 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:51:04.124 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:51:04.124 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:51:07.530 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/api/v2/Product/GetAll - application/json 0
2024-10-01 22:51:07.532 +07:00 [INF] Executing endpoint 'TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API)'
2024-10-01 22:51:07.534 +07:00 [INF] Route matched with {action = "GetAllV2", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllV2() on controller TechShopSolution.API.Controllers.ProductController (TechShopSolution.API).
2024-10-01 22:51:07.534 +07:00 [INF] Executing action method TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API) - Validation state: "Valid"
2024-10-01 22:51:07.535 +07:00 [INF] Getting all products
2024-10-01 22:51:07.536 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BestSeller], [p].[BrandId], [p].[Code], [p].[CreateAt], [p].[DeleteAt], [p].[Descriptions], [p].[Featured], [p].[Image], [p].[Instock], [p].[IsActive], [p].[IsDelete], [p].[MetaDescriptions], [p].[MetaKeywords], [p].[MetaTitle], [p].[MoreImages], [p].[Name], [p].[PromotionPrice], [p].[ShortDesc], [p].[Slug], [p].[Specifications], [p].[UnitPrice], [p].[UpdateAt], [p].[ViewCount], [p].[Warranty], [b].[Id], [t].[CateId], [t].[ProductId], [t].[Id], [t].[CateName], [t].[CateSlug], [t].[CreateAt], [t].[DeleteAt], [t].[IsActive], [t].[IsDelete], [t].[MetaDescriptions], [t].[MetaKeywords], [t].[MetaTitle], [t].[ParentId], [t].[UpdateAt], [b].[BrandName], [b].[BrandSlug], [b].[CreateAt], [b].[DeleteAt], [b].[IsActive], [b].[IsDelete], [b].[MetaDescriptions], [b].[MetaKeywords], [b].[MetaTitle], [b].[UpdateAt]
FROM [Product] AS [p]
INNER JOIN [Brand] AS [b] ON [p].[BrandId] = [b].[Id]
LEFT JOIN (
    SELECT [c].[CateId], [c].[ProductId], [c0].[Id], [c0].[CateName], [c0].[CateSlug], [c0].[CreateAt], [c0].[DeleteAt], [c0].[IsActive], [c0].[IsDelete], [c0].[MetaDescriptions], [c0].[MetaKeywords], [c0].[MetaTitle], [c0].[ParentId], [c0].[UpdateAt]
    FROM [CategoryProduct] AS [c]
    INNER JOIN [Category] AS [c0] ON [c].[CateId] = [c0].[Id]
) AS [t] ON [p].[Id] = [t].[ProductId]
ORDER BY [p].[Id], [b].[Id], [t].[CateId], [t].[ProductId]
2024-10-01 22:51:07.573 +07:00 [INF] Executed action method TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 38.0607ms.
2024-10-01 22:51:07.573 +07:00 [INF] Executing OkObjectResult, writing value of type 'TechShopSolution.Application.Models.Common.StandardResponse`1[[System.Collections.Generic.IEnumerable`1[[TechShopSolution.Application.Models.Products.ProductDTO, TechShopSolution.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-10-01 22:51:07.573 +07:00 [INF] Executed action TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API) in 38.8581ms
2024-10-01 22:51:07.573 +07:00 [INF] Executed endpoint 'TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API)'
2024-10-01 22:51:07.573 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/api/v2/Product/GetAll - 200 null application/json; charset=utf-8 43.8259ms
2024-10-01 22:51:09.189 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5064.351ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:51:09.189 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:51:09.189 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5065.4701ms
2024-10-01 22:51:09.189 +07:00 [INF] Received HTTP response headers after 5065.8094ms - 503
2024-10-01 22:51:09.189 +07:00 [INF] End processing HTTP request after 5066.0043ms - 503
2024-10-01 22:51:09.190 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:51:09.190 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:51:09.191 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:51:09.191 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:51:09.192 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:51:09.192 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:51:19.232 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:51:19.232 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:51:19.232 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:51:19.233 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:51:19.233 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:51:24.315 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5081.1949ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:51:24.315 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:51:24.315 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5082.5813ms
2024-10-01 22:51:24.315 +07:00 [INF] Received HTTP response headers after 5082.8804ms - 503
2024-10-01 22:51:24.315 +07:00 [INF] End processing HTTP request after 5083.0856ms - 503
2024-10-01 22:51:24.316 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:51:24.316 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:51:24.317 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:51:24.317 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:51:24.318 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:51:24.318 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:51:34.350 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:51:34.350 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:51:34.350 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:51:34.351 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:51:34.351 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:51:39.416 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5064.5287ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:51:39.416 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:51:39.416 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5065.5854ms
2024-10-01 22:51:39.416 +07:00 [INF] Received HTTP response headers after 5065.8735ms - 503
2024-10-01 22:51:39.416 +07:00 [INF] End processing HTTP request after 5066.1249ms - 503
2024-10-01 22:51:39.417 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:51:39.417 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:51:39.417 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:51:39.418 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:51:39.418 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:51:39.418 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:51:49.462 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:51:49.463 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:51:49.463 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:51:49.463 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:51:49.463 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:51:54.534 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5069.4836ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:51:54.534 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:51:54.535 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5071.5587ms
2024-10-01 22:51:54.535 +07:00 [INF] Received HTTP response headers after 5071.8662ms - 503
2024-10-01 22:51:54.535 +07:00 [INF] End processing HTTP request after 5072.1114ms - 503
2024-10-01 22:51:54.536 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:51:54.536 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:51:54.536 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:51:54.537 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:51:54.537 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:51:54.537 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:52:04.590 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:52:04.592 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:52:04.592 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:52:04.619 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:52:04.620 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:52:09.693 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5072.4892ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:52:09.693 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:52:09.693 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5074.3266ms
2024-10-01 22:52:09.693 +07:00 [INF] Received HTTP response headers after 5100.5128ms - 503
2024-10-01 22:52:09.693 +07:00 [INF] End processing HTTP request after 5101.9428ms - 503
2024-10-01 22:52:09.694 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:52:09.694 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:52:09.695 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:52:09.696 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:52:09.696 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:52:09.696 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:52:19.727 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:52:19.727 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:52:19.727 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:52:19.727 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:52:19.728 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:52:24.812 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5084.0594ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:52:24.813 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:52:24.813 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5085.3768ms
2024-10-01 22:52:24.813 +07:00 [INF] Received HTTP response headers after 5085.6611ms - 503
2024-10-01 22:52:24.813 +07:00 [INF] End processing HTTP request after 5085.8979ms - 503
2024-10-01 22:52:24.814 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:52:24.814 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:52:24.814 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:52:24.815 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:52:24.815 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:52:24.815 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:52:34.856 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:52:34.856 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:52:34.856 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:52:34.856 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:52:34.856 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:52:39.947 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5088.532ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:52:39.950 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:52:39.950 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5093.9208ms
2024-10-01 22:52:39.951 +07:00 [INF] Received HTTP response headers after 5094.9633ms - 503
2024-10-01 22:52:39.953 +07:00 [INF] End processing HTTP request after 5095.6865ms - 503
2024-10-01 22:52:39.965 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:52:39.967 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:52:39.972 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:52:39.979 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:52:39.985 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:52:39.989 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:52:50.033 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:52:50.033 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 22:52:50.033 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 22:52:50.034 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 22:52:50.034 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:52:55.104 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5069.2223ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:52:55.104 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:52:55.105 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5070.7252ms
2024-10-01 22:52:55.105 +07:00 [INF] Received HTTP response headers after 5071.038ms - 503
2024-10-01 22:52:55.105 +07:00 [INF] End processing HTTP request after 5071.2959ms - 503
2024-10-01 22:52:55.106 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:52:55.106 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:52:55.107 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:52:55.109 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:52:55.110 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:52:55.110 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:52:56.334 +07:00 [INF] Application is shutting down...
2024-10-01 22:53:15.534 +07:00 [INF] User profile is available. Using 'C:\Users\User\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-10-01 22:53:15.900 +07:00 [INF] Initializing UI Database
2024-10-01 22:53:16.502 +07:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2024-10-01 22:53:16.521 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-10-01 22:53:16.669 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Configurations" AS "c")
2024-10-01 22:53:16.701 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:53:17.052 +07:00 [INF] Now listening on: https://localhost:7042
2024-10-01 22:53:17.054 +07:00 [INF] Now listening on: http://localhost:5216
2024-10-01 22:53:17.098 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:53:17.132 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:53:17.137 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:53:17.174 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-10-01 22:53:17.177 +07:00 [INF] Hosting environment: Development
2024-10-01 22:53:17.180 +07:00 [INF] Content root path: D:\Projects\TechShopSolution\TechShopSolution.API
2024-10-01 22:53:17.401 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:53:17.413 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7042/ - null null
2024-10-01 22:53:17.600 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:53:17.604 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7042/ - 404 0 null 190.058ms
2024-10-01 22:53:17.654 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7042/, Response status code: 404
2024-10-01 22:53:22.782 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5145.097ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:53:22.829 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:53:22.830 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5463.1167ms
2024-10-01 22:53:22.841 +07:00 [INF] Received HTTP response headers after 5696.7288ms - 503
2024-10-01 22:53:22.843 +07:00 [INF] End processing HTTP request after 5718.9791ms - 503
2024-10-01 22:53:22.928 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:53:22.940 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:53:22.987 +07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2024-10-01 22:53:22.995 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:53:23.108 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:53:23.113 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:53:23.116 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:53:33.323 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:53:33.326 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:53:33.327 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:53:33.329 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:53:33.332 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:53:38.418 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5083.3933ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:53:38.419 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:53:38.419 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5091.0076ms
2024-10-01 22:53:38.423 +07:00 [INF] Received HTTP response headers after 5093.1676ms - 503
2024-10-01 22:53:38.425 +07:00 [INF] End processing HTTP request after 5099.2102ms - 503
2024-10-01 22:53:38.430 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:53:38.432 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:53:38.434 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:53:38.437 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:53:38.439 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:53:38.441 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:53:40.694 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7042/swagger/index.html - null null
2024-10-01 22:53:40.748 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7042/swagger/index.html - 200 null text/html;charset=utf-8 54.1773ms
2024-10-01 22:53:40.881 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7042/swagger/v1/swagger.json - null null
2024-10-01 22:53:40.971 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7042/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 90.4268ms
2024-10-01 22:53:48.481 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:53:48.484 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:53:48.485 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:53:48.486 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:53:48.487 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:53:53.579 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5090.1841ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:53:53.580 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:53:53.580 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5093.6004ms
2024-10-01 22:53:53.581 +07:00 [INF] Received HTTP response headers after 5094.7101ms - 503
2024-10-01 22:53:53.583 +07:00 [INF] End processing HTTP request after 5099.6871ms - 503
2024-10-01 22:53:53.586 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:53:53.588 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:53:53.590 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:53:53.593 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:53:53.595 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:53:53.597 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:54:03.649 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:54:03.651 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:54:03.652 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:54:03.654 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:54:03.654 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:54:08.736 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5079.4153ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:54:08.737 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:54:08.737 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5083.3355ms
2024-10-01 22:54:08.739 +07:00 [INF] Received HTTP response headers after 5084.3294ms - 503
2024-10-01 22:54:08.741 +07:00 [INF] End processing HTTP request after 5089.4769ms - 503
2024-10-01 22:54:08.743 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:54:08.746 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:54:08.748 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:54:08.751 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:54:08.753 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:54:08.755 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:54:18.845 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:54:18.846 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:54:18.848 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:54:18.849 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:54:18.849 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:54:23.900 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5048.5239ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:54:23.901 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:54:23.901 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5052.0192ms
2024-10-01 22:54:23.903 +07:00 [INF] Received HTTP response headers after 5052.8725ms - 503
2024-10-01 22:54:23.905 +07:00 [INF] End processing HTTP request after 5057.9777ms - 503
2024-10-01 22:54:23.907 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:54:23.909 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:54:23.912 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:54:23.915 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:54:23.917 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:54:23.919 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:54:33.964 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:54:33.965 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:54:33.967 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:54:33.972 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:54:33.973 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:54:39.073 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5097.4964ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:54:39.073 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:54:39.074 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5105.4877ms
2024-10-01 22:54:39.076 +07:00 [INF] Received HTTP response headers after 5106.749ms - 503
2024-10-01 22:54:39.078 +07:00 [INF] End processing HTTP request after 5112.1839ms - 503
2024-10-01 22:54:39.080 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:54:39.081 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:54:39.084 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:54:39.086 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:54:39.087 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:54:39.089 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:54:49.124 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:54:49.126 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:54:49.128 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:54:49.129 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:54:49.129 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:54:54.218 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5087.2642ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:54:54.219 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:54:54.219 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5090.22ms
2024-10-01 22:54:54.220 +07:00 [INF] Received HTTP response headers after 5091.1069ms - 503
2024-10-01 22:54:54.222 +07:00 [INF] End processing HTTP request after 5096.5777ms - 503
2024-10-01 22:54:54.224 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:54:54.226 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:54:54.227 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:54:54.230 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:54:54.232 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:54:54.233 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:55:04.281 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:55:04.283 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:55:04.285 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:55:04.286 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:55:04.286 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:55:09.372 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5083.363ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:55:09.373 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:55:09.373 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5087.1146ms
2024-10-01 22:55:09.375 +07:00 [INF] Received HTTP response headers after 5088.5134ms - 503
2024-10-01 22:55:09.377 +07:00 [INF] End processing HTTP request after 5093.5493ms - 503
2024-10-01 22:55:09.380 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:55:09.381 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:55:09.383 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:55:09.387 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:55:09.388 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:55:09.390 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:55:19.423 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:55:19.427 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:55:19.428 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:55:19.434 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:55:19.434 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:55:24.501 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5063.52ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:55:24.502 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:55:24.502 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5068.0257ms
2024-10-01 22:55:24.504 +07:00 [INF] Received HTTP response headers after 5073.9769ms - 503
2024-10-01 22:55:24.506 +07:00 [INF] End processing HTTP request after 5081.0452ms - 503
2024-10-01 22:55:24.508 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:55:24.510 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:55:24.512 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:55:24.514 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:55:24.516 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:55:24.525 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:55:34.571 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:55:34.573 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:55:34.575 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:55:34.576 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:55:34.576 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:55:39.651 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5073.0227ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:55:39.651 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:55:39.651 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5075.9771ms
2024-10-01 22:55:39.653 +07:00 [INF] Received HTTP response headers after 5076.8912ms - 503
2024-10-01 22:55:39.655 +07:00 [INF] End processing HTTP request after 5081.7345ms - 503
2024-10-01 22:55:39.657 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:55:39.658 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:55:39.660 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:55:39.663 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:55:39.664 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:55:39.666 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:55:49.714 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:55:49.716 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:55:49.717 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:55:49.718 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:55:49.719 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:55:54.800 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5079.3695ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:55:54.801 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:55:54.801 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5082.7489ms
2024-10-01 22:55:54.803 +07:00 [INF] Received HTTP response headers after 5083.5125ms - 503
2024-10-01 22:55:54.805 +07:00 [INF] End processing HTTP request after 5089.4029ms - 503
2024-10-01 22:55:54.807 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:55:54.809 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:55:54.811 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:55:54.813 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:55:54.815 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:55:54.816 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:56:04.867 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:56:04.869 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:56:04.870 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:56:04.871 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:56:04.871 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:56:09.946 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5071.8245ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:56:09.947 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:56:09.948 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5076.9548ms
2024-10-01 22:56:09.951 +07:00 [INF] Received HTTP response headers after 5077.818ms - 503
2024-10-01 22:56:09.960 +07:00 [INF] End processing HTTP request after 5087.6175ms - 503
2024-10-01 22:56:09.965 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:56:09.968 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:56:09.971 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:56:09.974 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:56:09.976 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:56:09.978 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:56:20.020 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:56:20.022 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:56:20.023 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:56:20.024 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:56:20.025 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:56:25.105 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5076.5205ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:56:25.105 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:56:25.105 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5081.2162ms
2024-10-01 22:56:25.107 +07:00 [INF] Received HTTP response headers after 5082.1081ms - 503
2024-10-01 22:56:25.108 +07:00 [INF] End processing HTTP request after 5086.6976ms - 503
2024-10-01 22:56:25.112 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:56:25.115 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:56:25.117 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:56:25.120 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:56:25.122 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:56:25.125 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:56:35.159 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:56:35.161 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:56:35.162 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:56:35.164 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:56:35.164 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:56:40.230 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5059.3366ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:56:40.231 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:56:40.233 +07:00 [INF] Received HTTP response headers after 5068.4724ms - 503
2024-10-01 22:56:40.233 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5067.111ms
2024-10-01 22:56:40.235 +07:00 [INF] End processing HTTP request after 5073.4786ms - 503
2024-10-01 22:56:40.238 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:56:40.239 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:56:40.241 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:56:40.244 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:56:40.245 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:56:40.247 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:56:50.299 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:56:50.301 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:56:50.303 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:56:50.304 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:56:50.304 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:56:55.384 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5075.9363ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:56:55.384 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:56:55.385 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5080.8491ms
2024-10-01 22:56:55.387 +07:00 [INF] Received HTTP response headers after 5081.6939ms - 503
2024-10-01 22:56:55.389 +07:00 [INF] End processing HTTP request after 5087.687ms - 503
2024-10-01 22:56:55.394 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:56:55.398 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:56:55.459 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:56:55.463 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:56:55.466 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:56:55.468 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:57:05.521 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:57:05.523 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:57:05.525 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:57:05.526 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:57:05.527 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:57:15.840 +07:00 [INF] User profile is available. Using 'C:\Users\User\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-10-01 22:57:16.169 +07:00 [INF] Initializing UI Database
2024-10-01 22:57:16.827 +07:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2024-10-01 22:57:16.847 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-10-01 22:57:16.987 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Configurations" AS "c")
2024-10-01 22:57:17.019 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:57:17.309 +07:00 [INF] Now listening on: https://localhost:7042
2024-10-01 22:57:17.311 +07:00 [INF] Now listening on: http://localhost:5216
2024-10-01 22:57:17.349 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:57:17.377 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:57:17.380 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:57:17.409 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-10-01 22:57:17.412 +07:00 [INF] Hosting environment: Development
2024-10-01 22:57:17.414 +07:00 [INF] Content root path: D:\Projects\TechShopSolution\TechShopSolution.API
2024-10-01 22:57:17.618 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:57:17.645 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7042/ - null null
2024-10-01 22:57:17.762 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:57:17.764 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7042/ - 404 0 null 118.9636ms
2024-10-01 22:57:17.798 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7042/, Response status code: 404
2024-10-01 22:57:21.363 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7042/swagger/index.html - null null
2024-10-01 22:57:21.427 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7042/swagger/index.html - 200 null text/html;charset=utf-8 62.9831ms
2024-10-01 22:57:21.508 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7042/swagger/v1/swagger.json - null null
2024-10-01 22:57:21.513 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7042/swagger/favicon-32x32.png - null null
2024-10-01 22:57:21.533 +07:00 [INF] Sending file. Request path: '/favicon-32x32.png'. Physical path: 'N/A'
2024-10-01 22:57:21.534 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7042/swagger/favicon-32x32.png - 200 628 image/png 21.0787ms
2024-10-01 22:57:21.606 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7042/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 98.6023ms
2024-10-01 22:57:22.909 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5118.562ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:57:22.941 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:57:22.942 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5409.8051ms
2024-10-01 22:57:22.954 +07:00 [INF] Received HTTP response headers after 5566.5094ms - 503
2024-10-01 22:57:22.956 +07:00 [INF] End processing HTTP request after 5584.4972ms - 503
2024-10-01 22:57:23.034 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:57:23.046 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:57:23.094 +07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2024-10-01 22:57:23.101 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:57:23.219 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:57:23.226 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:57:23.228 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:57:33.381 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:57:33.384 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:57:33.385 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:57:33.386 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:57:33.387 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:57:38.472 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5082.2328ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:57:38.473 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:57:38.474 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5087.288ms
2024-10-01 22:57:38.476 +07:00 [INF] Received HTTP response headers after 5088.8302ms - 503
2024-10-01 22:57:38.477 +07:00 [INF] End processing HTTP request after 5093.8333ms - 503
2024-10-01 22:57:38.482 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:57:38.484 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:57:38.487 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:57:38.492 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:57:38.493 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:57:38.495 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:57:48.545 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:57:48.547 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:57:48.550 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:57:48.551 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:57:48.552 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:57:53.635 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5081.1702ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:57:53.635 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:57:53.636 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5084.383ms
2024-10-01 22:57:53.637 +07:00 [INF] Received HTTP response headers after 5085.7625ms - 503
2024-10-01 22:57:53.639 +07:00 [INF] End processing HTTP request after 5091.8441ms - 503
2024-10-01 22:57:53.641 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:57:53.642 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:57:53.645 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:57:53.648 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:57:53.650 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:57:53.652 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:58:03.686 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:58:03.687 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:58:03.689 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:58:03.690 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:58:03.690 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:58:08.781 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5088.6183ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:58:08.782 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:58:08.784 +07:00 [INF] Received HTTP response headers after 5093.0865ms - 503
2024-10-01 22:58:08.784 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5091.9221ms
2024-10-01 22:58:08.785 +07:00 [INF] End processing HTTP request after 5097.4844ms - 503
2024-10-01 22:58:08.788 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:58:08.789 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:58:08.792 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:58:08.794 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:58:08.796 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:58:08.797 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:58:18.843 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:58:18.846 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:58:18.848 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:58:18.850 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:58:18.850 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:58:23.943 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5090.7024ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:58:23.944 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:58:23.944 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5094.1036ms
2024-10-01 22:58:23.946 +07:00 [INF] Received HTTP response headers after 5095.5754ms - 503
2024-10-01 22:58:23.948 +07:00 [INF] End processing HTTP request after 5102.3324ms - 503
2024-10-01 22:58:23.950 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:58:23.952 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:58:23.954 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:58:23.957 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:58:23.959 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:58:23.961 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:58:33.998 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:58:34.000 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:58:34.002 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:58:34.003 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:58:34.003 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:58:39.091 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5081.9411ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:58:39.092 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:58:39.092 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5089.3441ms
2024-10-01 22:58:39.096 +07:00 [INF] Received HTTP response headers after 5090.4761ms - 503
2024-10-01 22:58:39.099 +07:00 [INF] End processing HTTP request after 5097.683ms - 503
2024-10-01 22:58:39.102 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:58:39.104 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:58:39.106 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:58:39.110 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:58:39.114 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:58:39.118 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:58:49.164 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:58:49.166 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:58:49.167 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:58:49.168 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:58:49.169 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:58:54.265 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5094.2549ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:58:54.266 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:58:54.266 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5097.7795ms
2024-10-01 22:58:54.268 +07:00 [INF] Received HTTP response headers after 5098.7908ms - 503
2024-10-01 22:58:54.270 +07:00 [INF] End processing HTTP request after 5104.4341ms - 503
2024-10-01 22:58:54.272 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:58:54.273 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:58:54.275 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:58:54.278 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:58:54.279 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:58:54.280 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:59:04.324 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:59:04.326 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:59:04.328 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:59:04.330 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:59:04.330 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:59:09.418 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5085.4936ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:59:09.418 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:59:09.418 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5088.5036ms
2024-10-01 22:59:09.420 +07:00 [INF] Received HTTP response headers after 5090.0181ms - 503
2024-10-01 22:59:09.423 +07:00 [INF] End processing HTTP request after 5096.4627ms - 503
2024-10-01 22:59:09.425 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:59:09.427 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:59:09.430 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:59:09.433 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:59:09.435 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:59:09.436 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:59:19.471 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:59:19.473 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:59:19.474 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:59:19.479 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:59:19.479 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:59:24.579 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5096.7062ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:59:24.579 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:59:24.580 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5100.4736ms
2024-10-01 22:59:24.582 +07:00 [INF] Received HTTP response headers after 5105.6712ms - 503
2024-10-01 22:59:24.584 +07:00 [INF] End processing HTTP request after 5111.1604ms - 503
2024-10-01 22:59:24.586 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:59:24.628 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (Size = 11), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Failures" ("HealthCheckName", "IsUpAndRunning", "LastNotified")
VALUES (@p0, @p1, @p2)
RETURNING "Id";
2024-10-01 22:59:24.671 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:59:24.673 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:59:24.675 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:59:24.677 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:59:34.726 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:59:34.727 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:59:34.729 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:59:34.730 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:59:34.730 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:59:39.802 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5069.5249ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:59:39.803 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:59:39.803 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5073.3434ms
2024-10-01 22:59:39.805 +07:00 [INF] Received HTTP response headers after 5074.2719ms - 503
2024-10-01 22:59:39.807 +07:00 [INF] End processing HTTP request after 5078.9981ms - 503
2024-10-01 22:59:39.809 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:59:39.812 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:59:39.814 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:59:39.818 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:59:39.821 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:59:39.825 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:59:49.864 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 22:59:49.866 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 22:59:49.867 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 22:59:49.869 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 22:59:49.869 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 22:59:54.957 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5085.8457ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 22:59:54.957 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 22:59:54.958 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5089.2212ms
2024-10-01 22:59:54.959 +07:00 [INF] Received HTTP response headers after 5090.1322ms - 503
2024-10-01 22:59:54.961 +07:00 [INF] End processing HTTP request after 5095.0661ms - 503
2024-10-01 22:59:54.963 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 22:59:54.965 +07:00 [INF] Notification is sent on same window time.
2024-10-01 22:59:54.967 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 22:59:54.969 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:59:54.971 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 22:59:54.972 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:00:05.027 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:00:05.029 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:00:05.030 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:00:05.031 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:00:05.032 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:00:10.093 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5059.7667ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:00:10.094 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:00:10.094 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5062.8026ms
2024-10-01 23:00:10.096 +07:00 [INF] Received HTTP response headers after 5063.832ms - 503
2024-10-01 23:00:10.099 +07:00 [INF] End processing HTTP request after 5069.3135ms - 503
2024-10-01 23:00:10.102 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:00:10.104 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:00:10.106 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:00:10.108 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:00:10.110 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:00:10.112 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:00:20.149 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:00:20.151 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:00:20.152 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:00:20.154 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:00:20.154 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:00:25.252 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5096.0688ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:00:25.252 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:00:25.253 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5099.1016ms
2024-10-01 23:00:25.254 +07:00 [INF] Received HTTP response headers after 5100.4307ms - 503
2024-10-01 23:00:25.256 +07:00 [INF] End processing HTTP request after 5105.6408ms - 503
2024-10-01 23:00:25.259 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:00:25.260 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:00:25.262 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:00:25.264 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:00:25.266 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:00:25.267 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:00:35.301 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:00:35.303 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:00:35.304 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:00:35.306 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:00:35.306 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:00:40.365 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5057.6172ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:00:40.366 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:00:40.366 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5061.2063ms
2024-10-01 23:00:40.368 +07:00 [INF] Received HTTP response headers after 5062.1316ms - 503
2024-10-01 23:00:40.369 +07:00 [INF] End processing HTTP request after 5067.213ms - 503
2024-10-01 23:00:40.371 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:00:40.373 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:00:40.375 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:00:40.377 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:00:40.379 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:00:40.380 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:00:50.418 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:00:50.420 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:00:50.422 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:00:50.423 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:00:50.423 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:00:55.506 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5080.6319ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:00:55.506 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:00:55.506 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5083.7405ms
2024-10-01 23:00:55.508 +07:00 [INF] Received HTTP response headers after 5084.7408ms - 503
2024-10-01 23:00:55.510 +07:00 [INF] End processing HTTP request after 5091.0053ms - 503
2024-10-01 23:00:55.512 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:00:55.514 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:00:55.516 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:00:55.518 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:00:55.524 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:00:55.527 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:01:05.576 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:01:05.578 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:01:05.580 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:01:05.581 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:01:05.582 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:01:10.752 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5169.2158ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:01:10.753 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:01:10.753 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5172.5357ms
2024-10-01 23:01:10.755 +07:00 [INF] Received HTTP response headers after 5173.4068ms - 503
2024-10-01 23:01:10.758 +07:00 [INF] End processing HTTP request after 5179.5144ms - 503
2024-10-01 23:01:10.760 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:01:10.762 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:01:10.764 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:01:10.766 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:01:10.768 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:01:10.769 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:01:20.805 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:01:20.806 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:01:20.808 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:01:20.813 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:01:20.813 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:01:25.890 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5075.6401ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:01:25.891 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:01:25.891 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5078.6861ms
2024-10-01 23:01:25.893 +07:00 [INF] Received HTTP response headers after 5083.8932ms - 503
2024-10-01 23:01:25.897 +07:00 [INF] End processing HTTP request after 5089.6444ms - 503
2024-10-01 23:01:25.900 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:01:25.901 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:01:25.903 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:01:25.906 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:01:25.907 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:01:25.909 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:01:35.963 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:01:35.965 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:01:35.967 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:01:35.968 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:01:35.968 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:01:41.050 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5079.9675ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:01:41.051 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:01:41.051 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5083.3314ms
2024-10-01 23:01:41.053 +07:00 [INF] Received HTTP response headers after 5084.1817ms - 503
2024-10-01 23:01:41.055 +07:00 [INF] End processing HTTP request after 5090.3344ms - 503
2024-10-01 23:01:41.057 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:01:41.058 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:01:41.060 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:01:41.063 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:01:41.064 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:01:41.066 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:01:51.117 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:01:51.119 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:01:51.120 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:01:51.121 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:01:51.121 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:01:56.177 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5053.7697ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:01:56.177 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:01:56.178 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5056.936ms
2024-10-01 23:01:56.180 +07:00 [INF] Received HTTP response headers after 5057.7153ms - 503
2024-10-01 23:01:56.181 +07:00 [INF] End processing HTTP request after 5063.5069ms - 503
2024-10-01 23:01:56.183 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:01:56.184 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:01:56.186 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:01:56.189 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:01:56.190 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:01:56.192 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:02:06.242 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:02:06.244 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:02:06.246 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:02:06.247 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:02:06.247 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:02:11.340 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5089.9196ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:02:11.341 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:02:11.341 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5094.6885ms
2024-10-01 23:02:11.344 +07:00 [INF] Received HTTP response headers after 5095.795ms - 503
2024-10-01 23:02:11.346 +07:00 [INF] End processing HTTP request after 5102.0716ms - 503
2024-10-01 23:02:11.350 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:02:11.353 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:02:11.356 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:02:11.359 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:02:11.362 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:02:11.364 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:02:21.409 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:02:21.411 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:02:21.417 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:02:21.419 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:02:21.419 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:02:26.493 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5072.0003ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:02:26.493 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:02:26.493 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5075.0495ms
2024-10-01 23:02:26.495 +07:00 [INF] Received HTTP response headers after 5076.5128ms - 503
2024-10-01 23:02:26.497 +07:00 [INF] End processing HTTP request after 5087.0258ms - 503
2024-10-01 23:02:26.499 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:02:26.501 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:02:26.502 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:02:26.506 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:02:26.508 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:02:26.509 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:02:36.552 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:02:36.555 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:02:36.557 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:02:36.558 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:02:36.558 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:02:41.609 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5049.1751ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:02:41.609 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:02:41.610 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5052.6925ms
2024-10-01 23:02:41.612 +07:00 [INF] Received HTTP response headers after 5053.2323ms - 503
2024-10-01 23:02:41.613 +07:00 [INF] End processing HTTP request after 5060.2293ms - 503
2024-10-01 23:02:41.615 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:02:41.617 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:02:41.619 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:02:41.621 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:02:41.622 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:02:41.624 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:02:51.654 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:02:51.656 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:02:51.657 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:02:51.658 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:02:51.658 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:02:56.729 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5068.9196ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:02:56.729 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:02:56.729 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5072.0019ms
2024-10-01 23:02:56.731 +07:00 [INF] Received HTTP response headers after 5072.6905ms - 503
2024-10-01 23:02:56.733 +07:00 [INF] End processing HTTP request after 5077.5588ms - 503
2024-10-01 23:02:56.735 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:02:56.736 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:02:56.738 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:02:56.740 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:02:56.742 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:02:56.743 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:03:06.785 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:03:06.787 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:03:06.788 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:03:06.789 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:03:06.789 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:03:11.891 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5094.5789ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:03:11.892 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:03:11.893 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5103.9536ms
2024-10-01 23:03:11.899 +07:00 [INF] Received HTTP response headers after 5104.7604ms - 503
2024-10-01 23:03:11.903 +07:00 [INF] End processing HTTP request after 5114.2301ms - 503
2024-10-01 23:03:11.910 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:03:11.937 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:03:11.941 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:03:11.945 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:03:11.947 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:03:11.949 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:03:22.001 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:03:22.003 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:03:22.005 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:03:22.011 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:03:22.012 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:03:27.100 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5085.9874ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:03:27.100 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:03:27.100 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5089.1881ms
2024-10-01 23:03:27.102 +07:00 [INF] Received HTTP response headers after 5095.3278ms - 503
2024-10-01 23:03:27.104 +07:00 [INF] End processing HTTP request after 5101.8497ms - 503
2024-10-01 23:03:27.106 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:03:27.108 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:03:27.110 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:03:27.118 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:03:27.120 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:03:27.122 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:03:37.165 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:03:37.166 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:03:37.168 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:03:37.169 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:03:37.169 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:03:42.240 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5069.5506ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:03:42.241 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:03:42.241 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5072.9562ms
2024-10-01 23:03:42.242 +07:00 [INF] Received HTTP response headers after 5073.7469ms - 503
2024-10-01 23:03:42.244 +07:00 [INF] End processing HTTP request after 5078.4704ms - 503
2024-10-01 23:03:42.246 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:03:42.248 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:03:42.249 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:03:42.251 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:03:42.253 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:03:42.255 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:03:52.299 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:03:52.301 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:03:52.302 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:03:52.303 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:03:52.304 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:03:57.385 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5079.8575ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:03:57.386 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:03:57.386 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5083.4035ms
2024-10-01 23:03:57.388 +07:00 [INF] Received HTTP response headers after 5084.0923ms - 503
2024-10-01 23:03:57.390 +07:00 [INF] End processing HTTP request after 5089.3864ms - 503
2024-10-01 23:03:57.392 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:03:57.393 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:03:57.395 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:03:57.398 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:03:57.399 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:03:57.401 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:04:07.442 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:04:07.444 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:04:07.445 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:04:07.446 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:04:07.447 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:04:12.526 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5077.7174ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:04:12.526 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:04:12.527 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5080.9067ms
2024-10-01 23:04:12.528 +07:00 [INF] Received HTTP response headers after 5081.8163ms - 503
2024-10-01 23:04:12.530 +07:00 [INF] End processing HTTP request after 5086.2638ms - 503
2024-10-01 23:04:12.532 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:04:12.533 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:04:12.535 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:04:12.537 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:04:12.539 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:04:12.540 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:04:22.581 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:04:22.582 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:04:22.583 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:04:22.585 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:04:22.585 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:04:27.668 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5081.3877ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:04:27.668 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:04:27.668 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5084.0112ms
2024-10-01 23:04:27.669 +07:00 [INF] Received HTTP response headers after 5085.082ms - 503
2024-10-01 23:04:27.671 +07:00 [INF] End processing HTTP request after 5089.3577ms - 503
2024-10-01 23:04:27.673 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:04:27.675 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:04:27.676 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:04:27.679 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:04:27.681 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:04:27.682 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:04:37.718 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:04:37.720 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:04:37.723 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:04:37.725 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:04:37.726 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:04:42.806 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5075.2751ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:04:42.806 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:04:42.806 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5082.6867ms
2024-10-01 23:04:42.809 +07:00 [INF] Received HTTP response headers after 5084.1988ms - 503
2024-10-01 23:04:42.811 +07:00 [INF] End processing HTTP request after 5091.873ms - 503
2024-10-01 23:04:42.813 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:04:42.815 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:04:42.818 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:04:42.821 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:04:42.823 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:04:42.824 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:04:52.871 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:04:52.872 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:04:52.874 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:04:52.875 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:04:52.875 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:04:57.957 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5079.7788ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:04:57.957 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:04:57.957 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5083.31ms
2024-10-01 23:04:57.959 +07:00 [INF] Received HTTP response headers after 5083.9784ms - 503
2024-10-01 23:04:57.960 +07:00 [INF] End processing HTTP request after 5088.4111ms - 503
2024-10-01 23:04:57.963 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:04:57.966 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:04:57.970 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:04:57.973 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:04:57.974 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:04:57.976 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:05:08.028 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:05:08.030 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:05:08.031 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:05:08.032 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:05:08.033 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:05:13.135 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5100.1204ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:05:13.135 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:05:13.135 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5103.3677ms
2024-10-01 23:05:13.138 +07:00 [INF] Received HTTP response headers after 5104.3352ms - 503
2024-10-01 23:05:13.139 +07:00 [INF] End processing HTTP request after 5109.8454ms - 503
2024-10-01 23:05:13.141 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:05:13.142 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:05:13.144 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:05:13.146 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:05:13.148 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:05:13.149 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:05:23.192 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:05:23.193 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:05:23.195 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:05:23.203 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:05:23.203 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:05:28.296 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5090.5176ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:05:28.297 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:05:28.298 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5095.1695ms
2024-10-01 23:05:28.300 +07:00 [INF] Received HTTP response headers after 5102.9429ms - 503
2024-10-01 23:05:28.303 +07:00 [INF] End processing HTTP request after 5108.7591ms - 503
2024-10-01 23:05:28.307 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:05:28.309 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:05:28.311 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:05:28.313 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:05:28.314 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:05:28.316 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:05:38.365 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:05:38.367 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:05:38.368 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:05:38.369 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:05:38.370 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:05:43.465 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5091.541ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:05:43.465 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:05:43.465 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5096.3542ms
2024-10-01 23:05:43.468 +07:00 [INF] Received HTTP response headers after 5097.1852ms - 503
2024-10-01 23:05:43.470 +07:00 [INF] End processing HTTP request after 5103.1549ms - 503
2024-10-01 23:05:43.473 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:05:43.475 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:05:43.478 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:05:43.481 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:05:43.483 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:05:43.485 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:05:53.530 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:05:53.532 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:05:53.533 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:05:53.534 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:05:53.534 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:05:58.630 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5093.4932ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:05:58.630 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:05:58.630 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5096.3664ms
2024-10-01 23:05:58.632 +07:00 [INF] Received HTTP response headers after 5096.8825ms - 503
2024-10-01 23:05:58.634 +07:00 [INF] End processing HTTP request after 5101.6049ms - 503
2024-10-01 23:05:58.636 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:05:58.637 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:05:58.639 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:05:58.642 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:05:58.643 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:05:58.644 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:06:08.691 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:06:08.693 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:06:08.695 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:06:08.696 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:06:08.696 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:06:13.768 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5068.8818ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:06:13.768 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:06:13.768 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5072.7452ms
2024-10-01 23:06:13.770 +07:00 [INF] Received HTTP response headers after 5073.8355ms - 503
2024-10-01 23:06:13.772 +07:00 [INF] End processing HTTP request after 5079.1933ms - 503
2024-10-01 23:06:13.774 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:06:13.776 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:06:13.778 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:06:13.780 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:06:13.782 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:06:13.783 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:06:23.823 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:06:23.825 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:06:23.826 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:06:23.827 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:06:23.827 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:06:28.894 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5064.9577ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:06:28.895 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:06:28.895 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5067.9779ms
2024-10-01 23:06:28.896 +07:00 [INF] Received HTTP response headers after 5068.5662ms - 503
2024-10-01 23:06:28.898 +07:00 [INF] End processing HTTP request after 5073.4989ms - 503
2024-10-01 23:06:28.900 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:06:28.902 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:06:28.904 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:06:28.906 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:06:28.907 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:06:28.908 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:06:38.956 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:06:38.958 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:06:38.959 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:06:38.961 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:06:38.961 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:06:44.046 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5083.1447ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:06:44.046 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:06:44.046 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5086.0327ms
2024-10-01 23:06:44.048 +07:00 [INF] Received HTTP response headers after 5087.3019ms - 503
2024-10-01 23:06:44.052 +07:00 [INF] End processing HTTP request after 5092.9941ms - 503
2024-10-01 23:06:44.055 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:06:44.056 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:06:44.058 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:06:44.060 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:06:44.062 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:06:44.063 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:06:54.111 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:06:54.113 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:06:54.115 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:06:54.116 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:06:54.116 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:06:59.210 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5090.465ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:06:59.210 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:06:59.210 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5094.5515ms
2024-10-01 23:06:59.213 +07:00 [INF] Received HTTP response headers after 5095.664ms - 503
2024-10-01 23:06:59.215 +07:00 [INF] End processing HTTP request after 5101.3032ms - 503
2024-10-01 23:06:59.217 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:06:59.218 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:06:59.220 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:06:59.222 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:06:59.224 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:06:59.226 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:07:09.277 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:07:09.280 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:07:09.283 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:07:09.284 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:07:09.284 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:07:14.376 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5086.4318ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:07:14.376 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:07:14.376 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5092.214ms
2024-10-01 23:07:14.379 +07:00 [INF] Received HTTP response headers after 5093.5218ms - 503
2024-10-01 23:07:14.380 +07:00 [INF] End processing HTTP request after 5100.7583ms - 503
2024-10-01 23:07:14.382 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:07:14.384 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:07:14.387 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:07:14.389 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:07:14.390 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:07:14.392 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:07:24.438 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:07:24.440 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:07:24.441 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:07:24.449 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:07:24.449 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:07:29.535 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5084.2519ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:07:29.536 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:07:29.536 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5087.3065ms
2024-10-01 23:07:29.538 +07:00 [INF] Received HTTP response headers after 5095.099ms - 503
2024-10-01 23:07:29.539 +07:00 [INF] End processing HTTP request after 5099.8349ms - 503
2024-10-01 23:07:29.541 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:07:29.543 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:07:29.545 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:07:29.547 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:07:29.548 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:07:29.550 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:07:39.590 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:07:39.592 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:07:39.594 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:07:39.595 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:07:39.595 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:07:44.683 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5084.6737ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:07:44.683 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:07:44.683 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5088.5396ms
2024-10-01 23:07:44.685 +07:00 [INF] Received HTTP response headers after 5089.2582ms - 503
2024-10-01 23:07:44.689 +07:00 [INF] End processing HTTP request after 5095.8494ms - 503
2024-10-01 23:07:44.693 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:07:44.695 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:07:44.696 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:07:44.699 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:07:44.700 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:07:44.702 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:07:54.760 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:07:54.762 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:07:54.764 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:07:54.764 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:07:54.765 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:07:59.835 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5067.0922ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:07:59.835 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:07:59.835 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5071.2219ms
2024-10-01 23:07:59.838 +07:00 [INF] Received HTTP response headers after 5071.8434ms - 503
2024-10-01 23:07:59.840 +07:00 [INF] End processing HTTP request after 5078.0704ms - 503
2024-10-01 23:07:59.842 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:07:59.843 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:07:59.845 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:07:59.848 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:07:59.849 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:07:59.851 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:08:09.896 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:08:09.900 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:08:09.902 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:08:09.903 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:08:09.904 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:08:14.995 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5088.2851ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:08:14.995 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:08:14.995 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5092.2592ms
2024-10-01 23:08:14.997 +07:00 [INF] Received HTTP response headers after 5093.2685ms - 503
2024-10-01 23:08:14.998 +07:00 [INF] End processing HTTP request after 5100.495ms - 503
2024-10-01 23:08:15.001 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:08:15.002 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:08:15.005 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:08:15.007 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:08:15.009 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:08:15.011 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:08:25.046 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:08:25.048 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:08:25.050 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:08:25.052 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:08:25.052 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:08:30.159 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5103.8033ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:08:30.160 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:08:30.160 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5108.4556ms
2024-10-01 23:08:30.162 +07:00 [INF] Received HTTP response headers after 5110.1833ms - 503
2024-10-01 23:08:30.163 +07:00 [INF] End processing HTTP request after 5115.3751ms - 503
2024-10-01 23:08:30.165 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:08:30.167 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:08:30.168 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:08:30.170 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:08:30.171 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:08:30.173 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:08:40.218 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:08:40.220 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:08:40.221 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:08:40.222 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:08:40.223 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:08:45.322 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5096.4293ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:08:45.322 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:08:45.322 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5100.2129ms
2024-10-01 23:08:45.324 +07:00 [INF] Received HTTP response headers after 5100.9768ms - 503
2024-10-01 23:08:45.326 +07:00 [INF] End processing HTTP request after 5106.3641ms - 503
2024-10-01 23:08:45.328 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:08:45.329 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:08:45.331 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:08:45.333 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:08:45.335 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:08:45.336 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:08:55.385 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:08:55.386 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:08:55.388 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:08:55.388 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:08:55.389 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:09:00.498 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5105.7864ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:09:00.498 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:09:00.499 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5110.4009ms
2024-10-01 23:09:00.500 +07:00 [INF] Received HTTP response headers after 5111.1822ms - 503
2024-10-01 23:09:00.504 +07:00 [INF] End processing HTTP request after 5116.5029ms - 503
2024-10-01 23:09:00.507 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:09:00.508 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:09:00.510 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:09:00.512 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:09:00.514 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:09:00.515 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:09:10.557 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:09:10.560 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:09:10.561 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:09:10.562 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:09:10.562 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:09:15.643 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5078.9399ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:09:15.644 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:09:15.644 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5082.2795ms
2024-10-01 23:09:15.646 +07:00 [INF] Received HTTP response headers after 5082.9775ms - 503
2024-10-01 23:09:15.648 +07:00 [INF] End processing HTTP request after 5088.9252ms - 503
2024-10-01 23:09:15.650 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:09:15.652 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:09:15.653 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:09:15.655 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:09:15.657 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:09:15.658 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:09:25.708 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:09:25.712 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:09:25.713 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:09:25.725 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:09:25.725 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:09:30.826 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5097.2457ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:09:30.826 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:09:30.827 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5101.6993ms
2024-10-01 23:09:30.829 +07:00 [INF] Received HTTP response headers after 5113.7622ms - 503
2024-10-01 23:09:30.831 +07:00 [INF] End processing HTTP request after 5120.5734ms - 503
2024-10-01 23:09:30.833 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:09:30.836 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (Size = 11), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Failures" ("HealthCheckName", "IsUpAndRunning", "LastNotified")
VALUES (@p0, @p1, @p2)
RETURNING "Id";
2024-10-01 23:09:30.872 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:09:30.874 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:09:30.876 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:09:30.877 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:09:40.933 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:09:40.935 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:09:40.937 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:09:40.937 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:09:40.938 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:09:46.025 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5085.2612ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:09:46.026 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:09:46.026 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5088.508ms
2024-10-01 23:09:46.027 +07:00 [INF] Received HTTP response headers after 5089.0001ms - 503
2024-10-01 23:09:46.029 +07:00 [INF] End processing HTTP request after 5094.2839ms - 503
2024-10-01 23:09:46.031 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:09:46.032 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:09:46.034 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:09:46.036 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:09:46.037 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:09:46.039 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:09:56.089 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:09:56.091 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:09:56.092 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:09:56.093 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:09:56.093 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:10:01.165 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5069.6144ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:10:01.165 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:10:01.166 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5072.6684ms
2024-10-01 23:10:01.168 +07:00 [INF] Received HTTP response headers after 5073.2416ms - 503
2024-10-01 23:10:01.169 +07:00 [INF] End processing HTTP request after 5078.5003ms - 503
2024-10-01 23:10:01.171 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:10:01.173 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:10:01.174 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:10:01.177 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:10:01.179 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:10:01.180 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:10:11.220 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:10:11.222 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:10:11.223 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:10:11.224 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:10:11.224 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:10:16.264 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5038.1967ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:10:16.265 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:10:16.265 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5041.219ms
2024-10-01 23:10:16.267 +07:00 [INF] Received HTTP response headers after 5041.8817ms - 503
2024-10-01 23:10:16.271 +07:00 [INF] End processing HTTP request after 5047.1203ms - 503
2024-10-01 23:10:16.274 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:10:16.276 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:10:16.278 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:10:16.279 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:10:16.281 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:10:16.282 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:10:26.327 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:10:26.329 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:10:26.330 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:10:26.331 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:10:26.331 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:10:31.415 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5081.0308ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:10:31.416 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:10:31.416 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5085.0031ms
2024-10-01 23:10:31.418 +07:00 [INF] Received HTTP response headers after 5085.6059ms - 503
2024-10-01 23:10:31.420 +07:00 [INF] End processing HTTP request after 5090.4503ms - 503
2024-10-01 23:10:31.422 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:10:31.423 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:10:31.425 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:10:31.427 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:10:31.429 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:10:31.430 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:10:41.478 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:10:41.480 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:10:41.481 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:10:41.482 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:10:41.482 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:10:46.558 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5073.2177ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:10:46.559 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:10:46.559 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5077.644ms
2024-10-01 23:10:46.562 +07:00 [INF] Received HTTP response headers after 5078.2276ms - 503
2024-10-01 23:10:46.563 +07:00 [INF] End processing HTTP request after 5083.9976ms - 503
2024-10-01 23:10:46.565 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:10:46.567 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:10:46.568 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:10:46.571 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:10:46.572 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:10:46.574 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:10:56.622 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:10:56.624 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:10:56.625 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:10:56.626 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:10:56.627 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:11:01.709 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5080.4938ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:11:01.709 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:11:01.710 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5083.2594ms
2024-10-01 23:11:01.711 +07:00 [INF] Received HTTP response headers after 5084.4092ms - 503
2024-10-01 23:11:01.713 +07:00 [INF] End processing HTTP request after 5089.8793ms - 503
2024-10-01 23:11:01.715 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:11:01.717 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:11:01.718 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:11:01.725 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:11:01.727 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:11:01.729 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:11:11.774 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:11:11.776 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:11:11.777 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:11:11.778 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:11:11.778 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:11:16.848 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5067.786ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:11:16.849 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:11:16.850 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5071.4906ms
2024-10-01 23:11:16.851 +07:00 [INF] Received HTTP response headers after 5071.6682ms - 503
2024-10-01 23:11:16.853 +07:00 [INF] End processing HTTP request after 5077.4968ms - 503
2024-10-01 23:11:16.855 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:11:16.856 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:11:16.858 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:11:16.860 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:11:16.861 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:11:16.863 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:11:26.913 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:11:26.915 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:11:26.916 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:11:26.924 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:11:26.924 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:11:32.004 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5076.5252ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:11:32.005 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:11:32.006 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5081.4014ms
2024-10-01 23:11:32.007 +07:00 [INF] Received HTTP response headers after 5089.6175ms - 503
2024-10-01 23:11:32.009 +07:00 [INF] End processing HTTP request after 5093.9926ms - 503
2024-10-01 23:11:32.011 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:11:32.013 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:11:32.014 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:11:32.016 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:11:32.018 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:11:32.019 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:11:42.065 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:11:42.066 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:11:42.068 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:11:42.069 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:11:42.069 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:11:47.143 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5071.0513ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:11:47.143 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:11:47.144 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5075.2573ms
2024-10-01 23:11:47.145 +07:00 [INF] Received HTTP response headers after 5075.5544ms - 503
2024-10-01 23:11:47.150 +07:00 [INF] End processing HTTP request after 5080.2353ms - 503
2024-10-01 23:11:47.154 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:11:47.156 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:11:47.158 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:11:47.160 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:11:47.161 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:11:47.163 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:11:57.203 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:11:57.206 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:11:57.208 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:11:57.210 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:11:57.210 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:12:02.273 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5059.5243ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:12:02.274 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:12:02.274 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5064.8084ms
2024-10-01 23:12:02.276 +07:00 [INF] Received HTTP response headers after 5065.6757ms - 503
2024-10-01 23:12:02.277 +07:00 [INF] End processing HTTP request after 5072.3468ms - 503
2024-10-01 23:12:02.279 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:12:02.281 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:12:02.283 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:12:02.285 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:12:02.286 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:12:02.288 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:12:12.337 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:12:12.339 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:12:12.340 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:12:12.341 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:12:12.341 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:12:17.456 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5111.8763ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:12:17.457 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:12:17.457 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5116.7118ms
2024-10-01 23:12:17.459 +07:00 [INF] Received HTTP response headers after 5117.3284ms - 503
2024-10-01 23:12:17.461 +07:00 [INF] End processing HTTP request after 5121.9756ms - 503
2024-10-01 23:12:17.463 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:12:17.464 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:12:17.466 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:12:17.469 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:12:17.471 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:12:17.473 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:12:27.522 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:12:27.524 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:12:27.526 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:12:27.527 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:12:27.527 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:12:32.623 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5091.4696ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:12:32.623 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:12:32.623 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5096.8433ms
2024-10-01 23:12:32.627 +07:00 [INF] Received HTTP response headers after 5097.4203ms - 503
2024-10-01 23:12:32.629 +07:00 [INF] End processing HTTP request after 5104.5554ms - 503
2024-10-01 23:12:32.633 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:12:32.636 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:12:32.645 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:12:32.669 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:12:32.673 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:12:32.679 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:12:42.746 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:12:42.747 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:12:42.749 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:12:42.750 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:12:42.750 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:12:47.836 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5083.0339ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:12:47.837 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:12:47.837 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5087.7075ms
2024-10-01 23:12:47.840 +07:00 [INF] Received HTTP response headers after 5088.3961ms - 503
2024-10-01 23:12:47.842 +07:00 [INF] End processing HTTP request after 5094.2474ms - 503
2024-10-01 23:12:47.844 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:12:47.845 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:12:47.848 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:12:47.850 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:12:47.852 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:12:47.853 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:12:57.905 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:12:57.907 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:12:57.909 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:12:57.909 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:12:57.910 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:13:02.989 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5076.7467ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:13:02.989 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:13:02.989 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5079.8735ms
2024-10-01 23:13:02.992 +07:00 [INF] Received HTTP response headers after 5080.3152ms - 503
2024-10-01 23:13:02.993 +07:00 [INF] End processing HTTP request after 5086.6413ms - 503
2024-10-01 23:13:02.995 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:13:02.997 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:13:02.998 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:13:03.000 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:13:03.002 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:13:03.003 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:13:13.046 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:13:13.048 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:13:13.049 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:13:13.050 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:13:13.050 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:13:18.145 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5092.4219ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:13:18.146 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:13:18.146 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5095.9869ms
2024-10-01 23:13:18.148 +07:00 [INF] Received HTTP response headers after 5096.5351ms - 503
2024-10-01 23:13:18.149 +07:00 [INF] End processing HTTP request after 5101.672ms - 503
2024-10-01 23:13:18.151 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:13:18.153 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:13:18.154 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:13:18.156 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:13:18.158 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:13:18.159 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:13:28.206 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:13:28.208 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:13:28.210 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:13:28.220 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:13:28.220 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:13:33.310 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5087.6556ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:13:33.311 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:13:33.311 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5090.797ms
2024-10-01 23:13:33.313 +07:00 [INF] Received HTTP response headers after 5101.1581ms - 503
2024-10-01 23:13:33.316 +07:00 [INF] End processing HTTP request after 5107.0287ms - 503
2024-10-01 23:13:33.318 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:13:33.320 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:13:33.322 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:13:33.324 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:13:33.325 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:13:33.327 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:13:43.373 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:13:43.375 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:13:43.376 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:13:43.377 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:13:43.377 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:13:48.458 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5077.6976ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:13:48.459 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:13:48.459 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5082.3202ms
2024-10-01 23:13:48.461 +07:00 [INF] Received HTTP response headers after 5082.9407ms - 503
2024-10-01 23:13:48.463 +07:00 [INF] End processing HTTP request after 5088.4449ms - 503
2024-10-01 23:13:48.465 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:13:48.467 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:13:48.468 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:13:48.471 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:13:48.473 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:13:48.474 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:13:58.520 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:13:58.522 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:13:58.523 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:13:58.524 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:13:58.524 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:14:03.595 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5068.0204ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:14:03.596 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:14:03.596 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5072.0084ms
2024-10-01 23:14:03.598 +07:00 [INF] Received HTTP response headers after 5072.4397ms - 503
2024-10-01 23:14:03.599 +07:00 [INF] End processing HTTP request after 5077.9353ms - 503
2024-10-01 23:14:03.601 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:14:03.603 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:14:03.605 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:14:03.607 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:14:03.609 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:14:03.611 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:14:13.660 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:14:13.661 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:14:13.662 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:14:13.663 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:14:13.663 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:14:18.743 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5077.7591ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:14:18.743 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:14:18.744 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5080.7545ms
2024-10-01 23:14:18.745 +07:00 [INF] Received HTTP response headers after 5081.1348ms - 503
2024-10-01 23:14:18.747 +07:00 [INF] End processing HTTP request after 5085.9772ms - 503
2024-10-01 23:14:18.749 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:14:18.750 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:14:18.752 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:14:18.754 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:14:18.756 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:14:18.757 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:14:28.809 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:14:28.811 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:14:28.812 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:14:28.813 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:14:28.813 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:14:33.895 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5080.3084ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:14:33.896 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:14:33.896 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5083.2601ms
2024-10-01 23:14:33.898 +07:00 [INF] Received HTTP response headers after 5083.6746ms - 503
2024-10-01 23:14:33.899 +07:00 [INF] End processing HTTP request after 5088.6972ms - 503
2024-10-01 23:14:33.901 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:14:33.903 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:14:33.904 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:14:33.906 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:14:33.908 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:14:33.909 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:14:43.955 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:14:43.956 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:14:43.958 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:14:43.959 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:14:43.959 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:14:49.049 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5088.242ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:14:49.050 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:14:49.050 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5091.4329ms
2024-10-01 23:14:49.052 +07:00 [INF] Received HTTP response headers after 5092.2716ms - 503
2024-10-01 23:14:49.053 +07:00 [INF] End processing HTTP request after 5097.3424ms - 503
2024-10-01 23:14:49.055 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:14:49.057 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:14:49.059 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:14:49.061 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:14:49.062 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:14:49.064 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:14:59.115 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:14:59.116 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:14:59.117 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:14:59.118 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:14:59.119 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:15:04.199 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5078.7075ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:15:04.200 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:15:04.200 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5081.9193ms
2024-10-01 23:15:04.202 +07:00 [INF] Received HTTP response headers after 5082.3463ms - 503
2024-10-01 23:15:04.204 +07:00 [INF] End processing HTTP request after 5087.471ms - 503
2024-10-01 23:15:04.205 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:15:04.207 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:15:04.209 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:15:04.210 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:15:04.212 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:15:04.213 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:15:14.261 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:15:14.263 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:15:14.264 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:15:14.264 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:15:14.265 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:15:19.356 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5088.8186ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:15:19.356 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:15:19.356 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5091.7835ms
2024-10-01 23:15:19.358 +07:00 [INF] Received HTTP response headers after 5092.2088ms - 503
2024-10-01 23:15:19.360 +07:00 [INF] End processing HTTP request after 5097.6236ms - 503
2024-10-01 23:15:19.362 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:15:19.363 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:15:19.365 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:15:19.367 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:15:19.368 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:15:19.370 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:15:29.409 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:15:29.411 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:15:29.413 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:15:29.421 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:15:29.421 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:15:34.513 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5090.2513ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:15:34.514 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:15:34.514 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5093.079ms
2024-10-01 23:15:34.516 +07:00 [INF] Received HTTP response headers after 5101.2402ms - 503
2024-10-01 23:15:34.517 +07:00 [INF] End processing HTTP request after 5106.2409ms - 503
2024-10-01 23:15:34.519 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:15:34.521 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:15:34.522 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:15:34.524 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:15:34.525 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:15:34.527 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:15:44.572 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:15:44.573 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:15:44.575 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:15:44.576 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:15:44.576 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:15:49.658 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5079.4889ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:15:49.658 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:15:49.658 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5082.6226ms
2024-10-01 23:15:49.660 +07:00 [INF] Received HTTP response headers after 5083.2764ms - 503
2024-10-01 23:15:49.661 +07:00 [INF] End processing HTTP request after 5087.801ms - 503
2024-10-01 23:15:49.663 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:15:49.664 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:15:49.666 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:15:49.668 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:15:49.669 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:15:49.671 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:15:59.725 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:15:59.727 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:15:59.728 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:15:59.729 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:15:59.729 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:16:04.897 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5165.941ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:16:04.898 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:16:04.898 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5169.3929ms
2024-10-01 23:16:04.900 +07:00 [INF] Received HTTP response headers after 5169.7985ms - 503
2024-10-01 23:16:04.902 +07:00 [INF] End processing HTTP request after 5175.3579ms - 503
2024-10-01 23:16:04.904 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:16:04.906 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:16:04.907 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:16:04.910 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:16:04.911 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:16:04.913 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:16:14.958 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:16:14.961 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:16:14.963 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:16:14.964 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:16:14.964 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:16:20.132 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5164.7898ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:16:20.132 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:16:20.132 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5168.5863ms
2024-10-01 23:16:20.134 +07:00 [INF] Received HTTP response headers after 5169.1024ms - 503
2024-10-01 23:16:20.139 +07:00 [INF] End processing HTTP request after 5177.3003ms - 503
2024-10-01 23:16:20.146 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:16:20.148 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:16:20.150 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:16:20.152 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:16:20.154 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:16:20.155 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:16:30.207 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:16:30.209 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:16:30.211 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:16:30.211 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:16:30.212 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:16:35.304 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5089.588ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:16:35.304 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:16:35.304 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5093.0661ms
2024-10-01 23:16:35.306 +07:00 [INF] Received HTTP response headers after 5093.5778ms - 503
2024-10-01 23:16:35.308 +07:00 [INF] End processing HTTP request after 5099.2614ms - 503
2024-10-01 23:16:35.310 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:16:35.312 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:16:35.313 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:16:35.316 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:16:35.317 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:16:35.319 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:16:45.364 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:16:45.366 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:16:45.368 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:16:45.368 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:16:45.368 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:16:50.486 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5083.7634ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:16:50.486 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:16:50.487 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5118.5834ms
2024-10-01 23:16:50.489 +07:00 [INF] Received HTTP response headers after 5119.0737ms - 503
2024-10-01 23:16:50.493 +07:00 [INF] End processing HTTP request after 5125.2809ms - 503
2024-10-01 23:16:50.496 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:16:50.499 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:16:50.501 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:16:50.503 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:16:50.505 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:16:50.506 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:17:00.554 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:17:00.556 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:17:00.557 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:17:00.558 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:17:00.559 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:17:05.654 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5093.9365ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:17:05.655 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:17:05.655 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5096.9695ms
2024-10-01 23:17:05.657 +07:00 [INF] Received HTTP response headers after 5097.4591ms - 503
2024-10-01 23:17:05.658 +07:00 [INF] End processing HTTP request after 5102.4085ms - 503
2024-10-01 23:17:05.660 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:17:05.662 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:17:05.663 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:17:05.665 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:17:05.667 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:17:05.668 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:17:15.719 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:17:15.721 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:17:15.722 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:17:15.723 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:17:15.723 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:17:20.816 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5091.2012ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:17:20.817 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:17:20.817 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5094.1321ms
2024-10-01 23:17:20.819 +07:00 [INF] Received HTTP response headers after 5094.6981ms - 503
2024-10-01 23:17:20.821 +07:00 [INF] End processing HTTP request after 5100.1159ms - 503
2024-10-01 23:17:20.823 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:17:20.825 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:17:20.827 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:17:20.829 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:17:20.830 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:17:20.832 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:17:30.869 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:17:30.870 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:17:30.872 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:17:30.880 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:17:30.880 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:17:35.976 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5093.2425ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:17:35.976 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:17:35.977 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5096.4114ms
2024-10-01 23:17:35.979 +07:00 [INF] Received HTTP response headers after 5104.8425ms - 503
2024-10-01 23:17:35.980 +07:00 [INF] End processing HTTP request after 5109.6227ms - 503
2024-10-01 23:17:35.982 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:17:35.984 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:17:35.985 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:17:35.987 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:17:35.988 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:17:35.990 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:17:46.033 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:17:46.036 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:17:46.037 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:17:46.038 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:17:46.038 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:17:51.129 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5088.0497ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:17:51.130 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:17:51.130 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5092.0936ms
2024-10-01 23:17:51.131 +07:00 [INF] Received HTTP response headers after 5092.7047ms - 503
2024-10-01 23:17:51.133 +07:00 [INF] End processing HTTP request after 5098.1135ms - 503
2024-10-01 23:17:51.135 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:17:51.136 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:17:51.138 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:17:51.140 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:17:51.141 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:17:51.143 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:18:01.196 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:18:01.198 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:18:01.199 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:18:01.200 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:18:01.200 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:18:06.286 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5084.0508ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:18:06.287 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:18:06.287 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5086.929ms
2024-10-01 23:18:06.289 +07:00 [INF] Received HTTP response headers after 5087.4301ms - 503
2024-10-01 23:18:06.290 +07:00 [INF] End processing HTTP request after 5092.496ms - 503
2024-10-01 23:18:06.292 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:18:06.294 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:18:06.295 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:18:06.297 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:18:06.299 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:18:06.300 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:18:16.343 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:18:16.344 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:18:16.346 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:18:16.347 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:18:16.347 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:18:21.436 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5085.1388ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:18:21.437 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:18:21.437 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5090.2051ms
2024-10-01 23:18:21.439 +07:00 [INF] Received HTTP response headers after 5090.8423ms - 503
2024-10-01 23:18:21.442 +07:00 [INF] End processing HTTP request after 5096.1075ms - 503
2024-10-01 23:18:21.444 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:18:21.446 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:18:21.448 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:18:21.451 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:18:21.453 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:18:21.455 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:18:31.498 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:18:31.499 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:18:31.501 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:18:31.502 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:18:31.502 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:18:36.581 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5074.6567ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:18:36.581 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:18:36.581 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5079.6809ms
2024-10-01 23:18:36.583 +07:00 [INF] Received HTTP response headers after 5080.2348ms - 503
2024-10-01 23:18:36.585 +07:00 [INF] End processing HTTP request after 5085.2883ms - 503
2024-10-01 23:18:36.588 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:18:36.591 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:18:36.593 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:18:36.595 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:18:36.597 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:18:36.599 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:18:46.639 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:18:46.641 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:18:46.642 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:18:46.643 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:18:46.643 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:18:51.711 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5065.6285ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:18:51.711 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:18:51.711 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5068.6156ms
2024-10-01 23:18:51.713 +07:00 [INF] Received HTTP response headers after 5069.0353ms - 503
2024-10-01 23:18:51.715 +07:00 [INF] End processing HTTP request after 5074.5241ms - 503
2024-10-01 23:18:51.717 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:18:51.718 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:18:51.720 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:18:51.722 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:18:51.724 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:18:51.725 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:19:01.774 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:19:01.775 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:19:01.777 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:19:01.777 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:19:01.778 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:19:06.870 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5090.1489ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:19:06.871 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:19:06.871 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5093.3347ms
2024-10-01 23:19:06.873 +07:00 [INF] Received HTTP response headers after 5093.7515ms - 503
2024-10-01 23:19:06.874 +07:00 [INF] End processing HTTP request after 5099.1045ms - 503
2024-10-01 23:19:06.876 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:19:06.877 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:19:06.879 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:19:06.881 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:19:06.883 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:19:06.884 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:19:16.929 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:19:16.931 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:19:16.933 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:19:16.934 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:19:16.934 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:19:21.992 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5056.151ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:19:21.992 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:19:21.993 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5059.2098ms
2024-10-01 23:19:21.995 +07:00 [INF] Received HTTP response headers after 5059.8191ms - 503
2024-10-01 23:19:21.998 +07:00 [INF] End processing HTTP request after 5066.7528ms - 503
2024-10-01 23:19:22.000 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:19:22.002 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:19:22.004 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:19:22.007 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:19:22.008 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:19:22.012 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:19:32.049 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:19:32.050 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:19:32.051 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:19:32.061 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:19:32.061 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:19:37.147 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5083.3907ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:19:37.147 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:19:37.147 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5086.0468ms
2024-10-01 23:19:37.148 +07:00 [INF] Received HTTP response headers after 5095.6447ms - 503
2024-10-01 23:19:37.150 +07:00 [INF] End processing HTTP request after 5099.8751ms - 503
2024-10-01 23:19:37.154 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:19:37.158 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (Size = 11), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Failures" ("HealthCheckName", "IsUpAndRunning", "LastNotified")
VALUES (@p0, @p1, @p2)
RETURNING "Id";
2024-10-01 23:19:37.196 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:19:37.198 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:19:37.200 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:19:37.202 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:19:47.243 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:19:47.245 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:19:47.247 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:19:47.248 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:19:47.248 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:19:52.315 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5065.0448ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:19:52.316 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:19:52.316 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5068.4387ms
2024-10-01 23:19:52.317 +07:00 [INF] Received HTTP response headers after 5068.9897ms - 503
2024-10-01 23:19:52.319 +07:00 [INF] End processing HTTP request after 5074.3137ms - 503
2024-10-01 23:19:52.321 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:19:52.323 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:19:52.325 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:19:52.328 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:19:52.329 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:19:52.331 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:20:02.374 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:20:02.376 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:20:02.379 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:20:02.379 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:20:02.380 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:20:07.462 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5079.0408ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:20:07.462 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:20:07.462 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5083.0206ms
2024-10-01 23:20:07.465 +07:00 [INF] Received HTTP response headers after 5083.6151ms - 503
2024-10-01 23:20:07.467 +07:00 [INF] End processing HTTP request after 5091.6029ms - 503
2024-10-01 23:20:07.469 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:20:07.472 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:20:07.476 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:20:07.478 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:20:07.480 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:20:07.482 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:20:17.525 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:20:17.527 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:20:17.529 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:20:17.530 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:20:17.530 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:20:22.586 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5052.9028ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:20:22.586 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:20:22.586 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5056.6022ms
2024-10-01 23:20:22.588 +07:00 [INF] Received HTTP response headers after 5057.2575ms - 503
2024-10-01 23:20:22.592 +07:00 [INF] End processing HTTP request after 5063.5627ms - 503
2024-10-01 23:20:22.594 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:20:22.597 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:20:22.603 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:20:22.605 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:20:22.607 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:20:22.608 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:20:32.662 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:20:32.663 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:20:32.664 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:20:32.665 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:20:32.665 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:20:37.724 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5056.2298ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:20:37.724 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:20:37.724 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5059.1018ms
2024-10-01 23:20:37.725 +07:00 [INF] Received HTTP response headers after 5059.5716ms - 503
2024-10-01 23:20:37.727 +07:00 [INF] End processing HTTP request after 5063.7755ms - 503
2024-10-01 23:20:37.729 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:20:37.731 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:20:37.734 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:20:37.736 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:20:37.737 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:20:37.739 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:20:47.782 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:20:47.784 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:20:47.785 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:20:47.786 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:20:47.786 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:20:52.850 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5061.8342ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:20:52.851 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:20:52.851 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5064.9446ms
2024-10-01 23:20:52.853 +07:00 [INF] Received HTTP response headers after 5065.3616ms - 503
2024-10-01 23:20:52.854 +07:00 [INF] End processing HTTP request after 5070.1077ms - 503
2024-10-01 23:20:52.856 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:20:52.857 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:20:52.859 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:20:52.861 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:20:52.862 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:20:52.864 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:21:02.900 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:21:02.902 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:21:02.903 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:21:02.904 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:21:02.904 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:21:07.960 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5053.1904ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:21:07.960 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:21:07.960 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5056.1412ms
2024-10-01 23:21:07.962 +07:00 [INF] Received HTTP response headers after 5056.6522ms - 503
2024-10-01 23:21:07.965 +07:00 [INF] End processing HTTP request after 5062.1277ms - 503
2024-10-01 23:21:07.968 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:21:07.970 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:21:07.972 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:21:07.973 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:21:07.975 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:21:07.976 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:21:18.018 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:21:18.019 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:21:18.021 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:21:18.022 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:21:18.022 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:21:23.121 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5095.7849ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:21:23.122 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:21:23.122 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5100.3423ms
2024-10-01 23:21:23.124 +07:00 [INF] Received HTTP response headers after 5101.033ms - 503
2024-10-01 23:21:23.126 +07:00 [INF] End processing HTTP request after 5106.7575ms - 503
2024-10-01 23:21:23.129 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:21:23.132 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:21:23.135 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:21:23.138 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:21:23.140 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:21:23.142 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:21:33.191 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:21:33.192 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:21:33.193 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:21:33.199 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:21:33.199 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:21:38.373 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5171.5711ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:21:38.373 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:21:38.373 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5174.5825ms
2024-10-01 23:21:38.375 +07:00 [INF] Received HTTP response headers after 5179.7355ms - 503
2024-10-01 23:21:38.377 +07:00 [INF] End processing HTTP request after 5184.117ms - 503
2024-10-01 23:21:38.379 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:21:38.381 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:21:38.382 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:21:38.389 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:21:38.392 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:21:38.393 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:21:48.437 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:21:48.439 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:21:48.440 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:21:48.441 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:21:48.441 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:21:53.527 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5083.7755ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:21:53.528 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:21:53.528 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5086.7812ms
2024-10-01 23:21:53.529 +07:00 [INF] Received HTTP response headers after 5087.2084ms - 503
2024-10-01 23:21:53.531 +07:00 [INF] End processing HTTP request after 5091.8939ms - 503
2024-10-01 23:21:53.533 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:21:53.534 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:21:53.536 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:21:53.538 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:21:53.539 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:21:53.540 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:22:03.577 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:22:03.579 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:22:03.580 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:22:03.581 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:22:03.581 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:22:08.666 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5082.3656ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:22:08.666 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:22:08.666 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5085.2817ms
2024-10-01 23:22:08.668 +07:00 [INF] Received HTTP response headers after 5085.6912ms - 503
2024-10-01 23:22:08.671 +07:00 [INF] End processing HTTP request after 5091.7637ms - 503
2024-10-01 23:22:08.674 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:22:08.676 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:22:08.677 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:22:08.679 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:22:08.681 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:22:08.682 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:22:18.730 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:22:18.732 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:22:18.733 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:22:18.734 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:22:18.734 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:22:23.803 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5065.7019ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:22:23.804 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:22:23.804 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5070.4769ms
2024-10-01 23:22:23.807 +07:00 [INF] Received HTTP response headers after 5070.9375ms - 503
2024-10-01 23:22:23.810 +07:00 [INF] End processing HTTP request after 5077.1559ms - 503
2024-10-01 23:22:23.814 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:22:23.817 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:22:23.822 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:22:23.825 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:22:23.828 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:22:23.831 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:22:33.874 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:22:33.877 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:22:33.878 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:22:33.879 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:22:33.880 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:22:38.977 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5095.2324ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:22:38.978 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:22:38.978 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5098.5525ms
2024-10-01 23:22:38.979 +07:00 [INF] Received HTTP response headers after 5099.3895ms - 503
2024-10-01 23:22:38.981 +07:00 [INF] End processing HTTP request after 5104.8366ms - 503
2024-10-01 23:22:38.983 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:22:38.984 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:22:38.986 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:22:38.988 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:22:38.990 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:22:38.991 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:22:49.032 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:22:49.033 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:22:49.035 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:22:49.036 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:22:49.036 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:22:54.122 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5084.343ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:22:54.123 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:22:54.123 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5087.4097ms
2024-10-01 23:22:54.125 +07:00 [INF] Received HTTP response headers after 5088.0124ms - 503
2024-10-01 23:22:54.127 +07:00 [INF] End processing HTTP request after 5092.7873ms - 503
2024-10-01 23:22:54.129 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:22:54.131 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:22:54.133 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:22:54.135 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:22:54.136 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:22:54.138 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:23:04.170 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:23:04.172 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:23:04.173 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:23:04.173 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:23:04.174 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:23:09.278 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5101.8864ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:23:09.278 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:23:09.278 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5104.687ms
2024-10-01 23:23:09.280 +07:00 [INF] Received HTTP response headers after 5105.2643ms - 503
2024-10-01 23:23:09.283 +07:00 [INF] End processing HTTP request after 5109.7178ms - 503
2024-10-01 23:23:09.286 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:23:09.287 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:23:09.289 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:23:09.291 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:23:09.293 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:23:09.294 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:23:19.339 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:23:19.340 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:23:19.341 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:23:19.342 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:23:19.342 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:23:24.427 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5082.5524ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:23:24.427 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:23:24.428 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5085.7255ms
2024-10-01 23:23:24.430 +07:00 [INF] Received HTTP response headers after 5086.1051ms - 503
2024-10-01 23:23:24.431 +07:00 [INF] End processing HTTP request after 5090.8585ms - 503
2024-10-01 23:23:24.433 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:23:24.435 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:23:24.437 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:23:24.439 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:23:24.440 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:23:24.442 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:23:34.483 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:23:34.485 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:23:34.486 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:23:34.491 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:23:34.492 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:23:39.614 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5120.1135ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:23:39.614 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:23:39.615 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5123.078ms
2024-10-01 23:23:39.617 +07:00 [INF] Received HTTP response headers after 5128.2087ms - 503
2024-10-01 23:23:39.618 +07:00 [INF] End processing HTTP request after 5133.6986ms - 503
2024-10-01 23:23:39.620 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:23:39.622 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:23:39.624 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:23:39.626 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:23:39.628 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:23:39.629 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:23:49.671 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:23:49.673 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:23:49.675 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:23:49.675 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:23:49.676 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:23:54.766 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5088.3007ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:23:54.767 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:23:54.767 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5091.485ms
2024-10-01 23:23:54.768 +07:00 [INF] Received HTTP response headers after 5091.9006ms - 503
2024-10-01 23:23:54.770 +07:00 [INF] End processing HTTP request after 5096.8528ms - 503
2024-10-01 23:23:54.772 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:23:54.773 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:23:54.775 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:23:54.782 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:23:54.785 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:23:54.787 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:24:04.831 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:24:04.833 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:24:04.834 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:24:04.835 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:24:04.835 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:24:09.919 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5081.1035ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:24:09.919 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:24:09.919 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5084.2914ms
2024-10-01 23:24:09.921 +07:00 [INF] Received HTTP response headers after 5084.8181ms - 503
2024-10-01 23:24:09.922 +07:00 [INF] End processing HTTP request after 5089.4166ms - 503
2024-10-01 23:24:09.927 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:24:09.928 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:24:09.930 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:24:09.932 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:24:09.933 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:24:09.935 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:24:19.977 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:24:19.979 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:24:19.982 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:24:19.983 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:24:19.983 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:24:25.073 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5087.2908ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:24:25.074 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:24:25.074 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5091.2321ms
2024-10-01 23:24:25.076 +07:00 [INF] Received HTTP response headers after 5091.9939ms - 503
2024-10-01 23:24:25.078 +07:00 [INF] End processing HTTP request after 5098.7908ms - 503
2024-10-01 23:24:25.080 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:24:25.081 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:24:25.083 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:24:25.085 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:24:25.087 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:24:25.088 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:24:35.138 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:24:35.140 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:24:35.142 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:24:35.142 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:24:35.143 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:24:40.206 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5061.3674ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:24:40.206 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:24:40.206 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5064.2976ms
2024-10-01 23:24:40.208 +07:00 [INF] Received HTTP response headers after 5064.6779ms - 503
2024-10-01 23:24:40.209 +07:00 [INF] End processing HTTP request after 5069.3854ms - 503
2024-10-01 23:24:40.211 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:24:40.212 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:24:40.214 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:24:40.220 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:24:40.225 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:24:40.228 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:24:50.304 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:24:50.306 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:24:50.307 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:24:50.308 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:24:50.308 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:24:55.387 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5076.4134ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:24:55.387 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:24:55.387 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5079.5485ms
2024-10-01 23:24:55.389 +07:00 [INF] Received HTTP response headers after 5079.972ms - 503
2024-10-01 23:24:55.390 +07:00 [INF] End processing HTTP request after 5084.3659ms - 503
2024-10-01 23:24:55.392 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:24:55.394 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:24:55.395 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:24:55.397 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:24:55.399 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:24:55.400 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:25:05.438 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:25:05.441 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:25:05.443 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:25:05.444 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:25:05.444 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:25:10.520 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5071.6795ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:25:10.520 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:25:10.520 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5076.6444ms
2024-10-01 23:25:10.523 +07:00 [INF] Received HTTP response headers after 5077.4582ms - 503
2024-10-01 23:25:10.528 +07:00 [INF] End processing HTTP request after 5084.4434ms - 503
2024-10-01 23:25:10.534 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:25:10.536 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:25:10.538 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:25:10.541 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:25:10.544 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:25:10.548 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:25:20.586 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:25:20.588 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:25:20.591 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:25:20.592 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:25:20.592 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:25:25.649 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5054.7675ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:25:25.649 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:25:25.650 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5058.0426ms
2024-10-01 23:25:25.656 +07:00 [INF] Received HTTP response headers after 5058.8621ms - 503
2024-10-01 23:25:25.659 +07:00 [INF] End processing HTTP request after 5070.4741ms - 503
2024-10-01 23:25:25.662 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:25:25.664 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:25:25.668 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:25:25.671 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:25:25.674 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:25:25.677 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:25:50.026 +07:00 [INF] User profile is available. Using 'C:\Users\User\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-10-01 23:25:50.378 +07:00 [INF] Initializing UI Database
2024-10-01 23:25:51.034 +07:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2024-10-01 23:25:51.051 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-10-01 23:25:51.197 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Configurations" AS "c")
2024-10-01 23:25:51.230 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:25:51.511 +07:00 [INF] Now listening on: https://localhost:7042
2024-10-01 23:25:51.513 +07:00 [INF] Now listening on: http://localhost:5216
2024-10-01 23:25:51.550 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:25:51.594 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:25:51.597 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:25:51.640 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-10-01 23:25:51.644 +07:00 [INF] Hosting environment: Development
2024-10-01 23:25:51.647 +07:00 [INF] Content root path: D:\Projects\TechShopSolution\TechShopSolution.API
2024-10-01 23:25:51.779 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:25:51.946 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7042/ - null null
2024-10-01 23:25:51.991 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:25:51.993 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7042/ - 404 0 null 46.4924ms
2024-10-01 23:25:52.050 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7042/, Response status code: 404
2024-10-01 23:25:57.256 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7042/swagger/index.html - null null
2024-10-01 23:25:57.258 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5213.9237ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:25:57.310 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:25:57.316 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5566.3758ms
2024-10-01 23:25:57.328 +07:00 [INF] Received HTTP response headers after 5721.9284ms - 503
2024-10-01 23:25:57.331 +07:00 [INF] End processing HTTP request after 5744.5563ms - 503
2024-10-01 23:25:57.337 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7042/swagger/index.html - 200 null text/html;charset=utf-8 80.9504ms
2024-10-01 23:25:57.431 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7042/swagger/v1/swagger.json - null null
2024-10-01 23:25:57.444 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:25:57.458 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:25:57.521 +07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2024-10-01 23:25:57.529 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:25:57.548 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7042/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 117.0773ms
2024-10-01 23:25:57.675 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:25:57.682 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:25:57.684 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:26:07.840 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:26:07.842 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:26:07.845 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:26:07.846 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:26:07.847 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:26:12.933 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5083.12ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:26:12.934 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:26:12.935 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5088.5803ms
2024-10-01 23:26:12.938 +07:00 [INF] Received HTTP response headers after 5090.5658ms - 503
2024-10-01 23:26:12.940 +07:00 [INF] End processing HTTP request after 5097.3295ms - 503
2024-10-01 23:26:12.945 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:26:12.946 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:26:12.949 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:26:12.953 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:26:12.954 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:26:12.956 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:26:19.162 +07:00 [INF] Request starting HTTP/2 POST https://localhost:7042/api/User/login - application/json 125
2024-10-01 23:26:19.172 +07:00 [INF] Executing endpoint 'TechShopSolution.API.Controllers.UserController.Login (TechShopSolution.API)'
2024-10-01 23:26:19.190 +07:00 [INF] Route matched with {action = "Login", controller = "User"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(Microsoft.AspNetCore.Identity.Data.LoginRequest) on controller TechShopSolution.API.Controllers.UserController (TechShopSolution.API).
2024-10-01 23:26:19.284 +07:00 [INF] Executing action method TechShopSolution.API.Controllers.UserController.Login (TechShopSolution.API) - Validation state: "Valid"
2024-10-01 23:26:19.732 +07:00 [INF] Executed DbCommand (71ms) [Parameters=[@__email_0='?' (Size = 256)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [a].[Id], [a].[AccessFailedCount], [a].[ConcurrencyStamp], [a].[Email], [a].[EmailConfirmed], [a].[LockoutEnabled], [a].[LockoutEnd], [a].[NormalizedEmail], [a].[NormalizedUserName], [a].[PasswordHash], [a].[PhoneNumber], [a].[PhoneNumberConfirmed], [a].[SecurityStamp], [a].[TwoFactorEnabled], [a].[UserName]
FROM [AspNetUsers] AS [a]
WHERE [a].[UserName] = @__email_0
2024-10-01 23:26:19.910 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__userId_0='?' (Size = 450)], CommandType='"Text"', CommandTimeout='30']
SELECT [a0].[Name]
FROM [AspNetUserRoles] AS [a]
INNER JOIN [AspNetRoles] AS [a0] ON [a].[RoleId] = [a0].[Id]
WHERE [a].[UserId] = @__userId_0
2024-10-01 23:26:19.995 +07:00 [INF] Executed action method TechShopSolution.API.Controllers.UserController.Login (TechShopSolution.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 707.525ms.
2024-10-01 23:26:20.002 +07:00 [INF] Executing OkObjectResult, writing value of type 'TechShopSolution.Application.Models.Common.StandardResponse`1[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-10-01 23:26:20.011 +07:00 [INF] Executed action TechShopSolution.API.Controllers.UserController.Login (TechShopSolution.API) in 815.9786ms
2024-10-01 23:26:20.011 +07:00 [INF] Executed endpoint 'TechShopSolution.API.Controllers.UserController.Login (TechShopSolution.API)'
2024-10-01 23:26:20.014 +07:00 [INF] Request finished HTTP/2 POST https://localhost:7042/api/User/login - 200 null application/json; charset=utf-8 851.8577ms
2024-10-01 23:26:23.035 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:26:23.037 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:26:23.038 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:26:23.040 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:26:23.040 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:26:28.134 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5091.836ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:26:28.134 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:26:28.135 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5095.0539ms
2024-10-01 23:26:28.136 +07:00 [INF] Received HTTP response headers after 5096.2192ms - 503
2024-10-01 23:26:28.138 +07:00 [INF] End processing HTTP request after 5100.9384ms - 503
2024-10-01 23:26:28.140 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:26:28.142 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:26:28.144 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:26:28.148 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:26:28.151 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:26:28.155 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:26:38.207 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:26:38.209 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:26:38.211 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:26:38.212 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:26:38.212 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:26:43.304 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5089.3626ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:26:43.304 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:26:43.305 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5092.6794ms
2024-10-01 23:26:43.306 +07:00 [INF] Received HTTP response headers after 5093.531ms - 503
2024-10-01 23:26:43.307 +07:00 [INF] End processing HTTP request after 5098.3615ms - 503
2024-10-01 23:26:43.310 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:26:43.311 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:26:43.315 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:26:43.318 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:26:43.320 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:26:43.321 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:26:43.576 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7042/api/v1/Product/GetAll - null null
2024-10-01 23:26:43.617 +07:00 [INF] Executing endpoint 'TechShopSolution.API.Controllers.ProductController.GetAllV1 (TechShopSolution.API)'
2024-10-01 23:26:43.620 +07:00 [INF] Route matched with {action = "GetAllV1", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllV1() on controller TechShopSolution.API.Controllers.ProductController (TechShopSolution.API).
2024-10-01 23:26:43.621 +07:00 [INF] Executing action method TechShopSolution.API.Controllers.ProductController.GetAllV1 (TechShopSolution.API) - Validation state: "Valid"
2024-10-01 23:26:43.707 +07:00 [INF] Getting all products
2024-10-01 23:26:43.752 +07:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BestSeller], [p].[BrandId], [p].[Code], [p].[CreateAt], [p].[DeleteAt], [p].[Descriptions], [p].[Featured], [p].[Image], [p].[Instock], [p].[IsActive], [p].[IsDelete], [p].[MetaDescriptions], [p].[MetaKeywords], [p].[MetaTitle], [p].[MoreImages], [p].[Name], [p].[PromotionPrice], [p].[ShortDesc], [p].[Slug], [p].[Specifications], [p].[UnitPrice], [p].[UpdateAt], [p].[ViewCount], [p].[Warranty], [b].[Id], [t].[CateId], [t].[ProductId], [t].[Id], [t].[CateName], [t].[CateSlug], [t].[CreateAt], [t].[DeleteAt], [t].[IsActive], [t].[IsDelete], [t].[MetaDescriptions], [t].[MetaKeywords], [t].[MetaTitle], [t].[ParentId], [t].[UpdateAt], [b].[BrandName], [b].[BrandSlug], [b].[CreateAt], [b].[DeleteAt], [b].[IsActive], [b].[IsDelete], [b].[MetaDescriptions], [b].[MetaKeywords], [b].[MetaTitle], [b].[UpdateAt]
FROM [Product] AS [p]
INNER JOIN [Brand] AS [b] ON [p].[BrandId] = [b].[Id]
LEFT JOIN (
    SELECT [c].[CateId], [c].[ProductId], [c0].[Id], [c0].[CateName], [c0].[CateSlug], [c0].[CreateAt], [c0].[DeleteAt], [c0].[IsActive], [c0].[IsDelete], [c0].[MetaDescriptions], [c0].[MetaKeywords], [c0].[MetaTitle], [c0].[ParentId], [c0].[UpdateAt]
    FROM [CategoryProduct] AS [c]
    INNER JOIN [Category] AS [c0] ON [c].[CateId] = [c0].[Id]
) AS [t] ON [p].[Id] = [t].[ProductId]
ORDER BY [p].[Id], [b].[Id], [t].[CateId], [t].[ProductId]
2024-10-01 23:26:43.894 +07:00 [INF] Executed action method TechShopSolution.API.Controllers.ProductController.GetAllV1 (TechShopSolution.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 273.5969ms.
2024-10-01 23:26:43.895 +07:00 [INF] Executing OkObjectResult, writing value of type 'TechShopSolution.Application.Models.Common.StandardResponse`1[[System.Collections.Generic.IEnumerable`1[[TechShopSolution.Application.Models.Products.ProductDTO, TechShopSolution.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-10-01 23:26:43.913 +07:00 [INF] Executed action TechShopSolution.API.Controllers.ProductController.GetAllV1 (TechShopSolution.API) in 292.7006ms
2024-10-01 23:26:43.913 +07:00 [INF] Executed endpoint 'TechShopSolution.API.Controllers.ProductController.GetAllV1 (TechShopSolution.API)'
2024-10-01 23:26:43.913 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7042/api/v1/Product/GetAll - 200 null application/json; charset=utf-8 337.6445ms
2024-10-01 23:26:53.366 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:26:53.368 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:26:53.369 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:26:53.370 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:26:53.370 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:26:58.306 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7042/api/v2/Product/GetAll - null null
2024-10-01 23:26:58.310 +07:00 [INF] Executing endpoint 'TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API)'
2024-10-01 23:26:58.314 +07:00 [INF] Route matched with {action = "GetAllV2", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllV2(Int32, Int32) on controller TechShopSolution.API.Controllers.ProductController (TechShopSolution.API).
2024-10-01 23:26:58.315 +07:00 [INF] Executing action method TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API) - Validation state: "Valid"
2024-10-01 23:26:58.439 +07:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Product] AS [p]
2024-10-01 23:26:58.441 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5066.5189ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:26:58.441 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:26:58.441 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5071.4622ms
2024-10-01 23:26:58.443 +07:00 [INF] Received HTTP response headers after 5072.3014ms - 503
2024-10-01 23:26:58.445 +07:00 [INF] End processing HTTP request after 5077.3651ms - 503
2024-10-01 23:26:58.449 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:26:58.453 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:26:58.456 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:26:58.457 +07:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-10-01 23:26:58.459 +07:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-10-01 23:26:58.461 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:26:58.463 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:26:58.464 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:26:58.507 +07:00 [INF] Executed DbCommand (27ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[BestSeller], [t].[BrandId], [t].[Code], [t].[CreateAt], [t].[DeleteAt], [t].[Descriptions], [t].[Featured], [t].[Image], [t].[Instock], [t].[IsActive], [t].[IsDelete], [t].[MetaDescriptions], [t].[MetaKeywords], [t].[MetaTitle], [t].[MoreImages], [t].[Name], [t].[PromotionPrice], [t].[ShortDesc], [t].[Slug], [t].[Specifications], [t].[UnitPrice], [t].[UpdateAt], [t].[ViewCount], [t].[Warranty], [b].[Id], [t0].[CateId], [t0].[ProductId], [t0].[Id], [t0].[CateName], [t0].[CateSlug], [t0].[CreateAt], [t0].[DeleteAt], [t0].[IsActive], [t0].[IsDelete], [t0].[MetaDescriptions], [t0].[MetaKeywords], [t0].[MetaTitle], [t0].[ParentId], [t0].[UpdateAt], [b].[BrandName], [b].[BrandSlug], [b].[CreateAt], [b].[DeleteAt], [b].[IsActive], [b].[IsDelete], [b].[MetaDescriptions], [b].[MetaKeywords], [b].[MetaTitle], [b].[UpdateAt]
FROM (
    SELECT [p].[Id], [p].[BestSeller], [p].[BrandId], [p].[Code], [p].[CreateAt], [p].[DeleteAt], [p].[Descriptions], [p].[Featured], [p].[Image], [p].[Instock], [p].[IsActive], [p].[IsDelete], [p].[MetaDescriptions], [p].[MetaKeywords], [p].[MetaTitle], [p].[MoreImages], [p].[Name], [p].[PromotionPrice], [p].[ShortDesc], [p].[Slug], [p].[Specifications], [p].[UnitPrice], [p].[UpdateAt], [p].[ViewCount], [p].[Warranty]
    FROM [Product] AS [p]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
INNER JOIN [Brand] AS [b] ON [t].[BrandId] = [b].[Id]
LEFT JOIN (
    SELECT [c].[CateId], [c].[ProductId], [c0].[Id], [c0].[CateName], [c0].[CateSlug], [c0].[CreateAt], [c0].[DeleteAt], [c0].[IsActive], [c0].[IsDelete], [c0].[MetaDescriptions], [c0].[MetaKeywords], [c0].[MetaTitle], [c0].[ParentId], [c0].[UpdateAt]
    FROM [CategoryProduct] AS [c]
    INNER JOIN [Category] AS [c0] ON [c].[CateId] = [c0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ProductId]
ORDER BY [t].[Id], [b].[Id], [t0].[CateId], [t0].[ProductId]
2024-10-01 23:26:58.536 +07:00 [INF] Executed action method TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 220.6338ms.
2024-10-01 23:26:58.536 +07:00 [INF] Executing OkObjectResult, writing value of type 'TechShopSolution.Application.Models.Common.StandardResponse`1[[System.Collections.Generic.IEnumerable`1[[TechShopSolution.Application.Models.Products.ProductDTO, TechShopSolution.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-10-01 23:26:58.539 +07:00 [INF] Executed action TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API) in 224.3196ms
2024-10-01 23:26:58.539 +07:00 [INF] Executed endpoint 'TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API)'
2024-10-01 23:26:58.539 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7042/api/v2/Product/GetAll - 200 null application/json; charset=utf-8 233.1683ms
2024-10-01 23:27:08.515 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:27:08.516 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:27:08.518 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:27:08.519 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:27:08.519 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:27:13.619 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5097.1869ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:27:13.619 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:27:13.620 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5100.6642ms
2024-10-01 23:27:13.621 +07:00 [INF] Received HTTP response headers after 5101.8181ms - 503
2024-10-01 23:27:13.623 +07:00 [INF] End processing HTTP request after 5106.1718ms - 503
2024-10-01 23:27:13.625 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:27:13.627 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:27:13.629 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:27:13.631 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:27:13.633 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:27:13.634 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:27:23.673 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:27:23.675 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:27:23.677 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:27:23.678 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:27:23.679 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:27:28.756 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5074.9537ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:27:28.756 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:27:28.757 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5078.5063ms
2024-10-01 23:27:28.759 +07:00 [INF] Received HTTP response headers after 5079.559ms - 503
2024-10-01 23:27:28.760 +07:00 [INF] End processing HTTP request after 5085.3462ms - 503
2024-10-01 23:27:28.762 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:27:28.764 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:27:28.767 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:27:28.770 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:27:28.771 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:27:28.773 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:27:38.819 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:27:38.821 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:27:38.822 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:27:38.823 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:27:38.824 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:27:43.888 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5060.5332ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:27:43.888 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:27:43.888 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5065.4046ms
2024-10-01 23:27:43.891 +07:00 [INF] Received HTTP response headers after 5066.8297ms - 503
2024-10-01 23:27:43.895 +07:00 [INF] End processing HTTP request after 5072.5868ms - 503
2024-10-01 23:27:43.897 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:27:43.899 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:27:43.901 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:27:43.904 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:27:43.907 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:27:43.910 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:27:53.955 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:27:53.957 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:27:53.958 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:27:53.963 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:27:53.964 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:27:59.042 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5075.7317ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:27:59.042 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:27:59.042 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5078.7524ms
2024-10-01 23:27:59.045 +07:00 [INF] Received HTTP response headers after 5084.2244ms - 503
2024-10-01 23:27:59.046 +07:00 [INF] End processing HTTP request after 5089.6814ms - 503
2024-10-01 23:27:59.048 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:27:59.050 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:27:59.052 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:27:59.055 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:27:59.057 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:27:59.058 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:28:09.096 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:28:09.098 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:28:09.099 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:28:09.101 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:28:09.101 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:28:14.179 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5076.5218ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:28:14.180 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:28:14.180 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5079.6077ms
2024-10-01 23:28:14.181 +07:00 [INF] Received HTTP response headers after 5080.4585ms - 503
2024-10-01 23:28:14.183 +07:00 [INF] End processing HTTP request after 5084.8587ms - 503
2024-10-01 23:28:14.185 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:28:14.186 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:28:14.189 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:28:14.192 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:28:14.194 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:28:14.196 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:28:28.911 +07:00 [INF] User profile is available. Using 'C:\Users\User\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-10-01 23:28:29.272 +07:00 [INF] Initializing UI Database
2024-10-01 23:28:29.902 +07:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2024-10-01 23:28:29.919 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-10-01 23:28:30.087 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Configurations" AS "c")
2024-10-01 23:28:30.128 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:28:30.436 +07:00 [INF] Now listening on: https://localhost:7042
2024-10-01 23:28:30.438 +07:00 [INF] Now listening on: http://localhost:5216
2024-10-01 23:28:30.480 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:28:30.512 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:28:30.514 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:28:30.545 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-10-01 23:28:30.547 +07:00 [INF] Hosting environment: Development
2024-10-01 23:28:30.549 +07:00 [INF] Content root path: D:\Projects\TechShopSolution\TechShopSolution.API
2024-10-01 23:28:30.683 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:28:30.865 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7042/ - null null
2024-10-01 23:28:30.929 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:28:30.931 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7042/ - 404 0 null 66.5967ms
2024-10-01 23:28:30.981 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7042/, Response status code: 404
2024-10-01 23:28:33.889 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7042/swagger/index.html - null null
2024-10-01 23:28:33.951 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7042/swagger/index.html - 200 null text/html;charset=utf-8 62.1466ms
2024-10-01 23:28:34.089 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7042/swagger/v1/swagger.json - null null
2024-10-01 23:28:34.182 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7042/swagger/v1/swagger.json - 200 null application/json;charset=utf-8 92.9328ms
2024-10-01 23:28:36.195 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5233.1714ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:28:36.227 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:28:36.228 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5578.9128ms
2024-10-01 23:28:36.240 +07:00 [INF] Received HTTP response headers after 5717.537ms - 503
2024-10-01 23:28:36.243 +07:00 [INF] End processing HTTP request after 5735.0478ms - 503
2024-10-01 23:28:36.325 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:28:36.339 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:28:36.390 +07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2024-10-01 23:28:36.397 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:28:36.509 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:28:36.514 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:28:36.516 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:28:46.714 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:28:46.716 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:28:46.717 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:28:46.719 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:28:46.722 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:28:51.805 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5079.7533ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:28:51.806 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:28:51.806 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5087.4857ms
2024-10-01 23:28:51.810 +07:00 [INF] Received HTTP response headers after 5089.7851ms - 503
2024-10-01 23:28:51.811 +07:00 [INF] End processing HTTP request after 5095.3943ms - 503
2024-10-01 23:28:51.817 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:28:51.819 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:28:51.822 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:28:51.826 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:28:51.828 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:28:51.830 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:29:01.870 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:29:01.872 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:29:01.873 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:29:01.875 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:29:01.875 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:29:11.032 +07:00 [INF] User profile is available. Using 'C:\Users\User\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-10-01 23:29:11.365 +07:00 [INF] Initializing UI Database
2024-10-01 23:29:12.149 +07:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2024-10-01 23:29:12.177 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-10-01 23:29:20.857 +07:00 [INF] User profile is available. Using 'C:\Users\User\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-10-01 23:29:21.203 +07:00 [INF] Initializing UI Database
2024-10-01 23:29:21.816 +07:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2024-10-01 23:29:21.833 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-10-01 23:29:21.978 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Configurations" AS "c")
2024-10-01 23:29:22.008 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:29:22.283 +07:00 [INF] Now listening on: https://localhost:7042
2024-10-01 23:29:22.285 +07:00 [INF] Now listening on: http://localhost:5216
2024-10-01 23:29:22.322 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:29:22.351 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:29:22.353 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:29:22.388 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-10-01 23:29:22.391 +07:00 [INF] Hosting environment: Development
2024-10-01 23:29:22.394 +07:00 [INF] Content root path: D:\Projects\TechShopSolution\TechShopSolution.API
2024-10-01 23:29:22.581 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:29:22.623 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7042/ - null null
2024-10-01 23:29:22.721 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:29:22.735 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7042/ - 404 0 null 103.9477ms
2024-10-01 23:29:22.799 +07:00 [INF] Request reached the end of the middleware pipeline without being handled by application code. Request path: GET https://localhost:7042/, Response status code: 404
2024-10-01 23:29:27.973 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5214.3154ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:29:28.014 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:29:28.016 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5489.1805ms
2024-10-01 23:29:28.027 +07:00 [INF] Received HTTP response headers after 5666.2318ms - 503
2024-10-01 23:29:28.029 +07:00 [INF] End processing HTTP request after 5683.6661ms - 503
2024-10-01 23:29:28.108 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:29:28.120 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:29:28.170 +07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2024-10-01 23:29:28.177 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:29:28.291 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:29:28.296 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:29:28.298 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:29:38.397 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:29:38.399 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:29:38.401 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:29:38.402 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:29:38.406 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:29:43.485 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5076.4559ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:29:43.486 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:29:43.486 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5084.4221ms
2024-10-01 23:29:43.489 +07:00 [INF] Received HTTP response headers after 5086.1681ms - 503
2024-10-01 23:29:43.491 +07:00 [INF] End processing HTTP request after 5091.8981ms - 503
2024-10-01 23:29:43.496 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:29:43.525 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (Size = 11), @p1='?' (DbType = Boolean), @p2='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Failures" ("HealthCheckName", "IsUpAndRunning", "LastNotified")
VALUES (@p0, @p1, @p2)
RETURNING "Id";
2024-10-01 23:29:43.609 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:29:43.613 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:29:43.615 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:29:43.617 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:29:53.670 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:29:53.673 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:29:53.674 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:29:53.675 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:29:53.676 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:29:57.078 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7042/api/Product/GetAll - null null
2024-10-01 23:29:57.090 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-10-01 23:29:57.093 +07:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-10-01 23:29:57.098 +07:00 [INF] AuthenticationScheme: apiKey was challenged.
2024-10-01 23:29:57.107 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7042/api/Product/GetAll - 401 null application/json 29.1481ms
2024-10-01 23:29:58.745 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5067.0019ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:29:58.746 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:29:58.746 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5070.7741ms
2024-10-01 23:29:58.748 +07:00 [INF] Received HTTP response headers after 5071.8621ms - 503
2024-10-01 23:29:58.751 +07:00 [INF] End processing HTTP request after 5077.7408ms - 503
2024-10-01 23:29:58.754 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:29:58.755 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:29:58.758 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:29:58.761 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:29:58.763 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:29:58.765 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:30:08.808 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:30:08.810 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:30:08.811 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:30:08.813 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:30:08.813 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:30:13.902 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5085.0199ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:30:13.902 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:30:13.902 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5089.8249ms
2024-10-01 23:30:13.904 +07:00 [INF] Received HTTP response headers after 5091.1691ms - 503
2024-10-01 23:30:13.906 +07:00 [INF] End processing HTTP request after 5095.9702ms - 503
2024-10-01 23:30:13.909 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:30:13.911 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:30:13.913 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:30:13.916 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:30:13.918 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:30:13.919 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:30:14.690 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7042/api/Product/GetAll - null null
2024-10-01 23:30:14.693 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-10-01 23:30:14.693 +07:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-10-01 23:30:14.695 +07:00 [INF] AuthenticationScheme: apiKey was challenged.
2024-10-01 23:30:14.695 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7042/api/Product/GetAll - 401 null application/json 6.0329ms
2024-10-01 23:30:15.743 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7042/api/Product/GetAll - null null
2024-10-01 23:30:15.746 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-10-01 23:30:15.746 +07:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-10-01 23:30:15.749 +07:00 [INF] AuthenticationScheme: apiKey was challenged.
2024-10-01 23:30:15.750 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7042/api/Product/GetAll - 401 null application/json 5.7612ms
2024-10-01 23:30:16.907 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7042/api/Product/GetAll - null null
2024-10-01 23:30:16.907 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-10-01 23:30:16.907 +07:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-10-01 23:30:16.910 +07:00 [INF] AuthenticationScheme: apiKey was challenged.
2024-10-01 23:30:16.910 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7042/api/Product/GetAll - 401 null application/json 3.651ms
2024-10-01 23:30:23.971 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:30:23.972 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:30:23.973 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:30:23.975 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:30:23.975 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:30:29.144 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5165.9166ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:30:29.145 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:30:29.145 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5170.9123ms
2024-10-01 23:30:29.148 +07:00 [INF] Received HTTP response headers after 5171.8024ms - 503
2024-10-01 23:30:29.150 +07:00 [INF] End processing HTTP request after 5177.0535ms - 503
2024-10-01 23:30:29.154 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:30:29.157 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:30:29.160 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:30:29.164 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:30:29.167 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:30:29.170 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:30:31.867 +07:00 [INF] Request starting HTTP/2 GET https://localhost:7042/api/v2/Product/GetAll - null null
2024-10-01 23:30:31.918 +07:00 [INF] Executing endpoint 'TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API)'
2024-10-01 23:30:31.932 +07:00 [INF] Route matched with {action = "GetAllV2", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllV2(Int32, Int32) on controller TechShopSolution.API.Controllers.ProductController (TechShopSolution.API).
2024-10-01 23:30:31.949 +07:00 [INF] Executing action method TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API) - Validation state: "Valid"
2024-10-01 23:30:32.343 +07:00 [INF] Executed DbCommand (34ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Product] AS [p]
2024-10-01 23:30:32.366 +07:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-10-01 23:30:32.368 +07:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-10-01 23:30:32.439 +07:00 [INF] Executed DbCommand (40ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[BestSeller], [t].[BrandId], [t].[Code], [t].[CreateAt], [t].[DeleteAt], [t].[Descriptions], [t].[Featured], [t].[Image], [t].[Instock], [t].[IsActive], [t].[IsDelete], [t].[MetaDescriptions], [t].[MetaKeywords], [t].[MetaTitle], [t].[MoreImages], [t].[Name], [t].[PromotionPrice], [t].[ShortDesc], [t].[Slug], [t].[Specifications], [t].[UnitPrice], [t].[UpdateAt], [t].[ViewCount], [t].[Warranty], [b].[Id], [t0].[CateId], [t0].[ProductId], [t0].[Id], [t0].[CateName], [t0].[CateSlug], [t0].[CreateAt], [t0].[DeleteAt], [t0].[IsActive], [t0].[IsDelete], [t0].[MetaDescriptions], [t0].[MetaKeywords], [t0].[MetaTitle], [t0].[ParentId], [t0].[UpdateAt], [b].[BrandName], [b].[BrandSlug], [b].[CreateAt], [b].[DeleteAt], [b].[IsActive], [b].[IsDelete], [b].[MetaDescriptions], [b].[MetaKeywords], [b].[MetaTitle], [b].[UpdateAt]
FROM (
    SELECT [p].[Id], [p].[BestSeller], [p].[BrandId], [p].[Code], [p].[CreateAt], [p].[DeleteAt], [p].[Descriptions], [p].[Featured], [p].[Image], [p].[Instock], [p].[IsActive], [p].[IsDelete], [p].[MetaDescriptions], [p].[MetaKeywords], [p].[MetaTitle], [p].[MoreImages], [p].[Name], [p].[PromotionPrice], [p].[ShortDesc], [p].[Slug], [p].[Specifications], [p].[UnitPrice], [p].[UpdateAt], [p].[ViewCount], [p].[Warranty]
    FROM [Product] AS [p]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
INNER JOIN [Brand] AS [b] ON [t].[BrandId] = [b].[Id]
LEFT JOIN (
    SELECT [c].[CateId], [c].[ProductId], [c0].[Id], [c0].[CateName], [c0].[CateSlug], [c0].[CreateAt], [c0].[DeleteAt], [c0].[IsActive], [c0].[IsDelete], [c0].[MetaDescriptions], [c0].[MetaKeywords], [c0].[MetaTitle], [c0].[ParentId], [c0].[UpdateAt]
    FROM [CategoryProduct] AS [c]
    INNER JOIN [Category] AS [c0] ON [c].[CateId] = [c0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ProductId]
ORDER BY [t].[Id], [b].[Id], [t0].[CateId], [t0].[ProductId]
2024-10-01 23:30:32.566 +07:00 [INF] Executed action method TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 613.2617ms.
2024-10-01 23:30:32.571 +07:00 [INF] Executing OkObjectResult, writing value of type 'TechShopSolution.Application.Models.Common.StandardResponse`1[[System.Collections.Generic.IEnumerable`1[[TechShopSolution.Application.Models.Products.ProductDTO, TechShopSolution.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-10-01 23:30:32.601 +07:00 [INF] Executed action TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API) in 666.5253ms
2024-10-01 23:30:32.602 +07:00 [INF] Executed endpoint 'TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API)'
2024-10-01 23:30:32.604 +07:00 [INF] Request finished HTTP/2 GET https://localhost:7042/api/v2/Product/GetAll - 200 null application/json; charset=utf-8 737.6724ms
2024-10-01 23:30:39.212 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:30:39.214 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:30:39.216 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:30:39.217 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:30:39.217 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:30:44.301 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5080.9031ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:30:44.301 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:30:44.301 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5084.5531ms
2024-10-01 23:30:44.303 +07:00 [INF] Received HTTP response headers after 5085.4571ms - 503
2024-10-01 23:30:44.305 +07:00 [INF] End processing HTTP request after 5090.6202ms - 503
2024-10-01 23:30:44.307 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:30:44.309 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:30:44.311 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:30:44.313 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:30:44.315 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:30:44.317 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:30:47.133 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/api/v2/Product/GetAll - application/json 0
2024-10-01 23:30:47.138 +07:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '01/10/2024 4:07:38 PM', Current time (UTC): '01/10/2024 4:30:47 PM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-10-01 23:30:47.140 +07:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '01/10/2024 4:07:38 PM', Current time (UTC): '01/10/2024 4:30:47 PM'.
2024-10-01 23:30:47.143 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/api/v2/Product/GetAll - 307 0 null 9.1787ms
2024-10-01 23:30:54.367 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:30:54.369 +07:00 [INF] Start processing HTTP request GET https://localhost:7042/health
2024-10-01 23:30:54.371 +07:00 [INF] Sending HTTP request GET https://localhost:7042/health
2024-10-01 23:30:54.372 +07:00 [INF] Request starting HTTP/1.1 GET https://localhost:7042/health - null null
2024-10-01 23:30:54.372 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:30:59.472 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5097.6991ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:30:59.473 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:30:59.473 +07:00 [INF] Request finished HTTP/1.1 GET https://localhost:7042/health - 503 null application/json 5101.2874ms
2024-10-01 23:30:59.475 +07:00 [INF] Received HTTP response headers after 5102.1401ms - 503
2024-10-01 23:30:59.476 +07:00 [INF] End processing HTTP request after 5107.1574ms - 503
2024-10-01 23:30:59.479 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:30:59.481 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:30:59.484 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:30:59.488 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:30:59.490 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:30:59.492 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:31:20.053 +07:00 [INF] User profile is available. Using 'C:\Users\User\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2024-10-01 23:31:20.276 +07:00 [INF] Initializing UI Database
2024-10-01 23:31:20.781 +07:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*) FROM "sqlite_master" WHERE "name" = '__EFMigrationsHistory' AND "type" = 'table';
2024-10-01 23:31:20.795 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2024-10-01 23:31:20.918 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (
    SELECT 1
    FROM "Configurations" AS "c")
2024-10-01 23:31:20.943 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:31:21.065 +07:00 [INF] Now listening on: http://localhost:5216
2024-10-01 23:31:21.092 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:31:21.105 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 23:31:21.105 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 23:31:21.120 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2024-10-01 23:31:21.121 +07:00 [INF] Hosting environment: Development
2024-10-01 23:31:21.121 +07:00 [INF] Content root path: D:\Projects\TechShopSolution\TechShopSolution.API
2024-10-01 23:31:21.152 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 23:31:21.197 +07:00 [WRN] Failed to determine the https port for redirect.
2024-10-01 23:31:21.199 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:31:26.301 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5084.9746ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:31:26.339 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:31:26.341 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5199.1616ms
2024-10-01 23:31:26.348 +07:00 [INF] Received HTTP response headers after 5237.3637ms - 503
2024-10-01 23:31:26.348 +07:00 [INF] End processing HTTP request after 5248.3319ms - 503
2024-10-01 23:31:26.412 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:31:26.420 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:31:26.459 +07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2024-10-01 23:31:26.464 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:31:26.565 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:31:26.568 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:31:26.569 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:31:36.729 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:31:36.729 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 23:31:36.730 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 23:31:36.733 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 23:31:36.735 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:31:41.793 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5057.1675ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:31:41.794 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:31:41.794 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5063.3512ms
2024-10-01 23:31:41.795 +07:00 [INF] Received HTTP response headers after 5064.8795ms - 503
2024-10-01 23:31:41.795 +07:00 [INF] End processing HTTP request after 5065.4482ms - 503
2024-10-01 23:31:41.798 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:31:41.798 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:31:41.799 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:31:41.801 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:31:41.802 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:31:41.802 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:31:51.896 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:31:51.896 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 23:31:51.896 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 23:31:51.897 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 23:31:51.898 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:31:54.743 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/api/v2/Product/GetAll - application/json 0
2024-10-01 23:31:54.776 +07:00 [INF] Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '01/10/2024 4:07:38 PM', Current time (UTC): '01/10/2024 4:31:54 PM'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
2024-10-01 23:31:54.777 +07:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '01/10/2024 4:07:38 PM', Current time (UTC): '01/10/2024 4:31:54 PM'.
2024-10-01 23:31:54.778 +07:00 [INF] Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '01/10/2024 4:07:38 PM', Current time (UTC): '01/10/2024 4:31:54 PM'.
2024-10-01 23:31:54.781 +07:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2024-10-01 23:31:54.784 +07:00 [INF] AuthenticationScheme: Bearer was challenged.
2024-10-01 23:31:54.785 +07:00 [INF] AuthenticationScheme: apiKey was challenged.
2024-10-01 23:31:54.789 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/api/v2/Product/GetAll - 401 null application/json 46.3337ms
2024-10-01 23:31:56.980 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5079.9557ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:31:56.980 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:31:56.980 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5083.4717ms
2024-10-01 23:31:56.980 +07:00 [INF] Received HTTP response headers after 5083.8777ms - 503
2024-10-01 23:31:56.980 +07:00 [INF] End processing HTTP request after 5084.2037ms - 503
2024-10-01 23:31:56.981 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:31:56.981 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:31:56.982 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:31:56.983 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:31:56.983 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:31:56.984 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:32:06.841 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/api/v2/Product/GetAll - application/json 0
2024-10-01 23:32:06.852 +07:00 [INF] Executing endpoint 'TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API)'
2024-10-01 23:32:06.869 +07:00 [INF] Route matched with {action = "GetAllV2", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllV2(Int32, Int32) on controller TechShopSolution.API.Controllers.ProductController (TechShopSolution.API).
2024-10-01 23:32:06.881 +07:00 [INF] Executing action method TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API) - Validation state: "Valid"
2024-10-01 23:32:07.022 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:32:07.022 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 23:32:07.023 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 23:32:07.023 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 23:32:07.023 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:32:07.214 +07:00 [INF] Executed DbCommand (26ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Product] AS [p]
2024-10-01 23:32:07.230 +07:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-10-01 23:32:07.231 +07:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-10-01 23:32:07.287 +07:00 [INF] Executed DbCommand (27ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[BestSeller], [t].[BrandId], [t].[Code], [t].[CreateAt], [t].[DeleteAt], [t].[Descriptions], [t].[Featured], [t].[Image], [t].[Instock], [t].[IsActive], [t].[IsDelete], [t].[MetaDescriptions], [t].[MetaKeywords], [t].[MetaTitle], [t].[MoreImages], [t].[Name], [t].[PromotionPrice], [t].[ShortDesc], [t].[Slug], [t].[Specifications], [t].[UnitPrice], [t].[UpdateAt], [t].[ViewCount], [t].[Warranty], [b].[Id], [t0].[CateId], [t0].[ProductId], [t0].[Id], [t0].[CateName], [t0].[CateSlug], [t0].[CreateAt], [t0].[DeleteAt], [t0].[IsActive], [t0].[IsDelete], [t0].[MetaDescriptions], [t0].[MetaKeywords], [t0].[MetaTitle], [t0].[ParentId], [t0].[UpdateAt], [b].[BrandName], [b].[BrandSlug], [b].[CreateAt], [b].[DeleteAt], [b].[IsActive], [b].[IsDelete], [b].[MetaDescriptions], [b].[MetaKeywords], [b].[MetaTitle], [b].[UpdateAt]
FROM (
    SELECT [p].[Id], [p].[BestSeller], [p].[BrandId], [p].[Code], [p].[CreateAt], [p].[DeleteAt], [p].[Descriptions], [p].[Featured], [p].[Image], [p].[Instock], [p].[IsActive], [p].[IsDelete], [p].[MetaDescriptions], [p].[MetaKeywords], [p].[MetaTitle], [p].[MoreImages], [p].[Name], [p].[PromotionPrice], [p].[ShortDesc], [p].[Slug], [p].[Specifications], [p].[UnitPrice], [p].[UpdateAt], [p].[ViewCount], [p].[Warranty]
    FROM [Product] AS [p]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
INNER JOIN [Brand] AS [b] ON [t].[BrandId] = [b].[Id]
LEFT JOIN (
    SELECT [c].[CateId], [c].[ProductId], [c0].[Id], [c0].[CateName], [c0].[CateSlug], [c0].[CreateAt], [c0].[DeleteAt], [c0].[IsActive], [c0].[IsDelete], [c0].[MetaDescriptions], [c0].[MetaKeywords], [c0].[MetaTitle], [c0].[ParentId], [c0].[UpdateAt]
    FROM [CategoryProduct] AS [c]
    INNER JOIN [Category] AS [c0] ON [c].[CateId] = [c0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ProductId]
ORDER BY [t].[Id], [b].[Id], [t0].[CateId], [t0].[ProductId]
2024-10-01 23:32:07.384 +07:00 [INF] Executed action method TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 500.0418ms.
2024-10-01 23:32:07.387 +07:00 [INF] Executing OkObjectResult, writing value of type 'TechShopSolution.Application.Models.Common.StandardResponse`1[[System.Collections.Generic.IEnumerable`1[[TechShopSolution.Application.Models.Products.ProductDTO, TechShopSolution.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-10-01 23:32:07.408 +07:00 [INF] Executed action TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API) in 536.1669ms
2024-10-01 23:32:07.408 +07:00 [INF] Executed endpoint 'TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API)'
2024-10-01 23:32:07.410 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/api/v2/Product/GetAll - 200 null application/json; charset=utf-8 568.9234ms
2024-10-01 23:32:12.112 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5088.8676ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:32:12.113 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:32:12.113 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5090.1777ms
2024-10-01 23:32:12.113 +07:00 [INF] Received HTTP response headers after 5090.5126ms - 503
2024-10-01 23:32:12.113 +07:00 [INF] End processing HTTP request after 5090.7708ms - 503
2024-10-01 23:32:12.114 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:32:12.114 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:32:12.115 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:32:12.116 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:32:12.116 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:32:12.116 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:32:22.164 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:32:22.165 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 23:32:22.165 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 23:32:22.165 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 23:32:22.166 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:32:27.241 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5074.1875ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:32:27.242 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:32:27.242 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5076.4391ms
2024-10-01 23:32:27.242 +07:00 [INF] Received HTTP response headers after 5076.8538ms - 503
2024-10-01 23:32:27.242 +07:00 [INF] End processing HTTP request after 5077.164ms - 503
2024-10-01 23:32:27.243 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:32:27.244 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:32:27.245 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:32:27.247 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:32:27.247 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:32:27.247 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:32:37.285 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:32:37.285 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 23:32:37.285 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 23:32:37.286 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 23:32:37.286 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:32:42.385 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5099.1259ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:32:42.386 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:32:42.386 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5100.5122ms
2024-10-01 23:32:42.386 +07:00 [INF] Received HTTP response headers after 5100.9582ms - 503
2024-10-01 23:32:42.386 +07:00 [INF] End processing HTTP request after 5101.1833ms - 503
2024-10-01 23:32:42.387 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:32:42.387 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:32:42.388 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:32:42.389 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:32:42.389 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:32:42.389 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:32:52.426 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:32:52.426 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 23:32:52.426 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 23:32:52.426 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 23:32:52.427 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:32:57.507 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5078.9121ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:32:57.508 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:32:57.508 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5082.0408ms
2024-10-01 23:32:57.509 +07:00 [INF] Received HTTP response headers after 5082.4244ms - 503
2024-10-01 23:32:57.509 +07:00 [INF] End processing HTTP request after 5082.8587ms - 503
2024-10-01 23:32:57.511 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:32:57.511 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:32:57.512 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:32:57.513 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:32:57.513 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:32:57.514 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:33:07.555 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:33:07.556 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 23:33:07.556 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 23:33:07.556 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 23:33:07.556 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:33:12.643 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5085.9077ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:33:12.643 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:33:12.643 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5087.0978ms
2024-10-01 23:33:12.643 +07:00 [INF] Received HTTP response headers after 5087.4994ms - 503
2024-10-01 23:33:12.643 +07:00 [INF] End processing HTTP request after 5087.7012ms - 503
2024-10-01 23:33:12.644 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:33:12.644 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:33:12.645 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:33:12.646 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:33:12.646 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:33:12.646 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:33:13.054 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/api/v2/Product/GetAll - application/json 39
2024-10-01 23:33:13.056 +07:00 [INF] Executing endpoint 'TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API)'
2024-10-01 23:33:13.057 +07:00 [INF] Route matched with {action = "GetAllV2", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllV2(Int32, Int32) on controller TechShopSolution.API.Controllers.ProductController (TechShopSolution.API).
2024-10-01 23:33:13.057 +07:00 [INF] Executing action method TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API) - Validation state: "Valid"
2024-10-01 23:33:13.071 +07:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Product] AS [p]
2024-10-01 23:33:13.089 +07:00 [INF] Executed DbCommand (15ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[BestSeller], [t].[BrandId], [t].[Code], [t].[CreateAt], [t].[DeleteAt], [t].[Descriptions], [t].[Featured], [t].[Image], [t].[Instock], [t].[IsActive], [t].[IsDelete], [t].[MetaDescriptions], [t].[MetaKeywords], [t].[MetaTitle], [t].[MoreImages], [t].[Name], [t].[PromotionPrice], [t].[ShortDesc], [t].[Slug], [t].[Specifications], [t].[UnitPrice], [t].[UpdateAt], [t].[ViewCount], [t].[Warranty], [b].[Id], [t0].[CateId], [t0].[ProductId], [t0].[Id], [t0].[CateName], [t0].[CateSlug], [t0].[CreateAt], [t0].[DeleteAt], [t0].[IsActive], [t0].[IsDelete], [t0].[MetaDescriptions], [t0].[MetaKeywords], [t0].[MetaTitle], [t0].[ParentId], [t0].[UpdateAt], [b].[BrandName], [b].[BrandSlug], [b].[CreateAt], [b].[DeleteAt], [b].[IsActive], [b].[IsDelete], [b].[MetaDescriptions], [b].[MetaKeywords], [b].[MetaTitle], [b].[UpdateAt]
FROM (
    SELECT [p].[Id], [p].[BestSeller], [p].[BrandId], [p].[Code], [p].[CreateAt], [p].[DeleteAt], [p].[Descriptions], [p].[Featured], [p].[Image], [p].[Instock], [p].[IsActive], [p].[IsDelete], [p].[MetaDescriptions], [p].[MetaKeywords], [p].[MetaTitle], [p].[MoreImages], [p].[Name], [p].[PromotionPrice], [p].[ShortDesc], [p].[Slug], [p].[Specifications], [p].[UnitPrice], [p].[UpdateAt], [p].[ViewCount], [p].[Warranty]
    FROM [Product] AS [p]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
INNER JOIN [Brand] AS [b] ON [t].[BrandId] = [b].[Id]
LEFT JOIN (
    SELECT [c].[CateId], [c].[ProductId], [c0].[Id], [c0].[CateName], [c0].[CateSlug], [c0].[CreateAt], [c0].[DeleteAt], [c0].[IsActive], [c0].[IsDelete], [c0].[MetaDescriptions], [c0].[MetaKeywords], [c0].[MetaTitle], [c0].[ParentId], [c0].[UpdateAt]
    FROM [CategoryProduct] AS [c]
    INNER JOIN [Category] AS [c0] ON [c].[CateId] = [c0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ProductId]
ORDER BY [t].[Id], [b].[Id], [t0].[CateId], [t0].[ProductId]
2024-10-01 23:33:13.097 +07:00 [INF] Executed action method TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 39.5195ms.
2024-10-01 23:33:13.097 +07:00 [INF] Executing OkObjectResult, writing value of type 'TechShopSolution.Application.Models.Common.StandardResponse`1[[System.Collections.Generic.IEnumerable`1[[TechShopSolution.Application.Models.Products.ProductDTO, TechShopSolution.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-10-01 23:33:13.098 +07:00 [INF] Executed action TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API) in 41.5377ms
2024-10-01 23:33:13.098 +07:00 [INF] Executed endpoint 'TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API)'
2024-10-01 23:33:13.098 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/api/v2/Product/GetAll - 200 null application/json; charset=utf-8 44.1884ms
2024-10-01 23:33:14.108 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/api/v2/Product/GetAll - application/json 39
2024-10-01 23:33:14.109 +07:00 [INF] Executing endpoint 'TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API)'
2024-10-01 23:33:14.109 +07:00 [INF] Route matched with {action = "GetAllV2", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllV2(Int32, Int32) on controller TechShopSolution.API.Controllers.ProductController (TechShopSolution.API).
2024-10-01 23:33:14.110 +07:00 [INF] Executing action method TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API) - Validation state: "Valid"
2024-10-01 23:33:14.159 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Product] AS [p]
2024-10-01 23:33:14.162 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[BestSeller], [t].[BrandId], [t].[Code], [t].[CreateAt], [t].[DeleteAt], [t].[Descriptions], [t].[Featured], [t].[Image], [t].[Instock], [t].[IsActive], [t].[IsDelete], [t].[MetaDescriptions], [t].[MetaKeywords], [t].[MetaTitle], [t].[MoreImages], [t].[Name], [t].[PromotionPrice], [t].[ShortDesc], [t].[Slug], [t].[Specifications], [t].[UnitPrice], [t].[UpdateAt], [t].[ViewCount], [t].[Warranty], [b].[Id], [t0].[CateId], [t0].[ProductId], [t0].[Id], [t0].[CateName], [t0].[CateSlug], [t0].[CreateAt], [t0].[DeleteAt], [t0].[IsActive], [t0].[IsDelete], [t0].[MetaDescriptions], [t0].[MetaKeywords], [t0].[MetaTitle], [t0].[ParentId], [t0].[UpdateAt], [b].[BrandName], [b].[BrandSlug], [b].[CreateAt], [b].[DeleteAt], [b].[IsActive], [b].[IsDelete], [b].[MetaDescriptions], [b].[MetaKeywords], [b].[MetaTitle], [b].[UpdateAt]
FROM (
    SELECT [p].[Id], [p].[BestSeller], [p].[BrandId], [p].[Code], [p].[CreateAt], [p].[DeleteAt], [p].[Descriptions], [p].[Featured], [p].[Image], [p].[Instock], [p].[IsActive], [p].[IsDelete], [p].[MetaDescriptions], [p].[MetaKeywords], [p].[MetaTitle], [p].[MoreImages], [p].[Name], [p].[PromotionPrice], [p].[ShortDesc], [p].[Slug], [p].[Specifications], [p].[UnitPrice], [p].[UpdateAt], [p].[ViewCount], [p].[Warranty]
    FROM [Product] AS [p]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
INNER JOIN [Brand] AS [b] ON [t].[BrandId] = [b].[Id]
LEFT JOIN (
    SELECT [c].[CateId], [c].[ProductId], [c0].[Id], [c0].[CateName], [c0].[CateSlug], [c0].[CreateAt], [c0].[DeleteAt], [c0].[IsActive], [c0].[IsDelete], [c0].[MetaDescriptions], [c0].[MetaKeywords], [c0].[MetaTitle], [c0].[ParentId], [c0].[UpdateAt]
    FROM [CategoryProduct] AS [c]
    INNER JOIN [Category] AS [c0] ON [c].[CateId] = [c0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ProductId]
ORDER BY [t].[Id], [b].[Id], [t0].[CateId], [t0].[ProductId]
2024-10-01 23:33:14.168 +07:00 [INF] Executed action method TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 58.3048ms.
2024-10-01 23:33:14.168 +07:00 [INF] Executing OkObjectResult, writing value of type 'TechShopSolution.Application.Models.Common.StandardResponse`1[[System.Collections.Generic.IEnumerable`1[[TechShopSolution.Application.Models.Products.ProductDTO, TechShopSolution.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-10-01 23:33:14.168 +07:00 [INF] Executed action TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API) in 59.1004ms
2024-10-01 23:33:14.168 +07:00 [INF] Executed endpoint 'TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API)'
2024-10-01 23:33:14.169 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/api/v2/Product/GetAll - 200 null application/json; charset=utf-8 60.1515ms
2024-10-01 23:33:22.689 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:33:22.689 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 23:33:22.689 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 23:33:22.692 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 23:33:22.692 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:33:27.777 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5084.3285ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:33:27.777 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:33:27.778 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5085.5181ms
2024-10-01 23:33:27.778 +07:00 [INF] Received HTTP response headers after 5088.0514ms - 503
2024-10-01 23:33:27.778 +07:00 [INF] End processing HTTP request after 5088.3656ms - 503
2024-10-01 23:33:27.778 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:33:27.779 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:33:27.779 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:33:27.780 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:33:27.780 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:33:27.780 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:33:28.672 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/api/v2/Product/GetAll - application/json 39
2024-10-01 23:33:28.674 +07:00 [INF] Executing endpoint 'TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API)'
2024-10-01 23:33:28.674 +07:00 [INF] Route matched with {action = "GetAllV2", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllV2(Int32, Int32) on controller TechShopSolution.API.Controllers.ProductController (TechShopSolution.API).
2024-10-01 23:33:28.674 +07:00 [INF] Executing action method TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API) - Validation state: "Valid"
2024-10-01 23:33:28.676 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Product] AS [p]
2024-10-01 23:33:28.678 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[BestSeller], [t].[BrandId], [t].[Code], [t].[CreateAt], [t].[DeleteAt], [t].[Descriptions], [t].[Featured], [t].[Image], [t].[Instock], [t].[IsActive], [t].[IsDelete], [t].[MetaDescriptions], [t].[MetaKeywords], [t].[MetaTitle], [t].[MoreImages], [t].[Name], [t].[PromotionPrice], [t].[ShortDesc], [t].[Slug], [t].[Specifications], [t].[UnitPrice], [t].[UpdateAt], [t].[ViewCount], [t].[Warranty], [b].[Id], [t0].[CateId], [t0].[ProductId], [t0].[Id], [t0].[CateName], [t0].[CateSlug], [t0].[CreateAt], [t0].[DeleteAt], [t0].[IsActive], [t0].[IsDelete], [t0].[MetaDescriptions], [t0].[MetaKeywords], [t0].[MetaTitle], [t0].[ParentId], [t0].[UpdateAt], [b].[BrandName], [b].[BrandSlug], [b].[CreateAt], [b].[DeleteAt], [b].[IsActive], [b].[IsDelete], [b].[MetaDescriptions], [b].[MetaKeywords], [b].[MetaTitle], [b].[UpdateAt]
FROM (
    SELECT [p].[Id], [p].[BestSeller], [p].[BrandId], [p].[Code], [p].[CreateAt], [p].[DeleteAt], [p].[Descriptions], [p].[Featured], [p].[Image], [p].[Instock], [p].[IsActive], [p].[IsDelete], [p].[MetaDescriptions], [p].[MetaKeywords], [p].[MetaTitle], [p].[MoreImages], [p].[Name], [p].[PromotionPrice], [p].[ShortDesc], [p].[Slug], [p].[Specifications], [p].[UnitPrice], [p].[UpdateAt], [p].[ViewCount], [p].[Warranty]
    FROM [Product] AS [p]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_1 ROWS ONLY
) AS [t]
INNER JOIN [Brand] AS [b] ON [t].[BrandId] = [b].[Id]
LEFT JOIN (
    SELECT [c].[CateId], [c].[ProductId], [c0].[Id], [c0].[CateName], [c0].[CateSlug], [c0].[CreateAt], [c0].[DeleteAt], [c0].[IsActive], [c0].[IsDelete], [c0].[MetaDescriptions], [c0].[MetaKeywords], [c0].[MetaTitle], [c0].[ParentId], [c0].[UpdateAt]
    FROM [CategoryProduct] AS [c]
    INNER JOIN [Category] AS [c0] ON [c].[CateId] = [c0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ProductId]
ORDER BY [t].[Id], [b].[Id], [t0].[CateId], [t0].[ProductId]
2024-10-01 23:33:28.682 +07:00 [INF] Executed action method TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 7.2592ms.
2024-10-01 23:33:28.682 +07:00 [INF] Executing OkObjectResult, writing value of type 'TechShopSolution.Application.Models.Common.StandardResponse`1[[System.Collections.Generic.IEnumerable`1[[TechShopSolution.Application.Models.Products.ProductDTO, TechShopSolution.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-10-01 23:33:28.682 +07:00 [INF] Executed action TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API) in 7.8712ms
2024-10-01 23:33:28.682 +07:00 [INF] Executed endpoint 'TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API)'
2024-10-01 23:33:28.682 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/api/v2/Product/GetAll - 200 null application/json; charset=utf-8 10.4671ms
2024-10-01 23:33:37.815 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:33:37.815 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 23:33:37.815 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 23:33:37.816 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 23:33:37.816 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:33:42.885 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5068.4246ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:33:42.885 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:33:42.885 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5069.7786ms
2024-10-01 23:33:42.885 +07:00 [INF] Received HTTP response headers after 5070.1504ms - 503
2024-10-01 23:33:42.886 +07:00 [INF] End processing HTTP request after 5070.3866ms - 503
2024-10-01 23:33:42.886 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:33:42.886 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:33:42.887 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:33:42.887 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:33:42.888 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:33:42.888 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:33:52.920 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:33:52.920 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 23:33:52.920 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 23:33:52.921 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 23:33:52.921 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:33:57.992 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5070.412ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:33:57.992 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:33:57.992 +07:00 [INF] Received HTTP response headers after 5072.0648ms - 503
2024-10-01 23:33:57.992 +07:00 [INF] End processing HTTP request after 5072.2764ms - 503
2024-10-01 23:33:57.992 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5071.8053ms
2024-10-01 23:33:57.993 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:33:57.993 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:33:57.994 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:33:57.994 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:33:57.994 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:33:57.995 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:34:08.047 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:34:08.047 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 23:34:08.047 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 23:34:08.047 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 23:34:08.048 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:34:13.123 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5074.3832ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:34:13.123 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:34:13.123 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5075.7304ms
2024-10-01 23:34:13.123 +07:00 [INF] Received HTTP response headers after 5076.1046ms - 503
2024-10-01 23:34:13.123 +07:00 [INF] End processing HTTP request after 5076.315ms - 503
2024-10-01 23:34:13.124 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:34:13.124 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:34:13.124 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:34:13.125 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:34:13.125 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:34:13.126 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:34:23.167 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:34:23.167 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 23:34:23.167 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 23:34:23.168 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 23:34:23.168 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:34:28.228 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5060.1431ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:34:28.229 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:34:28.229 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5061.4492ms
2024-10-01 23:34:28.229 +07:00 [INF] Received HTTP response headers after 5061.7851ms - 503
2024-10-01 23:34:28.229 +07:00 [INF] End processing HTTP request after 5062.0003ms - 503
2024-10-01 23:34:28.230 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:34:28.230 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:34:28.230 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:34:28.231 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:34:28.231 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:34:28.231 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:34:38.262 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:34:38.262 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 23:34:38.262 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 23:34:38.263 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 23:34:38.263 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:34:43.328 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5064.7442ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:34:43.328 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:34:43.329 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5066.0145ms
2024-10-01 23:34:43.329 +07:00 [INF] Received HTTP response headers after 5066.3414ms - 503
2024-10-01 23:34:43.329 +07:00 [INF] End processing HTTP request after 5066.5574ms - 503
2024-10-01 23:34:43.330 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:34:43.330 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:34:43.330 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:34:43.331 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:34:43.331 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:34:43.331 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:34:53.369 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:34:53.369 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 23:34:53.369 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 23:34:53.369 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 23:34:53.369 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:34:58.422 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5052.5833ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:34:58.423 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:34:58.423 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5053.7561ms
2024-10-01 23:34:58.423 +07:00 [INF] Received HTTP response headers after 5054.0886ms - 503
2024-10-01 23:34:58.423 +07:00 [INF] End processing HTTP request after 5054.2873ms - 503
2024-10-01 23:34:58.424 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:34:58.424 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:34:58.424 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:34:58.425 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:34:58.425 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:34:58.425 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:35:08.466 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:35:08.466 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 23:35:08.466 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 23:35:08.467 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 23:35:08.467 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:35:10.864 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/api/v2/Product/GetAll?pageNumber=2&pageSize=5 - null null
2024-10-01 23:35:10.865 +07:00 [INF] Executing endpoint 'TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API)'
2024-10-01 23:35:10.865 +07:00 [INF] Route matched with {action = "GetAllV2", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllV2(Int32, Int32) on controller TechShopSolution.API.Controllers.ProductController (TechShopSolution.API).
2024-10-01 23:35:10.873 +07:00 [INF] Executing action method TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API) - Validation state: "Valid"
2024-10-01 23:35:10.881 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Product] AS [p]
2024-10-01 23:35:10.887 +07:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-10-01 23:35:10.887 +07:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2024-10-01 23:35:10.920 +07:00 [INF] Executed DbCommand (20ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[BestSeller], [t].[BrandId], [t].[Code], [t].[CreateAt], [t].[DeleteAt], [t].[Descriptions], [t].[Featured], [t].[Image], [t].[Instock], [t].[IsActive], [t].[IsDelete], [t].[MetaDescriptions], [t].[MetaKeywords], [t].[MetaTitle], [t].[MoreImages], [t].[Name], [t].[PromotionPrice], [t].[ShortDesc], [t].[Slug], [t].[Specifications], [t].[UnitPrice], [t].[UpdateAt], [t].[ViewCount], [t].[Warranty], [b].[Id], [t0].[CateId], [t0].[ProductId], [t0].[Id], [t0].[CateName], [t0].[CateSlug], [t0].[CreateAt], [t0].[DeleteAt], [t0].[IsActive], [t0].[IsDelete], [t0].[MetaDescriptions], [t0].[MetaKeywords], [t0].[MetaTitle], [t0].[ParentId], [t0].[UpdateAt], [b].[BrandName], [b].[BrandSlug], [b].[CreateAt], [b].[DeleteAt], [b].[IsActive], [b].[IsDelete], [b].[MetaDescriptions], [b].[MetaKeywords], [b].[MetaTitle], [b].[UpdateAt]
FROM (
    SELECT [p].[Id], [p].[BestSeller], [p].[BrandId], [p].[Code], [p].[CreateAt], [p].[DeleteAt], [p].[Descriptions], [p].[Featured], [p].[Image], [p].[Instock], [p].[IsActive], [p].[IsDelete], [p].[MetaDescriptions], [p].[MetaKeywords], [p].[MetaTitle], [p].[MoreImages], [p].[Name], [p].[PromotionPrice], [p].[ShortDesc], [p].[Slug], [p].[Specifications], [p].[UnitPrice], [p].[UpdateAt], [p].[ViewCount], [p].[Warranty]
    FROM [Product] AS [p]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
INNER JOIN [Brand] AS [b] ON [t].[BrandId] = [b].[Id]
LEFT JOIN (
    SELECT [c].[CateId], [c].[ProductId], [c0].[Id], [c0].[CateName], [c0].[CateSlug], [c0].[CreateAt], [c0].[DeleteAt], [c0].[IsActive], [c0].[IsDelete], [c0].[MetaDescriptions], [c0].[MetaKeywords], [c0].[MetaTitle], [c0].[ParentId], [c0].[UpdateAt]
    FROM [CategoryProduct] AS [c]
    INNER JOIN [Category] AS [c0] ON [c].[CateId] = [c0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ProductId]
ORDER BY [t].[Id], [b].[Id], [t0].[CateId], [t0].[ProductId]
2024-10-01 23:35:10.924 +07:00 [INF] Executed action method TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 50.8383ms.
2024-10-01 23:35:10.924 +07:00 [INF] Executing OkObjectResult, writing value of type 'TechShopSolution.Application.Models.Common.StandardResponse`1[[System.Collections.Generic.IEnumerable`1[[TechShopSolution.Application.Models.Products.ProductDTO, TechShopSolution.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-10-01 23:35:10.925 +07:00 [INF] Executed action TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API) in 59.6172ms
2024-10-01 23:35:10.925 +07:00 [INF] Executed endpoint 'TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API)'
2024-10-01 23:35:10.925 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/api/v2/Product/GetAll?pageNumber=2&pageSize=5 - 200 null application/json; charset=utf-8 60.7903ms
2024-10-01 23:35:13.546 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5078.7964ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:35:13.547 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:35:13.547 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5080.0381ms
2024-10-01 23:35:13.547 +07:00 [INF] Received HTTP response headers after 5080.2894ms - 503
2024-10-01 23:35:13.547 +07:00 [INF] End processing HTTP request after 5080.5055ms - 503
2024-10-01 23:35:13.548 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:35:13.548 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:35:13.548 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:35:13.549 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:35:13.549 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:35:13.549 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:35:23.580 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:35:23.580 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 23:35:23.580 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 23:35:23.583 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 23:35:23.583 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:35:27.316 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/api/v2/Product/GetAll?pageNumber=2&pageSize=2 - null null
2024-10-01 23:35:27.317 +07:00 [INF] Executing endpoint 'TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API)'
2024-10-01 23:35:27.317 +07:00 [INF] Route matched with {action = "GetAllV2", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllV2(Int32, Int32) on controller TechShopSolution.API.Controllers.ProductController (TechShopSolution.API).
2024-10-01 23:35:27.318 +07:00 [INF] Executing action method TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API) - Validation state: "Valid"
2024-10-01 23:35:27.346 +07:00 [INF] Executed DbCommand (26ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM [Product] AS [p]
2024-10-01 23:35:27.383 +07:00 [INF] Executed DbCommand (34ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[BestSeller], [t].[BrandId], [t].[Code], [t].[CreateAt], [t].[DeleteAt], [t].[Descriptions], [t].[Featured], [t].[Image], [t].[Instock], [t].[IsActive], [t].[IsDelete], [t].[MetaDescriptions], [t].[MetaKeywords], [t].[MetaTitle], [t].[MoreImages], [t].[Name], [t].[PromotionPrice], [t].[ShortDesc], [t].[Slug], [t].[Specifications], [t].[UnitPrice], [t].[UpdateAt], [t].[ViewCount], [t].[Warranty], [b].[Id], [t0].[CateId], [t0].[ProductId], [t0].[Id], [t0].[CateName], [t0].[CateSlug], [t0].[CreateAt], [t0].[DeleteAt], [t0].[IsActive], [t0].[IsDelete], [t0].[MetaDescriptions], [t0].[MetaKeywords], [t0].[MetaTitle], [t0].[ParentId], [t0].[UpdateAt], [b].[BrandName], [b].[BrandSlug], [b].[CreateAt], [b].[DeleteAt], [b].[IsActive], [b].[IsDelete], [b].[MetaDescriptions], [b].[MetaKeywords], [b].[MetaTitle], [b].[UpdateAt]
FROM (
    SELECT [p].[Id], [p].[BestSeller], [p].[BrandId], [p].[Code], [p].[CreateAt], [p].[DeleteAt], [p].[Descriptions], [p].[Featured], [p].[Image], [p].[Instock], [p].[IsActive], [p].[IsDelete], [p].[MetaDescriptions], [p].[MetaKeywords], [p].[MetaTitle], [p].[MoreImages], [p].[Name], [p].[PromotionPrice], [p].[ShortDesc], [p].[Slug], [p].[Specifications], [p].[UnitPrice], [p].[UpdateAt], [p].[ViewCount], [p].[Warranty]
    FROM [Product] AS [p]
    ORDER BY (SELECT 1)
    OFFSET @__p_0 ROWS FETCH NEXT @__p_0 ROWS ONLY
) AS [t]
INNER JOIN [Brand] AS [b] ON [t].[BrandId] = [b].[Id]
LEFT JOIN (
    SELECT [c].[CateId], [c].[ProductId], [c0].[Id], [c0].[CateName], [c0].[CateSlug], [c0].[CreateAt], [c0].[DeleteAt], [c0].[IsActive], [c0].[IsDelete], [c0].[MetaDescriptions], [c0].[MetaKeywords], [c0].[MetaTitle], [c0].[ParentId], [c0].[UpdateAt]
    FROM [CategoryProduct] AS [c]
    INNER JOIN [Category] AS [c0] ON [c].[CateId] = [c0].[Id]
) AS [t0] ON [t].[Id] = [t0].[ProductId]
ORDER BY [t].[Id], [b].[Id], [t0].[CateId], [t0].[ProductId]
2024-10-01 23:35:27.391 +07:00 [INF] Executed action method TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 72.0515ms.
2024-10-01 23:35:27.391 +07:00 [INF] Executing OkObjectResult, writing value of type 'TechShopSolution.Application.Models.Common.StandardResponse`1[[System.Collections.Generic.IEnumerable`1[[TechShopSolution.Application.Models.Products.ProductDTO, TechShopSolution.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-10-01 23:35:27.391 +07:00 [INF] Executed action TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API) in 74.5669ms
2024-10-01 23:35:27.392 +07:00 [INF] Executed endpoint 'TechShopSolution.API.Controllers.ProductController.GetAllV2 (TechShopSolution.API)'
2024-10-01 23:35:27.392 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/api/v2/Product/GetAll?pageNumber=2&pageSize=2 - 200 null application/json; charset=utf-8 76.5365ms
2024-10-01 23:35:28.665 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5081.0289ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:35:28.665 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:35:28.666 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5083.0393ms
2024-10-01 23:35:28.666 +07:00 [INF] Received HTTP response headers after 5085.58ms - 503
2024-10-01 23:35:28.666 +07:00 [INF] End processing HTTP request after 5085.8601ms - 503
2024-10-01 23:35:28.667 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:35:28.667 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:35:28.667 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:35:28.668 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:35:28.668 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:35:28.668 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:35:38.717 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:35:38.718 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 23:35:38.718 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 23:35:38.718 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 23:35:38.718 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:35:41.907 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/api/v1/Product/GetAll?pageNumber=2&pageSize=2 - null null
2024-10-01 23:35:41.909 +07:00 [INF] Executing endpoint 'TechShopSolution.API.Controllers.ProductController.GetAllV1 (TechShopSolution.API)'
2024-10-01 23:35:41.913 +07:00 [INF] Route matched with {action = "GetAllV1", controller = "Product"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllV1() on controller TechShopSolution.API.Controllers.ProductController (TechShopSolution.API).
2024-10-01 23:35:41.913 +07:00 [INF] Executing action method TechShopSolution.API.Controllers.ProductController.GetAllV1 (TechShopSolution.API) - Validation state: "Valid"
2024-10-01 23:35:41.918 +07:00 [INF] Getting all products
2024-10-01 23:35:41.951 +07:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [p].[Id], [p].[BestSeller], [p].[BrandId], [p].[Code], [p].[CreateAt], [p].[DeleteAt], [p].[Descriptions], [p].[Featured], [p].[Image], [p].[Instock], [p].[IsActive], [p].[IsDelete], [p].[MetaDescriptions], [p].[MetaKeywords], [p].[MetaTitle], [p].[MoreImages], [p].[Name], [p].[PromotionPrice], [p].[ShortDesc], [p].[Slug], [p].[Specifications], [p].[UnitPrice], [p].[UpdateAt], [p].[ViewCount], [p].[Warranty], [b].[Id], [t].[CateId], [t].[ProductId], [t].[Id], [t].[CateName], [t].[CateSlug], [t].[CreateAt], [t].[DeleteAt], [t].[IsActive], [t].[IsDelete], [t].[MetaDescriptions], [t].[MetaKeywords], [t].[MetaTitle], [t].[ParentId], [t].[UpdateAt], [b].[BrandName], [b].[BrandSlug], [b].[CreateAt], [b].[DeleteAt], [b].[IsActive], [b].[IsDelete], [b].[MetaDescriptions], [b].[MetaKeywords], [b].[MetaTitle], [b].[UpdateAt]
FROM [Product] AS [p]
INNER JOIN [Brand] AS [b] ON [p].[BrandId] = [b].[Id]
LEFT JOIN (
    SELECT [c].[CateId], [c].[ProductId], [c0].[Id], [c0].[CateName], [c0].[CateSlug], [c0].[CreateAt], [c0].[DeleteAt], [c0].[IsActive], [c0].[IsDelete], [c0].[MetaDescriptions], [c0].[MetaKeywords], [c0].[MetaTitle], [c0].[ParentId], [c0].[UpdateAt]
    FROM [CategoryProduct] AS [c]
    INNER JOIN [Category] AS [c0] ON [c].[CateId] = [c0].[Id]
) AS [t] ON [p].[Id] = [t].[ProductId]
ORDER BY [p].[Id], [b].[Id], [t].[CateId], [t].[ProductId]
2024-10-01 23:35:41.984 +07:00 [INF] Executed action method TechShopSolution.API.Controllers.ProductController.GetAllV1 (TechShopSolution.API), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 70.2912ms.
2024-10-01 23:35:41.984 +07:00 [INF] Executing OkObjectResult, writing value of type 'TechShopSolution.Application.Models.Common.StandardResponse`1[[System.Collections.Generic.IEnumerable`1[[TechShopSolution.Application.Models.Products.ProductDTO, TechShopSolution.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]], System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2024-10-01 23:35:41.985 +07:00 [INF] Executed action TechShopSolution.API.Controllers.ProductController.GetAllV1 (TechShopSolution.API) in 71.8797ms
2024-10-01 23:35:41.985 +07:00 [INF] Executed endpoint 'TechShopSolution.API.Controllers.ProductController.GetAllV1 (TechShopSolution.API)'
2024-10-01 23:35:41.985 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/api/v1/Product/GetAll?pageNumber=2&pageSize=2 - 200 null application/json; charset=utf-8 77.9843ms
2024-10-01 23:35:43.823 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5104.71ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:35:43.824 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:35:43.824 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5105.9057ms
2024-10-01 23:35:43.824 +07:00 [INF] Received HTTP response headers after 5106.151ms - 503
2024-10-01 23:35:43.824 +07:00 [INF] End processing HTTP request after 5106.402ms - 503
2024-10-01 23:35:43.825 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:35:43.825 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:35:43.825 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:35:43.826 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:35:43.826 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:35:43.826 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:35:53.871 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:35:53.871 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 23:35:53.871 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 23:35:53.872 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 23:35:53.872 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:35:58.962 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5090.0825ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:35:58.963 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:35:58.963 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5091.456ms
2024-10-01 23:35:58.963 +07:00 [INF] Received HTTP response headers after 5091.7591ms - 503
2024-10-01 23:35:58.963 +07:00 [INF] End processing HTTP request after 5092.0579ms - 503
2024-10-01 23:35:58.964 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:35:58.964 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:35:58.964 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:35:58.965 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:35:58.965 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:35:58.965 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:36:09.003 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:36:09.003 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 23:36:09.003 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 23:36:09.004 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 23:36:09.004 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:36:14.076 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5071.9455ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:36:14.077 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:36:14.077 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5073.0511ms
2024-10-01 23:36:14.077 +07:00 [INF] Received HTTP response headers after 5073.3305ms - 503
2024-10-01 23:36:14.077 +07:00 [INF] End processing HTTP request after 5073.6174ms - 503
2024-10-01 23:36:14.078 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:36:14.078 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:36:14.078 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:36:14.079 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:36:14.079 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:36:14.079 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:36:24.123 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:36:24.124 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 23:36:24.124 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 23:36:24.124 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 23:36:24.124 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:36:29.197 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5072.2016ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:36:29.197 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:36:29.197 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5073.3804ms
2024-10-01 23:36:29.197 +07:00 [INF] Received HTTP response headers after 5073.6483ms - 503
2024-10-01 23:36:29.197 +07:00 [INF] End processing HTTP request after 5073.8604ms - 503
2024-10-01 23:36:29.198 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:36:29.198 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:36:29.199 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:36:29.199 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:36:29.199 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:36:29.200 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:36:39.246 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "c"."Id", "c"."DiscoveryService", "c"."Name", "c"."Uri"
FROM "Configurations" AS "c"
2024-10-01 23:36:39.246 +07:00 [INF] Start processing HTTP request GET http://localhost:5216/health
2024-10-01 23:36:39.246 +07:00 [INF] Sending HTTP request GET http://localhost:5216/health
2024-10-01 23:36:39.247 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:5216/health - null null
2024-10-01 23:36:39.247 +07:00 [INF] Executing endpoint 'Health checks'
2024-10-01 23:36:40.954 +07:00 [INF] Application is shutting down...
2024-10-01 23:36:44.330 +07:00 [ERR] Health check kafka with status "Unhealthy" completed after 5083.0413ms with message 'Kafka is not reachable.'
Confluent.Kafka.ProduceException`2[Confluent.Kafka.Null,System.String]: Local: Message timed out
   at Confluent.Kafka.Producer`2.ProduceAsync(TopicPartition topicPartition, Message`2 message, CancellationToken cancellationToken)
   at KafkaHealthCheck.CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken) in D:\Projects\TechShopSolution\TechShopSolution.Infrastructure\HealthCheck\KafkaHealthCheck.cs:line 26
2024-10-01 23:36:44.331 +07:00 [INF] Executed endpoint 'Health checks'
2024-10-01 23:36:44.331 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:5216/health - 503 null application/json 5084.1631ms
2024-10-01 23:36:44.331 +07:00 [INF] Received HTTP response headers after 5084.5147ms - 503
2024-10-01 23:36:44.331 +07:00 [INF] End processing HTTP request after 5084.728ms - 503
2024-10-01 23:36:44.332 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__ToLower_0='?' (Size = 11), @__p_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."HealthCheckName", "t"."IsUpAndRunning", "t"."LastNotified"
FROM (
    SELECT "f"."Id", "f"."HealthCheckName", "f"."IsUpAndRunning", "f"."LastNotified"
    FROM "Failures" AS "f"
    WHERE lower("f"."HealthCheckName") = @__ToLower_0
    ORDER BY "f"."LastNotified" DESC
    LIMIT @__p_1
) AS "t"
ORDER BY "t"."LastNotified" DESC
LIMIT 2
2024-10-01 23:36:44.332 +07:00 [INF] Notification is sent on same window time.
2024-10-01 23:36:44.332 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@__configuration_Name_0='?' (Size = 11)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."DiscoveryService", "t"."LastExecuted", "t"."Name", "t"."OnStateFrom", "t"."Status", "t"."Uri", "h"."Id", "h"."Description", "h"."HealthCheckExecutionId", "h"."Name", "h"."On", "h"."Status", "h0"."Id", "h0"."Description", "h0"."Duration", "h0"."HealthCheckExecutionId", "h0"."Name", "h0"."Status", "h0"."Tags"
FROM (
    SELECT "e"."Id", "e"."DiscoveryService", "e"."LastExecuted", "e"."Name", "e"."OnStateFrom", "e"."Status", "e"."Uri"
    FROM "Executions" AS "e"
    WHERE "e"."Name" = @__configuration_Name_0
    LIMIT 2
) AS "t"
LEFT JOIN "HealthCheckExecutionHistories" AS "h" ON "t"."Id" = "h"."HealthCheckExecutionId"
LEFT JOIN "HealthCheckExecutionEntries" AS "h0" ON "t"."Id" = "h0"."HealthCheckExecutionId"
ORDER BY "t"."Id", "h"."Id"
2024-10-01 23:36:44.333 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = DateTime)], CommandType='"Text"', CommandTimeout='30']
UPDATE "Executions" SET "LastExecuted" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:36:44.333 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
2024-10-01 23:36:44.333 +07:00 [INF] Executed DbCommand (0ms) [Parameters=[@p1='?' (DbType = Int32), @p0='?' (DbType = Time)], CommandType='"Text"', CommandTimeout='30']
UPDATE "HealthCheckExecutionEntries" SET "Duration" = @p0
WHERE "Id" = @p1
RETURNING 1;
